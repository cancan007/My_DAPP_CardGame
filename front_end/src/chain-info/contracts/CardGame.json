{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_mscTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "allowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "betMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "competedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comp_token",
          "type": "address"
        }
      ],
      "name": "drawCards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "game_state",
      "outputs": [
        {
          "internalType": "enum CardGame.GAME_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPlayerSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mscToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mscTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playerCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "repayBetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendMSCToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalPot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wagerOfPlayer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "3": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol",
    "4": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFRequestIDBase.sol",
    "5": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "7": "contracts/CardGame.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardGame.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1303
      ],
      "CardGame": [
        954
      ],
      "Context": [
        1324
      ],
      "IERC20": [
        1136
      ],
      "LinkTokenInterface": [
        1469
      ],
      "Ownable": [
        1058
      ],
      "VRFConsumerBase": [
        1257
      ],
      "VRFRequestIDBase": [
        1374
      ]
    },
    "id": 955,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 955,
        "sourceUnit": 1059,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 955,
        "sourceUnit": 1137,
        "src": "110:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 955,
        "sourceUnit": 1304,
        "src": "239:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 955,
        "sourceUnit": 1258,
        "src": "353:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1257,
              "src": "465:15:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "465:15:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1058,
              "src": "482:7:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:7"
          }
        ],
        "canonicalName": "CardGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 954,
        "linearizedBaseContracts": [
          954,
          1058,
          1324,
          1257,
          1374
        ],
        "name": "CardGame",
        "nameLocation": "453:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61728f39",
            "id": 11,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "511:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "496:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 13,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "539:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "524:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "524:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 17,
            "name": "RequestedRandomness",
            "nameLocation": "554:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "582:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "574:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "573:19:7"
            },
            "src": "548:45:7"
          },
          {
            "canonicalName": "CardGame.GAME_STATE",
            "id": 21,
            "members": [
              {
                "id": 18,
                "name": "OPEN",
                "nameLocation": "625:4:7",
                "nodeType": "EnumValue",
                "src": "625:4:7"
              },
              {
                "id": 19,
                "name": "CLOSED",
                "nameLocation": "639:6:7",
                "nodeType": "EnumValue",
                "src": "639:6:7"
              },
              {
                "id": 20,
                "name": "CALCULATING_WINNER",
                "nameLocation": "655:18:7",
                "nodeType": "EnumValue",
                "src": "655:18:7"
              }
            ],
            "name": "GAME_STATE",
            "nameLocation": "604:10:7",
            "nodeType": "EnumDefinition",
            "src": "599:80:7"
          },
          {
            "constant": false,
            "functionSelector": "8ae43b54",
            "id": 24,
            "mutability": "mutable",
            "name": "game_state",
            "nameLocation": "702:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "684:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_GAME_STATE_$21",
              "typeString": "enum CardGame.GAME_STATE"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "GAME_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "684:10:7"
              },
              "referencedDeclaration": 21,
              "src": "684:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_GAME_STATE_$21",
                "typeString": "enum CardGame.GAME_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87cd6ad2",
            "id": 26,
            "mutability": "mutable",
            "name": "mscTokenAddress",
            "nameLocation": "733:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "718:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "718:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe05cc9c",
            "id": 29,
            "mutability": "mutable",
            "name": "mscToken",
            "nameLocation": "768:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "754:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1136",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1136,
                "src": "754:6:7"
              },
              "referencedDeclaration": 1136,
              "src": "754:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1136",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:184:7",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "996:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1006:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "996:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:7"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1024:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1030:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1024:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:10:7"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1044:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 55,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1057:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1057:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "1044:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:30:7"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1084:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "_mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1102:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1084:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:34:7"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "mscToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1128:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "_mscTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1146:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "1139:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1136_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1139:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1128:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:35:7"
                }
              ]
            },
            "id": 70,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "962:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 43,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "979:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1257,
                  "src": "946:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "946:39:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "812:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "804:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "845:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "837:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "868:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "860:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_keyHash",
                  "nameLocation": "890:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "882:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_mscTokenAddress",
                  "nameLocation": "916:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "908:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:144:7"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:7"
            },
            "scope": 954,
            "src": "783:387:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66ce6dab",
            "id": 76,
            "mutability": "mutable",
            "name": "wagerOfPlayer",
            "nameLocation": "1278:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1223:68:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 71,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1231:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1223:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 74,
                "keyType": {
                  "id": 72,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1250:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1242:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 73,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1261:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bd9c47e3",
            "id": 80,
            "mutability": "mutable",
            "name": "tokenPriceFeeds",
            "nameLocation": "1374:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1339:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1347:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1339:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 78,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1358:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c753122",
            "id": 85,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "1507:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1470:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 84,
              "keyType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1478:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1470:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 82,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1489:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 83,
                "nodeType": "ArrayTypeName",
                "src": "1489:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 88,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "1537:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1520:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 86,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1520:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 87,
              "nodeType": "ArrayTypeName",
              "src": "1520:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66a1df65",
            "id": 92,
            "mutability": "mutable",
            "name": "totalPot",
            "nameLocation": "1663:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1628:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 89,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1636:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1628:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 90,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1647:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6d7a2fc",
            "id": 95,
            "mutability": "mutable",
            "name": "playerCounter",
            "nameLocation": "1788:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1773:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1773:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 94,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1804:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e7de3e1",
            "id": 98,
            "mutability": "mutable",
            "name": "cardsNumber",
            "nameLocation": "1828:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1811:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 96,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1811:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 97,
              "nodeType": "ArrayTypeName",
              "src": "1811:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfbf53ae",
            "id": 104,
            "mutability": "mutable",
            "name": "winner",
            "nameLocation": "1860:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1845:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 99,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1845:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 102,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1877:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 101,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1869:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 100,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1869:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1869:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2521cc46",
            "id": 110,
            "mutability": "mutable",
            "name": "competedToken",
            "nameLocation": "1936:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 954,
            "src": "1921:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1921:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 108,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1960:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 107,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1952:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 106,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1952:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1952:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2128:97:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2156:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2156:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 122,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2168:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "mscToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2138:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1085,
                      "src": "2138:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:38:7"
                }
              ]
            },
            "functionSelector": "0b26083c",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 114,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "2118:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2118:9:7"
              }
            ],
            "name": "sendMSCToken",
            "nameLocation": "2081:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2102:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2094:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2093:17:7"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:0:7"
            },
            "scope": 954,
            "src": "2072:153:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2285:324:7",
              "statements": [
                {
                  "body": {
                    "id": 168,
                    "nodeType": "Block",
                    "src": "2360:243:7",
                    "statements": [
                      {
                        "assignments": [
                          147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 147,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "2382:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 168,
                            "src": "2374:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2374:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 153,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 148,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "2394:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 150,
                            "indexExpression": {
                              "id": 149,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "2402:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2394:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 152,
                          "indexExpression": {
                            "id": 151,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2410:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2394:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2374:42:7"
                      },
                      {
                        "assignments": [
                          155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 155,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "2438:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 168,
                            "src": "2430:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 154,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2430:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 160,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 157,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "2479:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 158,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "2490:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 156,
                            "name": "getUserSingleTokenValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "2455:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) returns (uint256)"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2455:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2430:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 164,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "2529:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 165,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "2540:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 161,
                              "name": "mscToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2511:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1136",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1085,
                            "src": "2511:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2511:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "2511:44:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 137,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2319:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2327:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "2335:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2327:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2327:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2319:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "initializationExpression": {
                    "assignments": [
                      134
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2308:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2300:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2300:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 136,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2316:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2300:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2351:7:7",
                      "subExpression": {
                        "id": 143,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2351:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145,
                    "nodeType": "ExpressionStatement",
                    "src": "2351:7:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2295:308:7"
                }
              ]
            },
            "functionSelector": "3ff54c71",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "2275:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2275:9:7"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "2240:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2260:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2252:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:16:7"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2285:0:7"
            },
            "scope": 954,
            "src": "2231:378:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2668:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2697:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 178,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "2678:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2678:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:26:7"
                }
              ]
            },
            "functionSelector": "b53472ef",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 175,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "2658:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2658:9:7"
              }
            ],
            "name": "allowToken",
            "nameLocation": "2624:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2643:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2635:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2634:16:7"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2668:0:7"
            },
            "scope": 954,
            "src": "2615:96:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2779:212:7",
              "statements": [
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "2855:130:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 204,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2873:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 206,
                            "indexExpression": {
                              "id": 205,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2887:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2873:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 207,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "2897:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2873:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "IfStatement",
                        "src": "2869:80:7",
                        "trueBody": {
                          "id": 211,
                          "nodeType": "Block",
                          "src": "2905:44:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2930:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 191,
                              "id": 210,
                              "nodeType": "Return",
                              "src": "2923:11:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2969:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 191,
                        "id": 214,
                        "nodeType": "Return",
                        "src": "2962:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 196,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "2813:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 197,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "2821:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2821:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2813:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 216,
                  "initializationExpression": {
                    "assignments": [
                      193
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2802:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "2794:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2794:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 195,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2810:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2794:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 200,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "2843:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2852:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2843:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 203,
                    "nodeType": "ExpressionStatement",
                    "src": "2843:10:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2789:196:7"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "2726:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2749:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2741:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:16:7"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2773:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2772:6:7"
            },
            "scope": 954,
            "src": "2717:274:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "3100:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "tokenPriceFeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "3110:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "id": 228,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3126:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3110:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "3136:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3110:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3110:36:7"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 224,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "3086:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3086:9:7"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "3006:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3035:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3027:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "3051:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3043:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:36:7"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3100:0:7"
            },
            "scope": 954,
            "src": "2997:156:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "3265:410:7",
              "statements": [
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "3283:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3275:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3275:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 248,
                  "initialValue": {
                    "baseExpression": {
                      "id": 245,
                      "name": "tokenPriceFeeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3302:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 247,
                    "indexExpression": {
                      "id": 246,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "3318:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3302:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3275:50:7"
                },
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "3432:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3410:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1303",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1303,
                          "src": "3410:21:7"
                        },
                        "referencedDeclaration": 1303,
                        "src": "3410:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1303",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 253,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3479:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 252,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "3444:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1303_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3444:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1303",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3410:95:7"
                },
                {
                  "assignments": [
                    null,
                    257,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3525:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3518:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 256,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3518:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 258,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3540:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1303",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1302,
                      "src": "3540:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3540:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3515:52:7"
                },
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3585:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3577:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3577:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 266,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3604:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1303",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1264,
                          "src": "3604:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3604:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3596:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3596:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3577:48:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "3651:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3643:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 271,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3643:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3643:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 275,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3659:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 276,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3642:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 242,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "3635:33:7"
                }
              ]
            },
            "functionSelector": "f1c5d6c2",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "3168:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3190:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3182:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:16:7"
            },
            "returnParameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3243:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3252:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:18:7"
            },
            "scope": 954,
            "src": "3159:516:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "3881:229:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 288,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "3895:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 290,
                        "indexExpression": {
                          "id": 289,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "3909:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3895:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 292,
                      "indexExpression": {
                        "id": 291,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3917:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3895:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3926:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3895:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 298,
                  "nodeType": "IfStatement",
                  "src": "3891:71:7",
                  "trueBody": {
                    "id": 297,
                    "nodeType": "Block",
                    "src": "3929:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3950:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 287,
                        "id": 296,
                        "nodeType": "Return",
                        "src": "3943:8:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    300,
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3981:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "3973:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3973:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3996:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "3988:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3988:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "4022:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "4008:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4008:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3972:57:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 307,
                                    "name": "wagerOfPlayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "4048:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 309,
                                  "indexExpression": {
                                    "id": 308,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 283,
                                    "src": "4062:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4048:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "id": 310,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "4070:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4048:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 312,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 300,
                                "src": "4079:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4048:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 314,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4047:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4089:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 316,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "4093:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4089:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 318,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4088:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4047:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 320,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4046:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 287,
                  "id": 321,
                  "nodeType": "Return",
                  "src": "4039:64:7"
                }
              ]
            },
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "3779:23:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3811:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3803:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3803:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3826:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3818:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3818:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3802:31:7"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3868:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3867:9:7"
            },
            "scope": 954,
            "src": "3770:340:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "4272:349:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 330,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4286:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 332,
                        "indexExpression": {
                          "id": 331,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "4300:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4286:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "expression": {
                          "id": 333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4308:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4308:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4286:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4322:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4286:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 341,
                  "nodeType": "IfStatement",
                  "src": "4282:76:7",
                  "trueBody": {
                    "id": 340,
                    "nodeType": "Block",
                    "src": "4325:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4346:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 329,
                        "id": 339,
                        "nodeType": "Return",
                        "src": "4339:8:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    343,
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4377:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "4369:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4369:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4392:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "4384:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4384:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 347,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "4418:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 346,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "4404:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4368:57:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 350,
                                    "name": "wagerOfPlayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "4554:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 352,
                                  "indexExpression": {
                                    "id": 351,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 325,
                                    "src": "4568:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4554:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 355,
                                "indexExpression": {
                                  "expression": {
                                    "id": 353,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4576:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4576:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4554:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 356,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 343,
                                "src": "4590:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4554:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 358,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4553:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4600:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 360,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 345,
                                "src": "4604:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4600:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 362,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4599:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4553:60:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 364,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4552:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 329,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "4545:69:7"
                }
              ]
            },
            "functionSelector": "24398a85",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerSingleTokenValue",
            "nameLocation": "4172:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4206:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4198:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:16:7"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4259:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:9:7"
            },
            "scope": 954,
            "src": "4163:458:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "4800:388:7",
              "statements": [
                {
                  "assignments": [
                    375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 375,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4818:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 437,
                      "src": "4810:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 374,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4810:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 376,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:13:7"
                },
                {
                  "body": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "4886:122:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 390,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "4904:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 392,
                              "indexExpression": {
                                "id": 391,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "4912:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4904:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 394,
                            "indexExpression": {
                              "id": 393,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "4920:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4904:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 395,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "4926:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4904:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 403,
                        "nodeType": "IfStatement",
                        "src": "4900:98:7",
                        "trueBody": {
                          "id": 402,
                          "nodeType": "Block",
                          "src": "4933:65:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 397,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "4951:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 398,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 378,
                                  "src": "4959:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4951:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "4951:9:7"
                            },
                            {
                              "id": 401,
                              "nodeType": "Break",
                              "src": "4978:5:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 381,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "4853:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 382,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "4857:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 384,
                        "indexExpression": {
                          "id": 383,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4865:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4857:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4857:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4853:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 405,
                  "initializationExpression": {
                    "assignments": [
                      378
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4846:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "4838:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4838:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 380,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4850:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4838:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4881:3:7",
                      "subExpression": {
                        "id": 387,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "4881:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 389,
                    "nodeType": "ExpressionStatement",
                    "src": "4881:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "4833:175:7"
                },
                {
                  "body": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "5078:68:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 421,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "5092:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 424,
                              "indexExpression": {
                                "id": 422,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "5100:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5092:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 425,
                            "indexExpression": {
                              "id": 423,
                              "name": "e",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "5108:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5092:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 426,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "5113:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 428,
                              "indexExpression": {
                                "id": 427,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "5121:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5113:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 432,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 429,
                                "name": "e",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 407,
                                "src": "5129:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5133:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5129:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5113:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5092:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "5092:43:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 410,
                      "name": "e",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "5041:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 411,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "5045:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 413,
                          "indexExpression": {
                            "id": 412,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "5053:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5045:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5045:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5045:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5041:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 436,
                  "initializationExpression": {
                    "assignments": [
                      407
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "e",
                        "nameLocation": "5030:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "5022:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5022:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 409,
                    "initialValue": {
                      "id": 408,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "5034:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5022:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5073:3:7",
                      "subExpression": {
                        "id": 418,
                        "name": "e",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "5073:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 420,
                    "nodeType": "ExpressionStatement",
                    "src": "5073:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5017:129:7"
                }
              ]
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromPlayers",
            "nameLocation": "4742:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4768:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "4760:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4784:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "4776:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4759:31:7"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4800:0:7"
            },
            "scope": 954,
            "src": "4733:455:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "5257:645:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 446,
                            "name": "game_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5288:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 447,
                              "name": "GAME_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "5302:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                                "typeString": "type(enum CardGame.GAME_STATE)"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "5302:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "src": "5288:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 450,
                            "name": "game_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "5321:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 451,
                              "name": "GAME_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "5335:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                                "typeString": "type(enum CardGame.GAME_STATE)"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CLOSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "5335:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "src": "5321:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5288:64:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e2774206765742074686520726566756e642061667465722067616d65207374617274656421",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7",
                          "typeString": "literal_string \"You can't get the refund after game started!\""
                        },
                        "value": "You can't get the refund after game started!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7",
                          "typeString": "literal_string \"You can't get the refund after game started!\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5267:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5267:155:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "5267:155:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 459,
                              "name": "wagerOfPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "5453:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 461,
                            "indexExpression": {
                              "id": 460,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "5467:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5453:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 464,
                          "indexExpression": {
                            "expression": {
                              "id": 462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5475:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5475:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5453:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 465,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "5490:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5453:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742062657420746f6b656e206f662074686520616d6f756e7421",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5511:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d",
                          "typeString": "literal_string \"You didn't bet token of the amount!\""
                        },
                        "value": "You didn't bet token of the amount!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d",
                          "typeString": "literal_string \"You didn't bet token of the amount!\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5432:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:126:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:126:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 474,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5592:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5592:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 476,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "5604:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 471,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "5575:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 470,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "5568:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1136_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5568:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1085,
                      "src": "5568:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "5568:44:7"
                },
                {
                  "expression": {
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 479,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "5622:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 483,
                        "indexExpression": {
                          "id": 480,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5636:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5622:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 484,
                      "indexExpression": {
                        "expression": {
                          "id": 481,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5644:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5644:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5622:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 485,
                            "name": "wagerOfPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "5670:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "id": 486,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "5684:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5670:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 490,
                        "indexExpression": {
                          "expression": {
                            "id": 488,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5692:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5692:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5670:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 491,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "5718:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5670:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5622:103:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5622:103:7"
                },
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 495,
                        "name": "totalPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "5735:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 497,
                      "indexExpression": {
                        "id": 496,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "5744:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5735:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 498,
                          "name": "totalPot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "5754:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 500,
                        "indexExpression": {
                          "id": 499,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5763:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5754:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 501,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "5773:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5754:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5735:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "5735:45:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 505,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "5794:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 507,
                        "indexExpression": {
                          "id": 506,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5808:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5794:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 510,
                      "indexExpression": {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5816:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5816:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5794:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5831:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5794:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 520,
                  "nodeType": "IfStatement",
                  "src": "5790:106:7",
                  "trueBody": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "5834:62:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 514,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "5866:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 515,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5874:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5874:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 513,
                            "name": "removeFromPlayers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "5848:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5848:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "5848:37:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b81baa59",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBetToken",
            "nameLocation": "5203:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5225:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "5217:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5217:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5242:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "5234:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5216:33:7"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:7"
            },
            "scope": 954,
            "src": "5194:708:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "5946:165:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 528,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5977:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 529,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "5991:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "5991:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "5977:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774207374617274206e65772067616d652073746174652079657421",
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6022:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d",
                          "typeString": "literal_string \"Can't start new game state yet!\""
                        },
                        "value": "Can't start new game state yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d",
                          "typeString": "literal_string \"Can't start new game state yet!\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5956:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5956:109:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "5956:109:7"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 535,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6076:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 536,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "6089:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "6089:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "6076:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "6076:28:7"
                }
              ]
            },
            "functionSelector": "d65ab5f2",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "5936:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5936:9:7"
              }
            ],
            "name": "startGame",
            "nameLocation": "5917:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5926:2:7"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5946:0:7"
            },
            "scope": 954,
            "src": "5908:203:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "6175:1657:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 549,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "6193:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6203:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6193:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4120626574206d757374206265206d6f7265207468616e2030",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6206:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf",
                          "typeString": "literal_string \"A bet must be more than 0\""
                        },
                        "value": "A bet must be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf",
                          "typeString": "literal_string \"A bet must be more than 0\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6185:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6185:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 557,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "6267:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 556,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "6252:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6252:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6276:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        },
                        "value": "This token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        }
                      ],
                      "id": 555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6244:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6244:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "6244:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 563,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "6335:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 565,
                            "indexExpression": {
                              "id": 564,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "6343:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6335:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6335:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6360:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "6335:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c20746869732067616d6520697320616c72656164792066756c6c2e20506c656173652077616974206e6578742067616d652e",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6375:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba",
                          "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""
                        },
                        "value": "Sorry, this game is already full. Please wait next game."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba",
                          "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6314:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6314:129:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "6314:129:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 573,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "6461:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 574,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "6475:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "6475:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "6461:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420626574206d6f6e6579207768696c6520",
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6492:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990",
                          "typeString": "literal_string \"You can't bet money while \""
                        },
                        "value": "You can't bet money while "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990",
                          "typeString": "literal_string \"You can't bet money while \""
                        }
                      ],
                      "id": 572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6453:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "6453:68:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 580,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "6757:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 581,
                      "name": "mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "6767:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6757:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 609,
                    "nodeType": "Block",
                    "src": "7110:392:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 600,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7387:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7387:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 604,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7407:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardGame_$954",
                                    "typeString": "contract CardGame"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardGame_$954",
                                    "typeString": "contract CardGame"
                                  }
                                ],
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7399:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 602,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7399:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7399:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 606,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "7414:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 597,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 545,
                                  "src": "7366:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 596,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1136,
                                "src": "7359:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1136_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7359:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1136",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1117,
                            "src": "7359:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7359:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "7359:63:7"
                      }
                    ]
                  },
                  "id": 610,
                  "nodeType": "IfStatement",
                  "src": "6753:749:7",
                  "trueBody": {
                    "id": 595,
                    "nodeType": "Block",
                    "src": "6784:320:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 586,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6820:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6820:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 590,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6840:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardGame_$954",
                                    "typeString": "contract CardGame"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardGame_$954",
                                    "typeString": "contract CardGame"
                                  }
                                ],
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6832:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 588,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6832:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6832:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 592,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "6847:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 583,
                              "name": "mscToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "6798:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1136",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1117,
                            "src": "6798:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6798:57:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "6798:57:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 611,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "7511:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 615,
                        "indexExpression": {
                          "id": 612,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "7525:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7511:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 616,
                      "indexExpression": {
                        "expression": {
                          "id": 613,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7533:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7533:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7511:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 617,
                            "name": "wagerOfPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "7559:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 619,
                          "indexExpression": {
                            "id": 618,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "7573:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7559:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 622,
                        "indexExpression": {
                          "expression": {
                            "id": 620,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7581:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7581:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7559:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 623,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "7607:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7559:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:103:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:103:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 627,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "7628:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 629,
                        "indexExpression": {
                          "id": 628,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "7636:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7628:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7628:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7654:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7628:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "7714:70:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 640,
                              "name": "totalPot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "7728:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 642,
                            "indexExpression": {
                              "id": 641,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "7737:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7728:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 643,
                                "name": "totalPot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "7747:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 645,
                              "indexExpression": {
                                "id": 644,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "7756:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7747:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 646,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "7766:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7747:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7728:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "7728:45:7"
                      }
                    ]
                  },
                  "id": 651,
                  "nodeType": "IfStatement",
                  "src": "7624:160:7",
                  "trueBody": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "7657:51:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 633,
                              "name": "totalPot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "7671:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 635,
                            "indexExpression": {
                              "id": 634,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "7680:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7671:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 636,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 543,
                            "src": "7690:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7671:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "7671:26:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7814:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7814:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 652,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "7793:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 654,
                        "indexExpression": {
                          "id": 653,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "7801:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7793:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7793:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7793:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "7793:32:7"
                }
              ]
            },
            "functionSelector": "f1d76a5f",
            "id": 661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "betMoney",
            "nameLocation": "6126:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6143:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "6135:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6135:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6160:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "6152:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6134:33:7"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6175:0:7"
            },
            "scope": 954,
            "src": "6117:1715:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "7895:485:7",
              "statements": [
                {
                  "expression": {
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 668,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7905:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 669,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "7918:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING_WINNER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "7918:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "7905:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "7905:42:7"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 673,
                      "name": "competedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "7957:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 674,
                      "name": "_comp_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "7973:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7957:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "7957:27:7"
                },
                {
                  "body": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "8055:185:7",
                    "statements": [
                      {
                        "assignments": [
                          691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 691,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nameLocation": "8077:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "8069:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 690,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8069:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 696,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 693,
                              "name": "keyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "8107:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 694,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "8116:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 692,
                            "name": "requestRandomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "8089:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256) returns (bytes32)"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8089:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8069:51:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 698,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "8187:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 697,
                            "name": "RequestedRandomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "8167:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8167:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 700,
                        "nodeType": "EmitStatement",
                        "src": "8162:35:7"
                      },
                      {
                        "expression": {
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 701,
                            "name": "playerCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "8211:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8228:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8211:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 704,
                        "nodeType": "ExpressionStatement",
                        "src": "8211:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 681,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "8015:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 682,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "8019:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 684,
                        "indexExpression": {
                          "id": 683,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "8027:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8019:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8019:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8015:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 706,
                  "initializationExpression": {
                    "assignments": [
                      678
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8008:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "8000:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8000:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 680,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8012:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8000:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8050:3:7",
                      "subExpression": {
                        "id": 687,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "8050:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 689,
                    "nodeType": "ExpressionStatement",
                    "src": "8050:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "7995:245:7"
                }
              ]
            },
            "functionSelector": "8b42eb7c",
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 666,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 665,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "7885:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "7885:9:7"
              }
            ],
            "name": "drawCards",
            "nameLocation": "7847:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "_comp_token",
                  "nameLocation": "7865:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "7857:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7857:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7856:21:7"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7895:0:7"
            },
            "scope": 954,
            "src": "7838:542:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1151
            ],
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "8492:383:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 717,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8523:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 718,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8537:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "8537:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "8523:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8580:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8502:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8502:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 725,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "8631:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8645:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8631:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72616e646f6d2d6e6f742d666f756e64",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8648:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab",
                          "typeString": "literal_string \"random-not-found\""
                        },
                        "value": "random-not-found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab",
                          "typeString": "literal_string \"random-not-found\""
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8623:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8623:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "8623:44:7"
                },
                {
                  "assignments": [
                    732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 732,
                      "mutability": "mutable",
                      "name": "cardNumber",
                      "nameLocation": "8685:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "8677:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8677:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 736,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 733,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "8698:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "3134",
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8712:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14_by_1",
                        "typeString": "int_const 14"
                      },
                      "value": "14"
                    },
                    "src": "8698:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8677:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 740,
                        "name": "cardNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "8741:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 737,
                        "name": "cardsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "8724:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8724:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:28:7"
                }
              ]
            },
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "8395:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 714,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8479:8:7"
            },
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "8421:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "8413:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8413:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "8441:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "8433:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8433:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8412:41:7"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8492:0:7"
            },
            "scope": 954,
            "src": "8386:489:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "8937:860:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 752,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8968:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 753,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8982:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "8982:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "8968:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47616d65206973206e6f74206f7665722079657421",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9025:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_324868838ce4c475b6547b235977624f440b1fe969a7f36753bcd3a961e754c3",
                          "typeString": "literal_string \"Game is not over yet!\""
                        },
                        "value": "Game is not over yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_324868838ce4c475b6547b235977624f440b1fe969a7f36753bcd3a961e754c3",
                          "typeString": "literal_string \"Game is not over yet!\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8947:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8947:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "8947:111:7"
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "max",
                      "nameLocation": "9278:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "9270:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9270:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 762,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9284:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9270:15:7"
                },
                {
                  "body": {
                    "id": 827,
                    "nodeType": "Block",
                    "src": "9345:423:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 774,
                              "name": "cardsNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "9363:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 776,
                            "indexExpression": {
                              "id": 775,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "9375:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9363:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 777,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "9380:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9363:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 794,
                                "name": "cardsNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "9500:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 796,
                              "indexExpression": {
                                "id": 795,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "9512:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9500:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 797,
                              "name": "max",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 760,
                              "src": "9518:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9500:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 825,
                          "nodeType": "IfStatement",
                          "src": "9496:262:7",
                          "trueBody": {
                            "id": 824,
                            "nodeType": "Block",
                            "src": "9523:235:7",
                            "statements": [
                              {
                                "assignments": [
                                  800
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 800,
                                    "mutability": "mutable",
                                    "name": "judge",
                                    "nameLocation": "9549:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 824,
                                    "src": "9541:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 799,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9541:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 804,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 801,
                                    "name": "max",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 760,
                                    "src": "9557:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9563:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9557:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "9541:23:7"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 805,
                                    "name": "judge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 800,
                                    "src": "9586:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9595:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9586:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 817,
                                      "name": "judge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 800,
                                      "src": "9683:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9692:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "9683:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 822,
                                  "nodeType": "IfStatement",
                                  "src": "9679:65:7",
                                  "trueBody": {
                                    "id": 821,
                                    "nodeType": "Block",
                                    "src": "9695:49:7",
                                    "statements": [
                                      {
                                        "id": 820,
                                        "nodeType": "Continue",
                                        "src": "9717:8:7"
                                      }
                                    ]
                                  }
                                },
                                "id": 823,
                                "nodeType": "IfStatement",
                                "src": "9582:162:7",
                                "trueBody": {
                                  "id": 816,
                                  "nodeType": "Block",
                                  "src": "9598:75:7",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 808,
                                          "name": "winner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "9620:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 809,
                                              "name": "players",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 85,
                                              "src": "9629:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(address => address[] storage ref)"
                                              }
                                            },
                                            "id": 811,
                                            "indexExpression": {
                                              "id": 810,
                                              "name": "competedToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 110,
                                              "src": "9637:13:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9629:22:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 813,
                                          "indexExpression": {
                                            "id": 812,
                                            "name": "c",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 764,
                                            "src": "9652:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9629:25:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "9620:34:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 815,
                                      "nodeType": "ExpressionStatement",
                                      "src": "9620:34:7"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "id": 826,
                        "nodeType": "IfStatement",
                        "src": "9359:399:7",
                        "trueBody": {
                          "id": 793,
                          "nodeType": "Block",
                          "src": "9385:105:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 779,
                                  "name": "max",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "9403:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 780,
                                    "name": "cardsNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "9409:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 782,
                                  "indexExpression": {
                                    "id": 781,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
                                    "src": "9421:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9409:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9403:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 784,
                              "nodeType": "ExpressionStatement",
                              "src": "9403:20:7"
                            },
                            {
                              "expression": {
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 785,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "9441:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 786,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85,
                                      "src": "9450:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 788,
                                    "indexExpression": {
                                      "id": 787,
                                      "name": "competedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 110,
                                      "src": "9458:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9450:22:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 790,
                                  "indexExpression": {
                                    "id": 789,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
                                    "src": "9473:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9450:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "9441:34:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 792,
                              "nodeType": "ExpressionStatement",
                              "src": "9441:34:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 767,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "9316:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 768,
                        "name": "cardsNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "9320:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9320:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9316:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 828,
                  "initializationExpression": {
                    "assignments": [
                      764
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "c",
                        "nameLocation": "9309:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "9301:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9301:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 766,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9313:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9301:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9340:3:7",
                      "subExpression": {
                        "id": 771,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "9340:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 773,
                    "nodeType": "ExpressionStatement",
                    "src": "9340:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "9296:472:7"
                },
                {
                  "expression": {
                    "id": 829,
                    "name": "winner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "9784:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 750,
                  "id": 830,
                  "nodeType": "Return",
                  "src": "9777:13:7"
                }
              ]
            },
            "functionSelector": "8e7ea5b2",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 747,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 746,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "8909:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "8909:9:7"
              }
            ],
            "name": "getWinner",
            "nameLocation": "8890:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8899:2:7"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "8928:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8928:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8927:9:7"
            },
            "scope": 954,
            "src": "8881:916:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 952,
              "nodeType": "Block",
              "src": "9839:1199:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 838,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "9870:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 839,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "9884:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "9884:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "9870:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9927:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9849:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9849:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "9849:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 847,
                            "name": "competedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "9993:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 846,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "9978:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9978:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10009:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        },
                        "value": "This token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9970:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9970:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "9970:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 853,
                          "name": "winner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "10068:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10086:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10078:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 854,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10078:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10078:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10068:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722069732077696e6e6572",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10102:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c",
                          "typeString": "literal_string \"Still doesn't know which player is winner\""
                        },
                        "value": "Still doesn't know which player is winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c",
                          "typeString": "literal_string \"Still doesn't know which player is winner\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10047:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10047:108:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "10047:108:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10270:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10270:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 868,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "10294:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 869,
                          "name": "totalPot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "10314:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 871,
                        "indexExpression": {
                          "id": 870,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "10323:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10314:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "competedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "10229:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 862,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "10222:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1136_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10222:21:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1117,
                      "src": "10222:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10222:125:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "10222:125:7"
                },
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 874,
                        "name": "totalPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "10449:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 876,
                      "indexExpression": {
                        "id": 875,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "10458:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10449:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10475:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10449:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "10449:27:7"
                },
                {
                  "body": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "10639:170:7",
                    "statements": [
                      {
                        "assignments": [
                          894
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 894,
                            "mutability": "mutable",
                            "name": "player",
                            "nameLocation": "10661:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 909,
                            "src": "10653:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 893,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10653:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 900,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 895,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "10670:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 897,
                            "indexExpression": {
                              "id": 896,
                              "name": "competedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "10678:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10670:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 899,
                          "indexExpression": {
                            "id": 898,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 881,
                            "src": "10693:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10670:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10653:46:7"
                      },
                      {
                        "expression": {
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 901,
                                "name": "wagerOfPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "10713:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 904,
                              "indexExpression": {
                                "id": 902,
                                "name": "competedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "10727:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10713:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 905,
                            "indexExpression": {
                              "id": 903,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "10742:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10713:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10752:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10713:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "10713:40:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 884,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 881,
                      "src": "10570:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 885,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "10578:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 887,
                        "indexExpression": {
                          "id": 886,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "10586:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10578:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10578:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10570:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 910,
                  "initializationExpression": {
                    "assignments": [
                      881
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "10547:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "10539:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10539:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 883,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10555:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10539:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10621:7:7",
                      "subExpression": {
                        "id": 890,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10621:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 892,
                    "nodeType": "ExpressionStatement",
                    "src": "10621:7:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "10521:288:7"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 911,
                      "name": "playerCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "10818:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10834:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10818:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "10818:17:7"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 915,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "10845:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 917,
                      "indexExpression": {
                        "id": 916,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "10853:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10845:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10884:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10870:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 918,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10874:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 919,
                          "nodeType": "ArrayTypeName",
                          "src": "10874:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10870:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "10845:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "10845:41:7"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 925,
                      "name": "cardsNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "10896:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10924:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10910:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 926,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10914:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 927,
                          "nodeType": "ArrayTypeName",
                          "src": "10914:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10910:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "10896:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "10896:30:7"
                },
                {
                  "expression": {
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 933,
                      "name": "winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "10936:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10953:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10945:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10945:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10945:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10936:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "10936:19:7"
                },
                {
                  "expression": {
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 940,
                      "name": "competedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "10965:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10989:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10981:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10981:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10981:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10965:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "10965:26:7"
                },
                {
                  "expression": {
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 947,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "11001:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 948,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "11014:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "11014:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "11001:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "11001:30:7"
                }
              ]
            },
            "functionSelector": "6cbc2ded",
            "id": 953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 834,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1001,
                  "src": "9829:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9829:9:7"
              }
            ],
            "name": "endGame",
            "nameLocation": "9812:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9819:2:7"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9839:0:7"
            },
            "scope": 954,
            "src": "9803:1235:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 955,
        "src": "444:10596:7",
        "usedErrors": []
      }
    ],
    "src": "32:11009:7"
  },
  "bytecode": "60c06040526000600b55600d80546001600160a01b0319908116909155600e805490911690553480156200003257600080fd5b50604051620022fe380380620022fe833981016040819052620000559162000131565b6001600160a01b0385811660a05284166080526200007333620000c2565b6002919091556003919091556004805460016001600160a81b03199091166101006001600160a01b0390941693840217179055600580546001600160a01b0319169091179055506200018f9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200012c57600080fd5b919050565b600080600080600060a086880312156200014a57600080fd5b620001558662000114565b9450620001656020870162000114565b93506040860151925060608601519150620001836080870162000114565b90509295509295909350565b60805160a051612142620001bc60003960008181610dcf015261187b0152600061184c01526121426000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063d65ab5f2116100a2578063f1c5d6c211610071578063f1c5d6c214610423578063f1d76a5f1461044b578063f2fde38b1461045e578063fe05cc9c1461047157600080fd5b8063d65ab5f2146103dc578063dd5b8467146103e4578063ddca3f4314610407578063dfbf53ae1461041057600080fd5b8063b53472ef116100de578063b53472ef14610384578063b6d7a2fc14610397578063b81baa59146103a0578063bd9c47e3146103b357600080fd5b80638da5cb5b146103455780638e7ea5b21461035657806394985ddd1461035e5780639c7531221461037157600080fd5b806366a1df6511610187578063877dd39d11610156578063877dd39d146102ed57806387cd6ad2146103005780638ae43b54146103185780638b42eb7c1461033257600080fd5b806366a1df651461029257806366ce6dab146102b25780636cbc2ded146102dd578063715018a6146102e557600080fd5b80633e7de3e1116101c35780633e7de3e1146102505780633ff54c71146102635780635e5f2e261461027657806361728f391461028957600080fd5b80630b26083c146101ea57806324398a85146101ff5780632521cc4614610225575b600080fd5b6101fd6101f8366004611cc2565b610484565b005b61021261020d366004611cf7565b610530565b6040519081526020015b60405180910390f35b600e54610238906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b61021261025e366004611cc2565b6105ac565b6101fd610271366004611cf7565b6105cd565b610238610284366004611cc2565b6106f3565b61021260025481565b6102126102a0366004611cf7565b600a6020526000908152604090205481565b6102126102c0366004611d19565b600660209081526000928352604080842090915290825290205481565b6101fd61071d565b6101fd610a3d565b6101fd6102fb366004611d19565b610a73565b6004546102389061010090046001600160a01b031681565b6004546103259060ff1681565b60405161021c9190611d62565b6101fd610340366004611cf7565b610acb565b6001546001600160a01b0316610238565b610238610bbc565b6101fd61036c366004611d8a565b610dc4565b61023861037f366004611dac565b610e46565b6101fd610392366004611cf7565b610e7e565b610212600b5481565b6101fd6103ae366004611dd6565b610efa565b6102386103c1366004611cf7565b6007602052600090815260409020546001600160a01b031681565b6101fd61112d565b6103f76103f2366004611cf7565b6111d1565b604051901515815260200161021c565b61021260035481565b600d54610238906001600160a01b031681565b610436610431366004611cf7565b61122e565b6040805192835260208301919091520161021c565b6101fd610459366004611dd6565b61132f565b6101fd61046c366004611cf7565b6116d5565b600554610238906001600160a01b031681565b6001546001600160a01b031633146104b75760405162461bcd60e51b81526004016104ae90611df9565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611e2e565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061055b8461122e565b909250905061056b81600a611f4a565b6001600160a01b038516600090815260066020908152604080832033845290915290205461059a908490611f56565b6105a49190611f8b565b949350505050565b600c81815481106105bc57600080fd5b600091825260209091200154905081565b6001546001600160a01b031633146105f75760405162461bcd60e51b81526004016104ae90611df9565b60005b6001600160a01b03821660009081526008602052604090205481101561052c576001600160a01b038216600090815260086020526040812080548390811061064457610644611f9f565b60009182526020822001546001600160a01b031691506106648285611770565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190611e2e565b50505080806106eb90611fb5565b9150506105fa565b6009818154811061070357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107475760405162461bcd60e51b81526004016104ae90611df9565b600260045460ff16600281111561076057610760611d4c565b146107a55760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b60448201526064016104ae565b600e546107ba906001600160a01b03166111d1565b6108025760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b60448201526064016104ae565b600d546001600160a01b031661086c5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b60648201526084016104ae565b600e54600d546001600160a01b039182166000818152600a6020526040908190205490516323b872dd60e01b81523360048201529390921660248401526044830191909152906323b872dd906064016020604051808303816000875af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611e2e565b50600e546001600160a01b03166000908152600a602052604081208190555b600e546001600160a01b03166000908152600860205260409020548110156109b157600e546001600160a01b0316600090815260086020526040812080548390811061096b5761096b611f9f565b6000918252602080832090910154600e546001600160a01b03908116845260068352604080852091909216845290915281205550806109a981611fb5565b91505061091d565b506000600b819055604080518281526020808201808452600e546001600160a01b0316855260089091529190922091516109ec929190611c0d565b506040805160008152602081019182905251610a0a91600c91611c72565b50600d80546001600160a01b0319908116909155600e80549091169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610a675760405162461bcd60e51b81526004016104ae90611df9565b610a7160006117f6565b565b6001546001600160a01b03163314610a9d5760405162461bcd60e51b81526004016104ae90611df9565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b6001546001600160a01b03163314610af55760405162461bcd60e51b81526004016104ae90611df9565b6004805460ff19166002179055600e80546001600160a01b0383166001600160a01b031990911617905560005b600e546001600160a01b031660009081526008602052604090205481101561052c576000610b54600254600354611848565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610b8791815260200190565b60405180910390a16001600b6000828254610ba29190611fd0565b90915550829150610bb4905081611fb5565b915050610b22565b6001546000906001600160a01b03163314610be95760405162461bcd60e51b81526004016104ae90611df9565b600260045460ff166002811115610c0257610c02611d4c565b14610c475760405162461bcd60e51b815260206004820152601560248201527447616d65206973206e6f74206f766572207965742160581b60448201526064016104ae565b6000805b600c54811015610db15781600c8281548110610c6957610c69611f9f565b90600052602060002001541115610cf957600c8181548110610c8d57610c8d611f9f565b6000918252602080832090910154600e546001600160a01b031683526008909152604090912080549193509082908110610cc957610cc9611f9f565b600091825260209091200154600d80546001600160a01b0319166001600160a01b03909216919091179055610d9f565b81600c8281548110610d0d57610d0d611f9f565b90600052602060002001541415610d9f576000610d2b600284611fe8565b905080610d8e57600e546001600160a01b03166000908152600860205260409020805483908110610d5e57610d5e611f9f565b600091825260209091200154600d80546001600160a01b0319166001600160a01b03909216919091179055610d9d565b8060011415610d9d5750610d9f565b505b80610da981611fb5565b915050610c4b565b5050600d546001600160a01b0316905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e3c5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016104ae565b61052c82826119bf565b60086020528160005260406000208181548110610e6257600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610ea85760405162461bcd60e51b81526004016104ae90611df9565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610f1357610f13611d4c565b1480610f355750600160045460ff166002811115610f3357610f33611d4c565b145b610f965760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b60648201526084016104ae565b6001600160a01b03811660009081526006602090815260408083203384529091529020548211156110155760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b60648201526084016104ae565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190611e2e565b506001600160a01b03811660009081526006602090815260408083203384529091529020546110b6908390611ffc565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a90915220546110f2908390611ffc565b6001600160a01b0382166000908152600a6020908152604080832093909355600681528282203383529052205461052c5761052c8133611aa5565b6001546001600160a01b031633146111575760405162461bcd60e51b81526004016104ae90611df9565b600160045460ff16600281111561117057611170611d4c565b146111bd5760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d6520737461746520796574210060448201526064016104ae565b600480546000919060ff1916600183610a36565b60008060095481101561122857826001600160a01b0316600982815481106111fb576111fb611f9f565b6000918252602090912001546001600160a01b0316141561121f5750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa15801561128f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b3919061202d565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d919061207d565b919760ff909216965090945050505050565b6000821161137f5760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e20300000000000000060448201526064016104ae565b611388816111d1565b6113d05760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b60448201526064016104ae565b6001600160a01b03811660009081526008602052604090205460051161145e5760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e000000000000000060648201526084016104ae565b600060045460ff16600281111561147757611477611d4c565b146114c45760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c652000000000000060448201526064016104ae565b6004546001600160a01b03828116610100909204161415611560576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190611e2e565b506115d9565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156115b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d79190611e2e565b505b6001600160a01b0381166000908152600660209081526040808320338452909152902054611608908390611fd0565b6001600160a01b03821660008181526006602090815260408083203384528252808320949094559181526008909152205461165d576001600160a01b0381166000908152600a6020526040902082905561169b565b6001600160a01b0381166000908152600a6020526040902054611681908390611fd0565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b031660009081526008602090815260408220805460018101825590835291200180546001600160a01b0319163317905550565b6001546001600160a01b031633146116ff5760405162461bcd60e51b81526004016104ae90611df9565b6001600160a01b0381166117645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ae565b61176d816117f6565b50565b6001600160a01b03808216600090815260066020908152604082209285168252919091526000806117a08461122e565b90925090506117b081600a611f4a565b6001600160a01b038086166000908152600660209081526040808320938a16835292905220546117e1908490611f56565b6117eb9190611f8b565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016118b8929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016118e5939291906120a0565b6020604051808303816000875af1158015611904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119289190611e2e565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611982906001611fd0565b60008581526020818152604091829020929092558051808301879052808201849052815180820383018152606090910190915280519101206105a4565b600260045460ff1660028111156119d8576119d8611d4c565b14611a1d5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b60448201526064016104ae565b60008111611a605760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b60448201526064016104ae565b6000611a6d600e83611fe8565b600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70155505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611b2d576001600160a01b03848116600090815260086020526040902080549185169183908110611af857611af8611f9f565b6000918252602090912001546001600160a01b03161415611b1b57809150611b2d565b80611b2581611fb5565b915050611aa9565b50805b6001600160a01b038416600090815260086020526040902054611b5590600190611ffc565b811015611c07576001600160a01b0384166000908152600860205260409020611b7f826001611fd0565b81548110611b8f57611b8f611f9f565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611bcc57611bcc611f9f565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611bff81611fb5565b915050611b30565b50505050565b828054828255906000526020600020908101928215611c62579160200282015b82811115611c6257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611c2d565b50611c6e929150611cad565b5090565b828054828255906000526020600020908101928215611c62579160200282015b82811115611c62578251825591602001919060010190611c92565b5b80821115611c6e5760008155600101611cae565b600060208284031215611cd457600080fd5b5035919050565b80356001600160a01b0381168114611cf257600080fd5b919050565b600060208284031215611d0957600080fd5b611d1282611cdb565b9392505050565b60008060408385031215611d2c57600080fd5b611d3583611cdb565b9150611d4360208401611cdb565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611d8457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215611d9d57600080fd5b50508035926020909101359150565b60008060408385031215611dbf57600080fd5b611dc883611cdb565b946020939093013593505050565b60008060408385031215611de957600080fd5b82359150611d4360208401611cdb565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611e4057600080fd5b81518015158114611d1257600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611ea1578160001904821115611e8757611e87611e50565b80851615611e9457918102915b93841c9390800290611e6b565b509250929050565b600082611eb8575060016117f0565b81611ec5575060006117f0565b8160018114611edb5760028114611ee557611f01565b60019150506117f0565b60ff841115611ef657611ef6611e50565b50506001821b6117f0565b5060208310610133831016604e8410600b8410161715611f24575081810a6117f0565b611f2e8383611e66565b8060001904821115611f4257611f42611e50565b029392505050565b6000611d128383611ea9565b6000816000190483118215151615611f7057611f70611e50565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611f9a57611f9a611f75565b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611fc957611fc9611e50565b5060010190565b60008219821115611fe357611fe3611e50565b500190565b600082611ff757611ff7611f75565b500690565b60008282101561200e5761200e611e50565b500390565b805169ffffffffffffffffffff81168114611cf257600080fd5b600080600080600060a0868803121561204557600080fd5b61204e86612013565b945060208601519350604086015192506060860151915061207160808701612013565b90509295509295909350565b60006020828403121561208f57600080fd5b815160ff81168114611d1257600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156120e2578581018301518582016080015282016120c6565b818111156120f4576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220cc6bf659f5de1e15578940a63c9d0cc5ad89bf20c9367b5e3325773084e6bd2764736f6c634300080a0033",
  "bytecodeSha1": "6165af88f446aa8175386d39695338abe19d1a43",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CardGame",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "94": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "95": [
            9749,
            9777,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {
        "CardGame.betMoney": {
          "87": [
            6193,
            6204,
            true
          ],
          "88": [
            6252,
            6274,
            true
          ],
          "89": [
            6461,
            6490,
            true
          ],
          "90": [
            6757,
            6782,
            false
          ]
        },
        "CardGame.endGame": {
          "75": [
            9870,
            9913,
            true
          ],
          "76": [
            9978,
            10007,
            true
          ]
        },
        "CardGame.fulfillRandomness": {
          "91": [
            8523,
            8566,
            true
          ],
          "92": [
            8631,
            8646,
            true
          ]
        },
        "CardGame.getWinner": {
          "77": [
            8968,
            9011,
            true
          ],
          "78": [
            9363,
            9383,
            false
          ],
          "79": [
            9500,
            9521,
            false
          ],
          "80": [
            9586,
            9596,
            false
          ],
          "81": [
            9683,
            9693,
            false
          ]
        },
        "CardGame.removeFromPlayers": {
          "93": [
            4904,
            4931,
            false
          ]
        },
        "CardGame.repayBetToken": {
          "82": [
            5288,
            5317,
            true
          ],
          "83": [
            5321,
            5352,
            true
          ],
          "84": [
            5453,
            5497,
            true
          ]
        },
        "CardGame.startGame": {
          "85": [
            5977,
            6008,
            true
          ]
        },
        "CardGame.tokenIsAllowed": {
          "86": [
            2873,
            2903,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "60": [
            2131,
            2148
          ],
          "61": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "57": [
            1926,
            1999
          ],
          "58": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "33": [
            9741,
            9813
          ],
          "34": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "62": [
            7888,
            7975
          ],
          "64": [
            8718,
            8757
          ],
          "66": [
            8763,
            8802
          ]
        }
      },
      "4": {
        "VRFRequestIDBase.makeRequestId": {
          "65": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "63": [
            980,
            1058
          ]
        }
      },
      "5": {},
      "7": {
        "CardGame.allowToken": {
          "35": [
            2678,
            2704
          ]
        },
        "CardGame.betMoney": {
          "47": [
            6185,
            6234
          ],
          "48": [
            6244,
            6304
          ],
          "49": [
            6314,
            6443
          ],
          "50": [
            6453,
            6521
          ],
          "51": [
            6798,
            6855
          ],
          "52": [
            7359,
            7422
          ],
          "53": [
            7511,
            7614
          ],
          "54": [
            7671,
            7697
          ],
          "55": [
            7728,
            7773
          ],
          "56": [
            7793,
            7825
          ]
        },
        "CardGame.drawCards": {
          "21": [
            7905,
            7947
          ],
          "22": [
            7957,
            7984
          ],
          "23": [
            8162,
            8197
          ],
          "24": [
            8211,
            8229
          ],
          "25": [
            8050,
            8053
          ]
        },
        "CardGame.endGame": {
          "6": [
            9849,
            9960
          ],
          "7": [
            9970,
            10037
          ],
          "8": [
            10047,
            10155
          ],
          "9": [
            10222,
            10347
          ],
          "10": [
            10449,
            10476
          ],
          "11": [
            10713,
            10753
          ],
          "12": [
            10621,
            10628
          ],
          "13": [
            10818,
            10835
          ],
          "14": [
            10845,
            10886
          ],
          "15": [
            10896,
            10926
          ],
          "16": [
            10936,
            10955
          ],
          "17": [
            10965,
            10991
          ],
          "18": [
            11001,
            11031
          ]
        },
        "CardGame.fulfillRandomness": {
          "67": [
            8502,
            8613
          ],
          "68": [
            8623,
            8667
          ],
          "69": [
            8724,
            8752
          ]
        },
        "CardGame.getPlayerSingleTokenValue": {
          "3": [
            4545,
            4614
          ]
        },
        "CardGame.getTokenValue": {
          "46": [
            3635,
            3668
          ]
        },
        "CardGame.getUserSingleTokenValue": {
          "59": [
            4039,
            4103
          ]
        },
        "CardGame.getWinner": {
          "26": [
            8947,
            9058
          ],
          "27": [
            9403,
            9423
          ],
          "28": [
            9441,
            9475
          ],
          "29": [
            9620,
            9654
          ],
          "30": [
            9717,
            9725
          ],
          "31": [
            9340,
            9343
          ],
          "32": [
            9777,
            9790
          ]
        },
        "CardGame.issueTokens": {
          "4": [
            2511,
            2555
          ],
          "5": [
            2351,
            2358
          ]
        },
        "CardGame.removeFromPlayers": {
          "70": [
            4951,
            4960
          ],
          "71": [
            4978,
            4983
          ],
          "72": [
            4881,
            4884
          ],
          "73": [
            5092,
            5135
          ],
          "74": [
            5073,
            5076
          ]
        },
        "CardGame.repayBetToken": {
          "36": [
            5267,
            5422
          ],
          "37": [
            5432,
            5558
          ],
          "38": [
            5568,
            5612
          ],
          "39": [
            5622,
            5725
          ],
          "40": [
            5735,
            5780
          ],
          "41": [
            5848,
            5885
          ]
        },
        "CardGame.sendMSCToken": {
          "2": [
            2138,
            2176
          ]
        },
        "CardGame.setPriceFeedContract": {
          "20": [
            3110,
            3146
          ]
        },
        "CardGame.startGame": {
          "42": [
            5956,
            6065
          ],
          "43": [
            6076,
            6104
          ]
        },
        "CardGame.tokenIsAllowed": {
          "44": [
            2923,
            2934
          ],
          "45": [
            2962,
            2974
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "Openzeppelin/openzeppelin-contracts@4.2.0/Context",
    "Openzeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "Openzeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063d65ab5f2116100a2578063f1c5d6c211610071578063f1c5d6c214610423578063f1d76a5f1461044b578063f2fde38b1461045e578063fe05cc9c1461047157600080fd5b8063d65ab5f2146103dc578063dd5b8467146103e4578063ddca3f4314610407578063dfbf53ae1461041057600080fd5b8063b53472ef116100de578063b53472ef14610384578063b6d7a2fc14610397578063b81baa59146103a0578063bd9c47e3146103b357600080fd5b80638da5cb5b146103455780638e7ea5b21461035657806394985ddd1461035e5780639c7531221461037157600080fd5b806366a1df6511610187578063877dd39d11610156578063877dd39d146102ed57806387cd6ad2146103005780638ae43b54146103185780638b42eb7c1461033257600080fd5b806366a1df651461029257806366ce6dab146102b25780636cbc2ded146102dd578063715018a6146102e557600080fd5b80633e7de3e1116101c35780633e7de3e1146102505780633ff54c71146102635780635e5f2e261461027657806361728f391461028957600080fd5b80630b26083c146101ea57806324398a85146101ff5780632521cc4614610225575b600080fd5b6101fd6101f8366004611cc2565b610484565b005b61021261020d366004611cf7565b610530565b6040519081526020015b60405180910390f35b600e54610238906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b61021261025e366004611cc2565b6105ac565b6101fd610271366004611cf7565b6105cd565b610238610284366004611cc2565b6106f3565b61021260025481565b6102126102a0366004611cf7565b600a6020526000908152604090205481565b6102126102c0366004611d19565b600660209081526000928352604080842090915290825290205481565b6101fd61071d565b6101fd610a3d565b6101fd6102fb366004611d19565b610a73565b6004546102389061010090046001600160a01b031681565b6004546103259060ff1681565b60405161021c9190611d62565b6101fd610340366004611cf7565b610acb565b6001546001600160a01b0316610238565b610238610bbc565b6101fd61036c366004611d8a565b610dc4565b61023861037f366004611dac565b610e46565b6101fd610392366004611cf7565b610e7e565b610212600b5481565b6101fd6103ae366004611dd6565b610efa565b6102386103c1366004611cf7565b6007602052600090815260409020546001600160a01b031681565b6101fd61112d565b6103f76103f2366004611cf7565b6111d1565b604051901515815260200161021c565b61021260035481565b600d54610238906001600160a01b031681565b610436610431366004611cf7565b61122e565b6040805192835260208301919091520161021c565b6101fd610459366004611dd6565b61132f565b6101fd61046c366004611cf7565b6116d5565b600554610238906001600160a01b031681565b6001546001600160a01b031633146104b75760405162461bcd60e51b81526004016104ae90611df9565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611e2e565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061055b8461122e565b909250905061056b81600a611f4a565b6001600160a01b038516600090815260066020908152604080832033845290915290205461059a908490611f56565b6105a49190611f8b565b949350505050565b600c81815481106105bc57600080fd5b600091825260209091200154905081565b6001546001600160a01b031633146105f75760405162461bcd60e51b81526004016104ae90611df9565b60005b6001600160a01b03821660009081526008602052604090205481101561052c576001600160a01b038216600090815260086020526040812080548390811061064457610644611f9f565b60009182526020822001546001600160a01b031691506106648285611770565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190611e2e565b50505080806106eb90611fb5565b9150506105fa565b6009818154811061070357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107475760405162461bcd60e51b81526004016104ae90611df9565b600260045460ff16600281111561076057610760611d4c565b146107a55760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b60448201526064016104ae565b600e546107ba906001600160a01b03166111d1565b6108025760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b60448201526064016104ae565b600d546001600160a01b031661086c5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b60648201526084016104ae565b600e54600d546001600160a01b039182166000818152600a6020526040908190205490516323b872dd60e01b81523360048201529390921660248401526044830191909152906323b872dd906064016020604051808303816000875af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611e2e565b50600e546001600160a01b03166000908152600a602052604081208190555b600e546001600160a01b03166000908152600860205260409020548110156109b157600e546001600160a01b0316600090815260086020526040812080548390811061096b5761096b611f9f565b6000918252602080832090910154600e546001600160a01b03908116845260068352604080852091909216845290915281205550806109a981611fb5565b91505061091d565b506000600b819055604080518281526020808201808452600e546001600160a01b0316855260089091529190922091516109ec929190611c0d565b506040805160008152602081019182905251610a0a91600c91611c72565b50600d80546001600160a01b0319908116909155600e80549091169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610a675760405162461bcd60e51b81526004016104ae90611df9565b610a7160006117f6565b565b6001546001600160a01b03163314610a9d5760405162461bcd60e51b81526004016104ae90611df9565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b6001546001600160a01b03163314610af55760405162461bcd60e51b81526004016104ae90611df9565b6004805460ff19166002179055600e80546001600160a01b0383166001600160a01b031990911617905560005b600e546001600160a01b031660009081526008602052604090205481101561052c576000610b54600254600354611848565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610b8791815260200190565b60405180910390a16001600b6000828254610ba29190611fd0565b90915550829150610bb4905081611fb5565b915050610b22565b6001546000906001600160a01b03163314610be95760405162461bcd60e51b81526004016104ae90611df9565b600260045460ff166002811115610c0257610c02611d4c565b14610c475760405162461bcd60e51b815260206004820152601560248201527447616d65206973206e6f74206f766572207965742160581b60448201526064016104ae565b6000805b600c54811015610db15781600c8281548110610c6957610c69611f9f565b90600052602060002001541115610cf957600c8181548110610c8d57610c8d611f9f565b6000918252602080832090910154600e546001600160a01b031683526008909152604090912080549193509082908110610cc957610cc9611f9f565b600091825260209091200154600d80546001600160a01b0319166001600160a01b03909216919091179055610d9f565b81600c8281548110610d0d57610d0d611f9f565b90600052602060002001541415610d9f576000610d2b600284611fe8565b905080610d8e57600e546001600160a01b03166000908152600860205260409020805483908110610d5e57610d5e611f9f565b600091825260209091200154600d80546001600160a01b0319166001600160a01b03909216919091179055610d9d565b8060011415610d9d5750610d9f565b505b80610da981611fb5565b915050610c4b565b5050600d546001600160a01b0316905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e3c5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016104ae565b61052c82826119bf565b60086020528160005260406000208181548110610e6257600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610ea85760405162461bcd60e51b81526004016104ae90611df9565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610f1357610f13611d4c565b1480610f355750600160045460ff166002811115610f3357610f33611d4c565b145b610f965760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b60648201526084016104ae565b6001600160a01b03811660009081526006602090815260408083203384529091529020548211156110155760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b60648201526084016104ae565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190611e2e565b506001600160a01b03811660009081526006602090815260408083203384529091529020546110b6908390611ffc565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a90915220546110f2908390611ffc565b6001600160a01b0382166000908152600a6020908152604080832093909355600681528282203383529052205461052c5761052c8133611aa5565b6001546001600160a01b031633146111575760405162461bcd60e51b81526004016104ae90611df9565b600160045460ff16600281111561117057611170611d4c565b146111bd5760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d6520737461746520796574210060448201526064016104ae565b600480546000919060ff1916600183610a36565b60008060095481101561122857826001600160a01b0316600982815481106111fb576111fb611f9f565b6000918252602090912001546001600160a01b0316141561121f5750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa15801561128f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b3919061202d565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d919061207d565b919760ff909216965090945050505050565b6000821161137f5760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e20300000000000000060448201526064016104ae565b611388816111d1565b6113d05760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b60448201526064016104ae565b6001600160a01b03811660009081526008602052604090205460051161145e5760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e000000000000000060648201526084016104ae565b600060045460ff16600281111561147757611477611d4c565b146114c45760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c652000000000000060448201526064016104ae565b6004546001600160a01b03828116610100909204161415611560576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190611e2e565b506115d9565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156115b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d79190611e2e565b505b6001600160a01b0381166000908152600660209081526040808320338452909152902054611608908390611fd0565b6001600160a01b03821660008181526006602090815260408083203384528252808320949094559181526008909152205461165d576001600160a01b0381166000908152600a6020526040902082905561169b565b6001600160a01b0381166000908152600a6020526040902054611681908390611fd0565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b031660009081526008602090815260408220805460018101825590835291200180546001600160a01b0319163317905550565b6001546001600160a01b031633146116ff5760405162461bcd60e51b81526004016104ae90611df9565b6001600160a01b0381166117645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ae565b61176d816117f6565b50565b6001600160a01b03808216600090815260066020908152604082209285168252919091526000806117a08461122e565b90925090506117b081600a611f4a565b6001600160a01b038086166000908152600660209081526040808320938a16835292905220546117e1908490611f56565b6117eb9190611f8b565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016118b8929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016118e5939291906120a0565b6020604051808303816000875af1158015611904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119289190611e2e565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611982906001611fd0565b60008581526020818152604091829020929092558051808301879052808201849052815180820383018152606090910190915280519101206105a4565b600260045460ff1660028111156119d8576119d8611d4c565b14611a1d5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b60448201526064016104ae565b60008111611a605760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b60448201526064016104ae565b6000611a6d600e83611fe8565b600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70155505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611b2d576001600160a01b03848116600090815260086020526040902080549185169183908110611af857611af8611f9f565b6000918252602090912001546001600160a01b03161415611b1b57809150611b2d565b80611b2581611fb5565b915050611aa9565b50805b6001600160a01b038416600090815260086020526040902054611b5590600190611ffc565b811015611c07576001600160a01b0384166000908152600860205260409020611b7f826001611fd0565b81548110611b8f57611b8f611f9f565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611bcc57611bcc611f9f565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611bff81611fb5565b915050611b30565b50505050565b828054828255906000526020600020908101928215611c62579160200282015b82811115611c6257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611c2d565b50611c6e929150611cad565b5090565b828054828255906000526020600020908101928215611c62579160200282015b82811115611c62578251825591602001919060010190611c92565b5b80821115611c6e5760008155600101611cae565b600060208284031215611cd457600080fd5b5035919050565b80356001600160a01b0381168114611cf257600080fd5b919050565b600060208284031215611d0957600080fd5b611d1282611cdb565b9392505050565b60008060408385031215611d2c57600080fd5b611d3583611cdb565b9150611d4360208401611cdb565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611d8457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215611d9d57600080fd5b50508035926020909101359150565b60008060408385031215611dbf57600080fd5b611dc883611cdb565b946020939093013593505050565b60008060408385031215611de957600080fd5b82359150611d4360208401611cdb565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611e4057600080fd5b81518015158114611d1257600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611ea1578160001904821115611e8757611e87611e50565b80851615611e9457918102915b93841c9390800290611e6b565b509250929050565b600082611eb8575060016117f0565b81611ec5575060006117f0565b8160018114611edb5760028114611ee557611f01565b60019150506117f0565b60ff841115611ef657611ef6611e50565b50506001821b6117f0565b5060208310610133831016604e8410600b8410161715611f24575081810a6117f0565b611f2e8383611e66565b8060001904821115611f4257611f42611e50565b029392505050565b6000611d128383611ea9565b6000816000190483118215151615611f7057611f70611e50565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611f9a57611f9a611f75565b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611fc957611fc9611e50565b5060010190565b60008219821115611fe357611fe3611e50565b500190565b600082611ff757611ff7611f75565b500690565b60008282101561200e5761200e611e50565b500390565b805169ffffffffffffffffffff81168114611cf257600080fd5b600080600080600060a0868803121561204557600080fd5b61204e86612013565b945060208601519350604086015192506060860151915061207160808701612013565b90509295509295909350565b60006020828403121561208f57600080fd5b815160ff81168114611d1257600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156120e2578581018301518582016080015282016120c6565b818111156120f4576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220cc6bf659f5de1e15578940a63c9d0cc5ad89bf20c9367b5e3325773084e6bd2764736f6c634300080a0033",
  "deployedSourceMap": "444:10596:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:153;;;;;;:::i;:::-;;:::i;:::-;;4163:458;;;;;;:::i;:::-;;:::i;:::-;;;714:25:8;;;702:2;687:18;4163:458:7;;;;;;;;1921:41;;;;;-1:-1:-1;;;;;1921:41:7;;;;;;-1:-1:-1;;;;;914:32:8;;;896:51;;884:2;869:18;1921:41:7;750:203:8;1811:28:7;;;;;;:::i;:::-;;:::i;2231:378::-;;;;;;:::i;:::-;;:::i;1520:30::-;;;;;;:::i;:::-;;:::i;496:22::-;;;;;;1628:43;;;;;;:::i;:::-;;;;;;;;;;;;;;1223:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9803:1235;;;:::i;1605:92:0:-;;;:::i;2997:156:7:-;;;;;;:::i;:::-;;:::i;718:30::-;;;;;;;;-1:-1:-1;;;;;718:30:7;;;684:28;;;;;;;;;;;;;;;;:::i;7838:542::-;;;;;;:::i;:::-;;:::i;973:85:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;973:85;;8881:916:7;;;:::i;9639:225:3:-;;;;;;:::i;:::-;;:::i;1470:44:7:-;;;;;;:::i;:::-;;:::i;2615:96::-;;;;;;:::i;:::-;;:::i;1773:32::-;;;;;;5194:708;;;;;;:::i;:::-;;:::i;1339:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1339:50:7;;;5908:203;;;:::i;2717:274::-;;;;;;:::i;:::-;;:::i;:::-;;;2819:14:8;;2812:22;2794:41;;2782:2;2767:18;2717:274:7;2654:187:8;524:18:7;;;;;;1845:34;;;;;-1:-1:-1;;;;;1845:34:7;;;3159:516;;;;;;:::i;:::-;;:::i;:::-;;;;3020:25:8;;;3076:2;3061:18;;3054:34;;;;2993:18;3159:516:7;2846:248:8;6117:1715:7;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;754:22:7:-;;;;;-1:-1:-1;;;;;754:22:7;;;2072:153;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;2138:8:7::1;::::0;:38:::1;::::0;-1:-1:-1;;;2138:38:7;;2156:10:::1;2138:38;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;-1:-1:-1;;;;;2138:8:7;;::::1;::::0;:17:::1;::::0;3830:18:8;;2138:38:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2072:153:::0;:::o;4163:458::-;-1:-1:-1;;;;;4286:21:7;;4259:7;4286:21;;;:13;:21;;;;;;;4308:10;4286:33;;;;4369:13;4384:16;4404:21;4418:6;4404:13;:21::i;:::-;4368:57;;-1:-1:-1;4368:57:7;-1:-1:-1;4600:12:7;4368:57;4600:2;:12;:::i;:::-;-1:-1:-1;;;;;4554:21:7;;;;;;:13;:21;;;;;;;;4576:10;4554:33;;;;;;;;:41;;4590:5;;4554:41;:::i;:::-;4553:60;;;;:::i;:::-;4545:69;4163:458;-1:-1:-1;;;;4163:458:7:o;1811:28::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1811:28:7;:::o;2231:378::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2300:13:7::1;2295:308;-1:-1:-1::0;;;;;2327:15:7;::::1;;::::0;;;:7:::1;:15;::::0;;;;:22;2319:30;::::1;2295:308;;;-1:-1:-1::0;;;;;2394:15:7;::::1;2374:17;2394:15:::0;;;:7:::1;:15;::::0;;;;:22;;2410:5;;2394:22;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2394:22:7::1;::::0;-1:-1:-1;2455:42:7::1;2394:22:::0;2490:6;2455:23:::1;:42::i;:::-;2511:8;::::0;:44:::1;::::0;-1:-1:-1;;;2511:44:7;;-1:-1:-1;;;;;3875:32:8;;;2511:44:7::1;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;2430:67:7;;-1:-1:-1;2511:8:7;::::1;::::0;:17:::1;::::0;3830:18:8;;2511:44:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2360:243;;2351:7;;;;;:::i;:::-;;;;2295:308;;1520:30:::0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1520:30:7;;-1:-1:-1;1520:30:7;:::o;9803:1235::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;9884:29:7::1;9870:10;::::0;::::1;;:43;::::0;::::1;;;;;;:::i;:::-;;9849:111;;;::::0;-1:-1:-1;;;9849:111:7;;6654:2:8;9849:111:7::1;::::0;::::1;6636:21:8::0;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;9849:111:7::1;6452:345:8::0;9849:111:7::1;9993:13;::::0;9978:29:::1;::::0;-1:-1:-1;;;;;9993:13:7::1;9978:14;:29::i;:::-;9970:67;;;::::0;-1:-1:-1;;;9970:67:7;;7004:2:8;9970:67:7::1;::::0;::::1;6986:21:8::0;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;9970:67:7::1;6802:349:8::0;9970:67:7::1;10068:6;::::0;-1:-1:-1;;;;;10068:6:7::1;10047:108;;;::::0;-1:-1:-1;;;10047:108:7;;7358:2:8;10047:108:7::1;::::0;::::1;7340:21:8::0;7397:2;7377:18;;;7370:30;7436:34;7416:18;;;7409:62;-1:-1:-1;;;7487:18:8;;;7480:39;7536:19;;10047:108:7::1;7156:405:8::0;10047:108:7::1;10229:13;::::0;10294:6:::1;::::0;-1:-1:-1;;;;;10229:13:7;;::::1;;10314:23:::0;;;:8:::1;:23;::::0;;;;;;;10222:125;;-1:-1:-1;;;10222:125:7;;10270:10:::1;10222:125;::::0;::::1;7806:34:8::0;10294:6:7;;;::::1;7856:18:8::0;;;7849:43;7908:18;;;7901:34;;;;10229:13:7;10222:34:::1;::::0;7741:18:8;;10222:125:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10458:13:7::1;::::0;-1:-1:-1;;;;;10458:13:7::1;10475:1;10449:23:::0;;;:8:::1;:23;::::0;;;;:27;;;10521:288:::1;10586:13;::::0;-1:-1:-1;;;;;10586:13:7::1;10578:22;::::0;;;:7:::1;:22;::::0;;;;:29;10570:37;::::1;10521:288;;;10678:13;::::0;-1:-1:-1;;;;;10678:13:7::1;10653:14;10670:22:::0;;;:7:::1;:22;::::0;;;;:29;;10693:5;;10670:29;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;10727:13:::1;::::0;-1:-1:-1;;;;;10727:13:7;;::::1;10713:28:::0;;:13:::1;:28:::0;;;;;;10670:29;;;::::1;10713:36:::0;;;;;;;:40;-1:-1:-1;10621:7:7;::::1;::::0;::::1;:::i;:::-;;;;10521:288;;;-1:-1:-1::0;10834:1:7::1;10818:13;:17:::0;;;10870:16:::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;10853:13:::1;::::0;-1:-1:-1;;;;;10853:13:7::1;10845:22:::0;;:7:::1;:22:::0;;;;;;;:41;;::::1;::::0;:22;10870:16;10845:41:::1;:::i;:::-;-1:-1:-1::0;10910:16:7::1;::::0;;10924:1:::1;10910:16:::0;;::::1;::::0;::::1;::::0;;;;10896:30;::::1;::::0;:11:::1;::::0;:30:::1;:::i;:::-;-1:-1:-1::0;10936:6:7::1;:19:::0;;-1:-1:-1;;;;;;10936:19:7;;::::1;::::0;;;10965:13:::1;:26:::0;;;;::::1;::::0;;11001:10:::1;:30:::0;;10936:19;;11001:10;-1:-1:-1;;11001:30:7::1;10936:19:::0;;11001:30:::1;;;;;;9803:1235::o:0;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2997:156:7:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3110:23:7;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;3110:36:7::1;::::0;;;::::1;;::::0;;2997:156::o;7838:542::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;7905:10:7::1;:42:::0;;-1:-1:-1;;7905:42:7::1;7918:29;7905:42;::::0;;7957:13:::1;:27:::0;;-1:-1:-1;;;;;7957:27:7;::::1;-1:-1:-1::0;;;;;;7957:27:7;;::::1;;::::0;;-1:-1:-1;7995:245:7::1;8027:13;::::0;-1:-1:-1;;;;;8027:13:7::1;8019:22;::::0;;;:7:::1;:22;::::0;;;;:29;8015:33;::::1;7995:245;;;8069:17;8089:31;8107:7;;8116:3;;8089:17;:31::i;:::-;8069:51;;8167:30;8187:9;8167:30;;;;714:25:8::0;;702:2;687:18;;568:177;8167:30:7::1;;;;;;;;8228:1;8211:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8050:3:7;;-1:-1:-1;8050:3:7::1;::::0;-1:-1:-1;8050:3:7;::::1;:::i;:::-;;;;7995:245;;8881:916:::0;1045:6:0;;8928:7:7;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;8982:29:7::1;8968:10;::::0;::::1;;:43;::::0;::::1;;;;;;:::i;:::-;;8947:111;;;::::0;-1:-1:-1;;;8947:111:7;;8413:2:8;8947:111:7::1;::::0;::::1;8395:21:8::0;8452:2;8432:18;;;8425:30;-1:-1:-1;;;8471:18:8;;;8464:51;8532:18;;8947:111:7::1;8211:345:8::0;8947:111:7::1;9270:11;9301:9:::0;9296:472:::1;9320:11;:18:::0;9316:22;::::1;9296:472;;;9380:3;9363:11;9375:1;9363:14;;;;;;;;:::i;:::-;;;;;;;;;:20;9359:399;;;9409:11;9421:1;9409:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;9458:13:::1;::::0;-1:-1:-1;;;;;9458:13:7::1;9450:22:::0;;:7:::1;:22:::0;;;;;;;:25;;9409:14;;-1:-1:-1;9450:22:7;9473:1;;9450:25;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;9441:6:::1;:34:::0;;-1:-1:-1;;;;;;9441:34:7::1;-1:-1:-1::0;;;;;9450:25:7;;::::1;9441:34:::0;;;::::1;::::0;;9359:399:::1;;;9518:3;9500:11;9512:1;9500:14;;;;;;;;:::i;:::-;;;;;;;;;:21;9496:262;;;9541:13;9557:7;9563:1;9557:3:::0;:7:::1;:::i;:::-;9541:23:::0;-1:-1:-1;9586:10:7;9582:162:::1;;9637:13;::::0;-1:-1:-1;;;;;9637:13:7::1;9629:22;::::0;;;:7:::1;:22;::::0;;;;:25;;9652:1;;9629:25;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;9620:6:::1;:34:::0;;-1:-1:-1;;;;;;9620:34:7::1;-1:-1:-1::0;;;;;9629:25:7;;::::1;9620:34:::0;;;::::1;::::0;;9582:162:::1;;;9683:5;9692:1;9683:10;9679:65;;;9717:8;;;9679:65;9523:235;9496:262;9340:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9296:472;;;-1:-1:-1::0;;9784:6:7::1;::::0;-1:-1:-1;;;;;9784:6:7::1;::::0;-1:-1:-1;8881:916:7;:::o;9639:225:3:-;9749:10;-1:-1:-1;;;;;9763:14:3;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:3;;8880:2:8;9741:72:3;;;8862:21:8;8919:2;8899:18;;;8892:30;8958:33;8938:18;;;8931:61;9009:18;;9741:72:3;8678:355:8;9741:72:3;9819:40;9837:9;9848:10;9819:17;:40::i;1470:44:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1470:44:7;;-1:-1:-1;1470:44:7;;-1:-1:-1;1470:44:7:o;2615:96::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2678:13:7::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2678:26:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;2678:26:7::1;-1:-1:-1::0;;;;;2678:26:7;;;::::1;::::0;;;::::1;::::0;;2615:96::o;5194:708::-;5302:15;5288:10;;;;:29;;;;;;;;:::i;:::-;;:64;;;-1:-1:-1;5335:17:7;5321:10;;;;:31;;;;;;;;:::i;:::-;;5288:64;5267:155;;;;-1:-1:-1;;;5267:155:7;;9240:2:8;5267:155:7;;;9222:21:8;9279:2;9259:18;;;9252:30;9318:34;9298:18;;;9291:62;-1:-1:-1;;;9369:18:8;;;9362:42;9421:19;;5267:155:7;9038:408:8;5267:155:7;-1:-1:-1;;;;;5453:21:7;;;;;;:13;:21;;;;;;;;5475:10;5453:33;;;;;;;;:44;-1:-1:-1;5453:44:7;5432:126;;;;-1:-1:-1;;;5432:126:7;;9653:2:8;5432:126:7;;;9635:21:8;9692:2;9672:18;;;9665:30;9731:34;9711:18;;;9704:62;-1:-1:-1;;;9782:18:8;;;9775:33;9825:19;;5432:126:7;9451:399:8;5432:126:7;5568:44;;-1:-1:-1;;;5568:44:7;;5592:10;5568:44;;;3857:51:8;3924:18;;;3917:34;;;-1:-1:-1;;;;;5568:23:7;;;;;3830:18:8;;5568:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5670:21:7;;;;;;:13;:21;;;;;;;;5692:10;5670:33;;;;;;;;:55;;5718:7;;5670:55;:::i;:::-;-1:-1:-1;;;;;5622:21:7;;;;;;:13;:21;;;;;;;;5644:10;5622:33;;;;;;;:103;;;;5754:16;;;:8;:16;;;;;:26;;5773:7;;5754:26;:::i;:::-;-1:-1:-1;;;;;5735:16:7;;;;;;:8;:16;;;;;;;;:45;;;;5794:13;:21;;;;;5816:10;5794:33;;;;;;5790:106;;5848:37;5866:6;5874:10;5848:17;:37::i;5908:203::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5991:17:7::1;5977:10;::::0;::::1;;:31;::::0;::::1;;;;;;:::i;:::-;;5956:109;;;::::0;-1:-1:-1;;;5956:109:7;;10187:2:8;5956:109:7::1;::::0;::::1;10169:21:8::0;10226:2;10206:18;;;10199:30;10265:33;10245:18;;;10238:61;10316:18;;5956:109:7::1;9985:355:8::0;5956:109:7::1;6076:10;:28:::0;;6089:15:::1;::::0;6076:10;-1:-1:-1;;6076:28:7::1;::::0;6089:15;6076:28:::1;::::0;2717:274;2773:4;;2821:13;:20;2813:28;;2789:196;;;2897:6;-1:-1:-1;;;;;2873:30:7;:13;2887:5;2873:20;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2873:20:7;:30;2869:80;;;-1:-1:-1;2930:4:7;;2717:274;-1:-1:-1;;2717:274:7:o;2869:80::-;-1:-1:-1;2969:5:7;;2717:274;-1:-1:-1;;2717:274:7:o;2789:196::-;;2717:274;;;:::o;3159:516::-;-1:-1:-1;;;;;3302:23:7;;;3243:7;3302:23;;;:15;:23;;;;;;;3540:27;;-1:-1:-1;;;3540:27:7;;;;3243:7;;;;3302:23;;;;;3243:7;;3302:23;;3540:25;;:27;;;;;;;;;;;;;;;3302:23;3540:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3515:52;;;;;;3577:16;3604:9;-1:-1:-1;;;;;3604:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3651:5;;3596:29;;;;;-1:-1:-1;3651:5:7;;-1:-1:-1;;;;;3159:516:7:o;6117:1715::-;6203:1;6193:7;:11;6185:49;;;;-1:-1:-1;;;6185:49:7;;11487:2:8;6185:49:7;;;11469:21:8;11526:2;11506:18;;;11499:30;11565:27;11545:18;;;11538:55;11610:18;;6185:49:7;11285:349:8;6185:49:7;6252:22;6267:6;6252:14;:22::i;:::-;6244:60;;;;-1:-1:-1;;;6244:60:7;;7004:2:8;6244:60:7;;;6986:21:8;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;6244:60:7;6802:349:8;6244:60:7;-1:-1:-1;;;;;6335:15:7;;;;;;:7;:15;;;;;:22;6360:1;-1:-1:-1;6314:129:7;;;;-1:-1:-1;;;6314:129:7;;11841:2:8;6314:129:7;;;11823:21:8;11880:2;11860:18;;;11853:30;11919:34;11899:18;;;11892:62;11990:26;11970:18;;;11963:54;12034:19;;6314:129:7;11639:420:8;6314:129:7;6475:15;6461:10;;;;:29;;;;;;;;:::i;:::-;;6453:68;;;;-1:-1:-1;;;6453:68:7;;12266:2:8;6453:68:7;;;12248:21:8;12305:2;12285:18;;;12278:30;12344:28;12324:18;;;12317:56;12390:18;;6453:68:7;12064:350:8;6453:68:7;6767:15;;-1:-1:-1;;;;;6757:25:7;;;6767:15;;;;;6757:25;6753:749;;;6798:8;;:57;;-1:-1:-1;;;6798:57:7;;6820:10;6798:57;;;7806:34:8;6840:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;6798:8:7;;;;:21;;7741:18:8;;6798:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6753:749;;;7359:63;;-1:-1:-1;;;7359:63:7;;7387:10;7359:63;;;7806:34:8;7407:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;7359:27:7;;;;;7741:18:8;;7359:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6753:749;-1:-1:-1;;;;;7559:21:7;;;;;;:13;:21;;;;;;;;7581:10;7559:33;;;;;;;;:55;;7607:7;;7559:55;:::i;:::-;-1:-1:-1;;;;;7511:21:7;;;;;;:13;:21;;;;;;;;7533:10;7511:33;;;;;;;:103;;;;7628:15;;;:7;:15;;;;:22;7624:160;;-1:-1:-1;;;;;7671:16:7;;;;;;:8;:16;;;;;:26;;;7624:160;;;-1:-1:-1;;;;;7747:16:7;;;;;;:8;:16;;;;;;:26;;7766:7;;7747:26;:::i;:::-;-1:-1:-1;;;;;7728:16:7;;;;;;:8;:16;;;;;:45;7624:160;-1:-1:-1;;;;;7793:15:7;;;;;:7;:15;;;;;;;:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7793:32:7;7814:10;7793:32;;;-1:-1:-1;6117:1715:7:o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;12621:2:8;1926:73:0::1;::::0;::::1;12603:21:8::0;12660:2;12640:18;;;12633:30;12699:34;12679:18;;;12672:62;-1:-1:-1;;;12750:18:8;;;12743:36;12796:19;;1926:73:0::1;12419:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3770:340:7:-;-1:-1:-1;;;;;3895:21:7;;;3868:7;3895:21;;;:13;:21;;;;;;;:28;;;;;;;;;3973:13;3988:16;4008:21;4022:6;4008:13;:21::i;:::-;3972:57;;-1:-1:-1;3972:57:7;-1:-1:-1;4089:12:7;3972:57;4089:2;:12;:::i;:::-;-1:-1:-1;;;;;4048:21:7;;;;;;;:13;:21;;;;;;;;:28;;;;;;;;;;:36;;4079:5;;4048:36;:::i;:::-;4047:55;;;;:::i;:::-;4039:64;;;;3770:340;;;;;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;7752:1055:3:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:3;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;3020:25:8;;;3076:2;3061:18;;3054:34;3008:2;2993:18;;2846:248;7931:43:3;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:3;8290:16;;;;;;;;;;;;1005:51:4;;;;;14426:25:8;;;14467:18;;;14460:34;;;8283:4:3;14510:18:8;;;14503:60;14579:18;;;;14572:34;;;1005:51:4;;;;;;;;;;14398:19:8;;;;1005:51:4;;;995:62;;;;;;;;;8737:16:3;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:4;;;;;14774:19:8;;;14809:12;;;14802:28;;;1600:41:4;;;;;;;;;14846:12:8;;;;1600:41:4;;;1590:52;;;;;8770:32:3;1443:204:4;8386:489:7;8537:29;8523:10;;;;:43;;;;;;;;:::i;:::-;;8502:111;;;;-1:-1:-1;;;8502:111:7;;6654:2:8;8502:111:7;;;6636:21:8;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;8502:111:7;6452:345:8;8502:111:7;8645:1;8631:11;:15;8623:44;;;;-1:-1:-1;;;8623:44:7;;14052:2:8;8623:44:7;;;14034:21:8;14091:2;14071:18;;;14064:30;-1:-1:-1;;;14110:18:8;;;14103:46;14166:18;;8623:44:7;13850:340:8;8623:44:7;8677:18;8698:16;8712:2;8698:11;:16;:::i;:::-;8724:11;:28;;;;;;;-1:-1:-1;8724:28:7;;;;;;;-1:-1:-1;;;8386:489:7:o;4733:455::-;4810:13;;4833:175;-1:-1:-1;;;;;4857:15:7;;;;;;:7;:15;;;;;:22;4853:26;;4833:175;;;-1:-1:-1;;;;;4904:15:7;;;;;;;:7;:15;;;;;:18;;:27;;;;4920:1;;4904:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4904:18:7;:27;4900:98;;;4959:1;4951:9;;4978:5;;4900:98;4881:3;;;;:::i;:::-;;;;4833:175;;;-1:-1:-1;5034:5:7;5017:129;-1:-1:-1;;;;;5045:15:7;;;;;;:7;:15;;;;;:22;:26;;5070:1;;5045:26;:::i;:::-;5041:1;:30;5017:129;;;-1:-1:-1;;;;;5113:15:7;;;;;;:7;:15;;;;;5129:5;:1;5133;5129:5;:::i;:::-;5113:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5092:15:7;;;;;:7;:15;;;;;;;:18;;5113:22;;;;;5092:15;5108:1;;5092:18;;;;;;:::i;:::-;;;;;;;;;;:43;;-1:-1:-1;;;;;;5092:43:7;-1:-1:-1;;;;;5092:43:7;;;;;;;;;;5073:3;;;;:::i;:::-;;;;5017:129;;;;4800:388;4733:455;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:8;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:8;;14:180;-1:-1:-1;14:180:8:o;199:173::-;267:20;;-1:-1:-1;;;;;316:31:8;;306:42;;296:70;;362:1;359;352:12;296:70;199:173;;;:::o;377:186::-;436:6;489:2;477:9;468:7;464:23;460:32;457:52;;;505:1;502;495:12;457:52;528:29;547:9;528:29;:::i;:::-;518:39;377:186;-1:-1:-1;;;377:186:8:o;1140:260::-;1208:6;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:38;1390:2;1379:9;1375:18;1356:38;:::i;:::-;1346:48;;1140:260;;;;;:::o;1405:127::-;1466:10;1461:3;1457:20;1454:1;1447:31;1497:4;1494:1;1487:15;1521:4;1518:1;1511:15;1537:341;1682:2;1667:18;;1715:1;1704:13;;1694:144;;1760:10;1755:3;1751:20;1748:1;1741:31;1795:4;1792:1;1785:15;1823:4;1820:1;1813:15;1694:144;1847:25;;;1537:341;:::o;1883:248::-;1951:6;1959;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;;2051:23:8;;;2121:2;2106:18;;;2093:32;;-1:-1:-1;1883:248:8:o;2136:254::-;2204:6;2212;2265:2;2253:9;2244:7;2240:23;2236:32;2233:52;;;2281:1;2278;2271:12;2233:52;2304:29;2323:9;2304:29;:::i;:::-;2294:39;2380:2;2365:18;;;;2352:32;;-1:-1:-1;;;2136:254:8:o;2395:::-;2463:6;2471;2524:2;2512:9;2503:7;2499:23;2495:32;2492:52;;;2540:1;2537;2530:12;2492:52;2576:9;2563:23;2553:33;;2605:38;2639:2;2628:9;2624:18;2605:38;:::i;3322:356::-;3524:2;3506:21;;;3543:18;;;3536:30;3602:34;3597:2;3582:18;;3575:62;3669:2;3654:18;;3322:356::o;3962:277::-;4029:6;4082:2;4070:9;4061:7;4057:23;4053:32;4050:52;;;4098:1;4095;4088:12;4050:52;4130:9;4124:16;4183:5;4176:13;4169:21;4162:5;4159:32;4149:60;;4205:1;4202;4195:12;4244:127;4305:10;4300:3;4296:20;4293:1;4286:31;4336:4;4333:1;4326:15;4360:4;4357:1;4350:15;4376:422;4465:1;4508:5;4465:1;4522:270;4543:7;4533:8;4530:21;4522:270;;;4602:4;4598:1;4594:6;4590:17;4584:4;4581:27;4578:53;;;4611:18;;:::i;:::-;4661:7;4651:8;4647:22;4644:55;;;4681:16;;;;4644:55;4760:22;;;;4720:15;;;;4522:270;;;4526:3;4376:422;;;;;:::o;4803:806::-;4852:5;4882:8;4872:80;;-1:-1:-1;4923:1:8;4937:5;;4872:80;4971:4;4961:76;;-1:-1:-1;5008:1:8;5022:5;;4961:76;5053:4;5071:1;5066:59;;;;5139:1;5134:130;;;;5046:218;;5066:59;5096:1;5087:10;;5110:5;;;5134:130;5171:3;5161:8;5158:17;5155:43;;;5178:18;;:::i;:::-;-1:-1:-1;;5234:1:8;5220:16;;5249:5;;5046:218;;5348:2;5338:8;5335:16;5329:3;5323:4;5320:13;5316:36;5310:2;5300:8;5297:16;5292:2;5286:4;5283:12;5279:35;5276:77;5273:159;;;-1:-1:-1;5385:19:8;;;5417:5;;5273:159;5464:34;5489:8;5483:4;5464:34;:::i;:::-;5534:6;5530:1;5526:6;5522:19;5513:7;5510:32;5507:58;;;5545:18;;:::i;:::-;5583:20;;4803:806;-1:-1:-1;;;4803:806:8:o;5614:131::-;5674:5;5703:36;5730:8;5724:4;5703:36;:::i;5750:168::-;5790:7;5856:1;5852;5848:6;5844:14;5841:1;5838:21;5833:1;5826:9;5819:17;5815:45;5812:71;;;5863:18;;:::i;:::-;-1:-1:-1;5903:9:8;;5750:168::o;5923:127::-;5984:10;5979:3;5975:20;5972:1;5965:31;6015:4;6012:1;6005:15;6039:4;6036:1;6029:15;6055:120;6095:1;6121;6111:35;;6126:18;;:::i;:::-;-1:-1:-1;6160:9:8;;6055:120::o;6180:127::-;6241:10;6236:3;6232:20;6229:1;6222:31;6272:4;6269:1;6262:15;6296:4;6293:1;6286:15;6312:135;6351:3;-1:-1:-1;;6372:17:8;;6369:43;;;6392:18;;:::i;:::-;-1:-1:-1;6439:1:8;6428:13;;6312:135::o;8078:128::-;8118:3;8149:1;8145:6;8142:1;8139:13;8136:39;;;8155:18;;:::i;:::-;-1:-1:-1;8191:9:8;;8078:128::o;8561:112::-;8593:1;8619;8609:35;;8624:18;;:::i;:::-;-1:-1:-1;8658:9:8;;8561:112::o;9855:125::-;9895:4;9923:1;9920;9917:8;9914:34;;;9928:18;;:::i;:::-;-1:-1:-1;9965:9:8;;9855:125::o;10345:179::-;10423:13;;10476:22;10465:34;;10455:45;;10445:73;;10514:1;10511;10504:12;10529:473;10632:6;10640;10648;10656;10664;10717:3;10705:9;10696:7;10692:23;10688:33;10685:53;;;10734:1;10731;10724:12;10685:53;10757:39;10786:9;10757:39;:::i;:::-;10747:49;;10836:2;10825:9;10821:18;10815:25;10805:35;;10880:2;10869:9;10865:18;10859:25;10849:35;;10924:2;10913:9;10909:18;10903:25;10893:35;;10947:49;10991:3;10980:9;10976:19;10947:49;:::i;:::-;10937:59;;10529:473;;;;;;;;:::o;11007:273::-;11075:6;11128:2;11116:9;11107:7;11103:23;11099:32;11096:52;;;11144:1;11141;11134:12;11096:52;11176:9;11170:16;11226:4;11219:5;11215:16;11208:5;11205:27;11195:55;;11246:1;11243;11236:12;13079:766;13311:1;13307;13302:3;13298:11;13294:19;13286:6;13282:32;13271:9;13264:51;13245:4;13334:2;13372:6;13367:2;13356:9;13352:18;13345:34;13415:2;13410;13399:9;13395:18;13388:30;13447:6;13441:13;13490:6;13485:2;13474:9;13470:18;13463:34;13515:1;13525:141;13539:6;13536:1;13533:13;13525:141;;;13635:14;;;13631:23;;13625:30;13600:17;;;13619:3;13596:27;13589:67;13554:10;;13525:141;;;13684:6;13681:1;13678:13;13675:92;;;13755:1;13749:3;13740:6;13729:9;13725:22;13721:32;13714:43;13675:92;-1:-1:-1;13828:2:8;13807:15;-1:-1:-1;;13803:29:8;13788:45;;;;13835:3;13784:55;;13079:766;-1:-1:-1;;;;;13079:766:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    444,
    11040
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xD65AB5F2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF1C5D6C2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xF1D76A5F EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xFE05CC9C EQ PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD65AB5F2 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB53472EF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB53472EF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xB6D7A2FC EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xB81BAA59 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xBD9C47E3 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x9C753122 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66A1DF65 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x877DD39D GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x87CD6AD2 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8AE43B54 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8B42EB7C EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66A1DF65 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x66CE6DAB EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x6CBC2DED EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E7DE3E1 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3E7DE3E1 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x3FF54C71 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB26083C EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x24398A85 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2521CC46 EQ PUSH2 0x225 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x212 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x238 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1D19 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x238 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x325 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST PUSH2 0x238 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x212 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x238 PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x212 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE PUSH1 0x0 DUP1 PUSH2 0x55B DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x56B DUP2 PUSH1 0xA PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x59A SWAP1 DUP5 SWAP1 PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x664 DUP3 DUP6 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x6EB SWAP1 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x1D4C JUMP JUMPDEST EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x7BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374696C6C20646F65736E2774206B6E6F7720776869636820706C6179657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x34B9903BB4B73732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x96B JUMPI PUSH2 0x96B PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE POP DUP1 PUSH2 0x9A9 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SWAP2 MLOAD PUSH2 0x9EC SWAP3 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0xA0A SWAP2 PUSH1 0xC SWAP2 PUSH2 0x1C72 JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0xA71 PUSH1 0x0 PUSH2 0x17F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 PUSH2 0xB54 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0xB87 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP3 SWAP2 POP PUSH2 0xBB4 SWAP1 POP DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC02 PUSH2 0x1D4C JUMP JUMPDEST EQ PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x47616D65206973206E6F74206F7665722079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xDB1 JUMPI DUP2 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC69 JUMPI PUSH2 0xC69 PUSH2 0x1F9F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0xCF9 JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC8D JUMPI PUSH2 0xC8D PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0xCC9 JUMPI PUSH2 0xCC9 PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xD9F JUMP JUMPDEST DUP2 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0D JUMPI PUSH2 0xD0D PUSH2 0x1F9F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 PUSH2 0xD2B PUSH1 0x2 DUP5 PUSH2 0x1FE8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD8E JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xD5E JUMPI PUSH2 0xD5E PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xD9D JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xD9D JUMPI POP PUSH2 0xD9F JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0xDA9 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC4B JUMP JUMPDEST POP POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x52C DUP3 DUP3 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF13 PUSH2 0x1D4C JUMP JUMPDEST EQ DUP1 PUSH2 0xF35 JUMPI POP PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0x1D4C JUMP JUMPDEST EQ JUMPDEST PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E2774206765742074686520726566756E642061667465722067 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616D65207374617274656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206469646E27742062657420746F6B656E206F662074686520616D6F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E7421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x10B6 SWAP1 DUP4 SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x10F2 SWAP1 DUP4 SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x52C JUMPI PUSH2 0x52C DUP2 CALLER PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1170 JUMPI PUSH2 0x1170 PUSH2 0x1D4C JUMP JUMPDEST EQ PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774207374617274206E65772067616D65207374617465207965742100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1228 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11FB JUMPI PUSH2 0x11FB PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x121F JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x128F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B3 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120626574206D757374206265206D6F7265207468616E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x1388 DUP2 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 GT PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792C20746869732067616D6520697320616C72656164792066756C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E20506C656173652077616974206E6578742067616D652E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1477 PUSH2 0x1D4C JUMP JUMPDEST EQ PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420626574206D6F6E6579207768696C6520000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x1560 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1536 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155A SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1608 SWAP1 DUP4 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x165D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x169B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1681 SWAP1 DUP4 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x176D DUP2 PUSH2 0x17F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 PUSH2 0x17A0 DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x17B0 DUP2 PUSH1 0xA PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x17E1 SWAP1 DUP5 SWAP1 PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x17EB SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18B8 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x1982 SWAP1 PUSH1 0x1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19D8 JUMPI PUSH2 0x19D8 PUSH2 0x1D4C JUMP JUMPDEST EQ PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1A60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB4B5B9BDD0B599BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6D PUSH1 0xE DUP4 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1AF8 JUMPI PUSH2 0x1AF8 PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1B1B JUMPI DUP1 SWAP2 POP PUSH2 0x1B2D JUMP JUMPDEST DUP1 PUSH2 0x1B25 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AA9 JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B55 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1FFC JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1B7F DUP3 PUSH1 0x1 PUSH2 0x1FD0 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1B8F JUMPI PUSH2 0x1B8F PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1BCC JUMPI PUSH2 0x1BCC PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1BFF DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B30 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1C62 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C2D JUMP JUMPDEST POP PUSH2 0x1C6E SWAP3 SWAP2 POP PUSH2 0x1CAD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1C62 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C92 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C6E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D12 DUP3 PUSH2 0x1CDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D35 DUP4 PUSH2 0x1CDB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D43 PUSH1 0x20 DUP5 ADD PUSH2 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1D84 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC8 DUP4 PUSH2 0x1CDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1D43 PUSH1 0x20 DUP5 ADD PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1EA1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1E87 JUMPI PUSH2 0x1E87 PUSH2 0x1E50 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1E94 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1E6B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EB8 JUMPI POP PUSH1 0x1 PUSH2 0x17F0 JUMP JUMPDEST DUP2 PUSH2 0x1EC5 JUMPI POP PUSH1 0x0 PUSH2 0x17F0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EDB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EE5 JUMPI PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF6 PUSH2 0x1E50 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x17F0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F24 JUMPI POP DUP2 DUP2 EXP PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1F2E DUP4 DUP4 PUSH2 0x1E66 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F42 JUMPI PUSH2 0x1F42 PUSH2 0x1E50 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D12 DUP4 DUP4 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F70 JUMPI PUSH2 0x1F70 PUSH2 0x1E50 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F9A JUMPI PUSH2 0x1F9A PUSH2 0x1F75 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC9 PUSH2 0x1E50 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FE3 JUMPI PUSH2 0x1FE3 PUSH2 0x1E50 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FF7 JUMPI PUSH2 0x1FF7 PUSH2 0x1F75 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x200E JUMPI PUSH2 0x200E PUSH2 0x1E50 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204E DUP7 PUSH2 0x2013 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2071 PUSH1 0x80 DUP8 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20E2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x20C6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH12 0xF659F5DE1E15578940A63C9D 0xC 0xC5 0xAD DUP10 0xBF KECCAK256 0xC9 CALLDATASIZE PUSH28 0x5E3325773084E6BD2764736F6C634300080A00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E5"
    },
    "25": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F"
    },
    "42": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD65AB5F2"
    },
    "49": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1C5D6C2"
    },
    "60": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1C5D6C2"
    },
    "71": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x423"
    },
    "75": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1D76A5F"
    },
    "82": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x44B"
    },
    "86": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x45E"
    },
    "97": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFE05CC9C"
    },
    "104": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x471"
    },
    "108": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD65AB5F2"
    },
    "120": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DC"
    },
    "124": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD5B8467"
    },
    "131": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E4"
    },
    "135": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "142": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x407"
    },
    "146": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDFBF53AE"
    },
    "153": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x410"
    },
    "157": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "162": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB53472EF"
    },
    "169": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB53472EF"
    },
    "180": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x384"
    },
    "184": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB6D7A2FC"
    },
    "191": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x397"
    },
    "195": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB81BAA59"
    },
    "202": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A0"
    },
    "206": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBD9C47E3"
    },
    "213": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B3"
    },
    "217": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "221": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "222": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "224": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "229": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x345"
    },
    "233": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8E7EA5B2"
    },
    "240": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x356"
    },
    "244": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "251": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35E"
    },
    "255": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9C753122"
    },
    "262": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x371"
    },
    "266": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "267": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "269": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "270": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "271": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "273": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66A1DF65"
    },
    "278": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "279": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x187"
    },
    "282": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x877DD39D"
    },
    "289": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "295": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x877DD39D"
    },
    "300": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "301": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2ED"
    },
    "304": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x87CD6AD2"
    },
    "311": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "312": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x300"
    },
    "315": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "317": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8AE43B54"
    },
    "322": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "323": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x318"
    },
    "326": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "327": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "328": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8B42EB7C"
    },
    "333": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "334": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x332"
    },
    "337": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "338": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "341": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "342": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "343": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "344": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66A1DF65"
    },
    "349": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "350": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x292"
    },
    "353": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "354": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "355": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66CE6DAB"
    },
    "360": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "361": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B2"
    },
    "364": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "365": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "366": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6CBC2DED"
    },
    "371": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "372": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DD"
    },
    "375": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "376": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "382": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "383": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E5"
    },
    "386": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "387": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "389": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "390": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "391": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "392": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "393": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3E7DE3E1"
    },
    "398": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "GT",
      "path": "7"
    },
    "399": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C3"
    },
    "402": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "403": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "404": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3E7DE3E1"
    },
    "409": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "410": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x250"
    },
    "413": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "414": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "415": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3FF54C71"
    },
    "420": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "421": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x263"
    },
    "424": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "425": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "426": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5E5F2E26"
    },
    "431": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "432": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x276"
    },
    "435": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "436": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "437": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x61728F39"
    },
    "442": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "443": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x289"
    },
    "446": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "447": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "449": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "450": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "451": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "452": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "453": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB26083C"
    },
    "458": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "459": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EA"
    },
    "462": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "463": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "464": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x24398A85"
    },
    "469": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "470": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FF"
    },
    "473": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "474": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "475": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2521CC46"
    },
    "480": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "EQ",
      "path": "7"
    },
    "481": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x225"
    },
    "484": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "485": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "486": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "488": {
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "DUP1",
      "path": "7"
    },
    "489": {
      "first_revert": true,
      "fn": null,
      "offset": [
        444,
        11040
      ],
      "op": "REVERT",
      "path": "7"
    },
    "490": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "491": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "494": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F8"
    },
    "497": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "498": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "500": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CC2"
    },
    "503": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMP",
      "path": "7"
    },
    "504": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "505": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x484"
    },
    "508": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMP",
      "path": "7"
    },
    "509": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "510": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "STOP",
      "path": "7"
    },
    "511": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "512": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "515": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D"
    },
    "518": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "519": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "521": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "524": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMP",
      "path": "7"
    },
    "525": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "526": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x530"
    },
    "529": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMP",
      "path": "7"
    },
    "530": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "531": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "533": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "DUP2"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "541": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "543": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "544": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "DUP1",
      "path": "7"
    },
    "545": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "546": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "SUB",
      "path": "7"
    },
    "547": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "548": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "RETURN",
      "path": "7"
    },
    "549": {
      "offset": [
        1921,
        1962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "550": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "552": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "553": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "556": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "563": {
      "op": "SHL"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "offset": [
        1921,
        1962
      ],
      "op": "AND",
      "path": "7"
    },
    "566": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "567": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "JUMP",
      "path": "7"
    },
    "568": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "569": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "571": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1921,
        1962
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "op": "SWAP1"
    },
    "581": {
      "op": "SWAP2"
    },
    "582": {
      "op": "AND"
    },
    "583": {
      "op": "DUP2"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "offset": [
        1921,
        1962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "591": {
      "op": "JUMP"
    },
    "592": {
      "offset": [
        1811,
        1839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "593": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "596": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25E"
    },
    "599": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "600": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "602": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CC2"
    },
    "605": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "606": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "607": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5AC"
    },
    "610": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "611": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "612": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "615": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x271"
    },
    "618": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "619": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "621": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "624": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2231,
        2609
      ],
      "op": "JUMP",
      "path": "7"
    },
    "625": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "626": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5CD"
    },
    "629": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2231,
        2609
      ],
      "op": "JUMP",
      "path": "7"
    },
    "630": {
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "631": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "634": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x284"
    },
    "637": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "638": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "640": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CC2"
    },
    "643": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "644": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "645": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F3"
    },
    "648": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "649": {
      "offset": [
        496,
        518
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "650": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "653": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "655": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "656": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "DUP2",
      "path": "7"
    },
    "657": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "JUMP",
      "path": "7"
    },
    "658": {
      "offset": [
        1628,
        1671
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "659": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "662": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A0"
    },
    "665": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "666": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "668": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "671": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "672": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "673": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "675": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "677": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "678": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "680": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "681": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "DUP2",
      "path": "7"
    },
    "682": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "683": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "685": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "686": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "687": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "688": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "DUP2",
      "path": "7"
    },
    "689": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "690": {
      "offset": [
        1223,
        1291
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "691": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "694": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C0"
    },
    "697": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "698": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "700": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D19"
    },
    "703": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMP",
      "path": "7"
    },
    "704": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "705": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "707": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "709": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "710": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP2",
      "path": "7"
    },
    "711": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "712": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "714": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "715": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP4",
      "path": "7"
    },
    "716": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "717": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "719": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP1",
      "path": "7"
    },
    "720": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP5",
      "path": "7"
    },
    "721": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "722": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "723": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "724": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "725": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "726": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP3",
      "path": "7"
    },
    "727": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "728": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "729": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "730": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "731": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP2",
      "path": "7"
    },
    "732": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMP",
      "path": "7"
    },
    "733": {
      "fn": "CardGame.endGame",
      "offset": [
        9803,
        11038
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "734": {
      "fn": "CardGame.endGame",
      "offset": [
        9803,
        11038
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "737": {
      "fn": "CardGame.endGame",
      "offset": [
        9803,
        11038
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71D"
    },
    "740": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        9803,
        11038
      ],
      "op": "JUMP",
      "path": "7"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "742": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "749": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "750": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "753": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FB"
    },
    "756": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "757": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "759": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D19"
    },
    "762": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMP",
      "path": "7"
    },
    "763": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "764": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA73"
    },
    "767": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMP",
      "path": "7"
    },
    "768": {
      "offset": [
        718,
        748
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "769": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "771": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "772": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "775": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "776": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "779": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "780": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "DIV",
      "path": "7"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "offset": [
        718,
        748
      ],
      "op": "AND",
      "path": "7"
    },
    "790": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "DUP2",
      "path": "7"
    },
    "791": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "JUMP",
      "path": "7"
    },
    "792": {
      "offset": [
        684,
        712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "793": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "795": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "796": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x325"
    },
    "799": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "800": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "802": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "AND",
      "path": "7"
    },
    "803": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "DUP2",
      "path": "7"
    },
    "804": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "JUMP",
      "path": "7"
    },
    "805": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "806": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "808": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "809": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "812": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "813": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "814": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D62"
    },
    "817": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        684,
        712
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "819": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "822": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x340"
    },
    "825": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "826": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "828": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "831": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        7838,
        8380
      ],
      "op": "JUMP",
      "path": "7"
    },
    "832": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "833": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xACB"
    },
    "836": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        7838,
        8380
      ],
      "op": "JUMP",
      "path": "7"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "SUB"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "854": {
      "fn": "CardGame.getWinner",
      "offset": [
        8881,
        9797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "855": {
      "fn": "CardGame.getWinner",
      "offset": [
        8881,
        9797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "858": {
      "fn": "CardGame.getWinner",
      "offset": [
        8881,
        9797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBBC"
    },
    "861": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        8881,
        9797
      ],
      "op": "JUMP",
      "path": "7"
    },
    "862": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "863": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD"
    },
    "866": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C"
    },
    "869": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "870": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "872": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8A"
    },
    "875": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "876": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "877": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "880": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "881": {
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "882": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "885": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37F"
    },
    "888": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "889": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "891": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DAC"
    },
    "894": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "895": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "896": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE46"
    },
    "899": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "900": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "901": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "904": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x392"
    },
    "907": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "908": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "910": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "913": {
      "fn": "CardGame.allowToken",
      "jump": "i",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMP",
      "path": "7"
    },
    "914": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "915": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7E"
    },
    "918": {
      "fn": "CardGame.allowToken",
      "jump": "i",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMP",
      "path": "7"
    },
    "919": {
      "offset": [
        1773,
        1805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "920": {
      "fn": "CardGame.allowToken",
      "offset": [
        1773,
        1805
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "923": {
      "fn": "CardGame.allowToken",
      "offset": [
        1773,
        1805
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "925": {
      "fn": "CardGame.allowToken",
      "offset": [
        1773,
        1805
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "926": {
      "fn": "CardGame.allowToken",
      "offset": [
        1773,
        1805
      ],
      "op": "DUP2",
      "path": "7"
    },
    "927": {
      "fn": "CardGame.allowToken",
      "offset": [
        1773,
        1805
      ],
      "op": "JUMP",
      "path": "7"
    },
    "928": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "929": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "932": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AE"
    },
    "935": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "936": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "938": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DD6"
    },
    "941": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5194,
        5902
      ],
      "op": "JUMP",
      "path": "7"
    },
    "942": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "943": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEFA"
    },
    "946": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5194,
        5902
      ],
      "op": "JUMP",
      "path": "7"
    },
    "947": {
      "offset": [
        1339,
        1389
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "948": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "951": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C1"
    },
    "954": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "955": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "957": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "960": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMP",
      "path": "7"
    },
    "961": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "962": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "964": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "966": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "967": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "969": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "970": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "971": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "972": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "974": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "975": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "976": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "op": "SUB"
    },
    "985": {
      "offset": [
        1339,
        1389
      ],
      "op": "AND",
      "path": "7"
    },
    "986": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "987": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMP",
      "path": "7"
    },
    "988": {
      "fn": "CardGame.startGame",
      "offset": [
        5908,
        6111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "989": {
      "fn": "CardGame.startGame",
      "offset": [
        5908,
        6111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "992": {
      "fn": "CardGame.startGame",
      "offset": [
        5908,
        6111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x112D"
    },
    "995": {
      "fn": "CardGame.startGame",
      "jump": "i",
      "offset": [
        5908,
        6111
      ],
      "op": "JUMP",
      "path": "7"
    },
    "996": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "997": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F7"
    },
    "1000": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F2"
    },
    "1003": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1004": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1006": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "1009": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1010": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1011": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11D1"
    },
    "1014": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1015": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1016": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1018": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1019": {
      "op": "SWAP1"
    },
    "1020": {
      "op": "ISZERO"
    },
    "1021": {
      "op": "ISZERO"
    },
    "1022": {
      "op": "DUP2"
    },
    "1023": {
      "op": "MSTORE"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "1030": {
      "op": "JUMP"
    },
    "1031": {
      "offset": [
        524,
        542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1032": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "1035": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1037": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1038": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1039": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1040": {
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1041": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "1043": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1044": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "1047": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "offset": [
        1845,
        1879
      ],
      "op": "AND",
      "path": "7"
    },
    "1057": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1058": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        1845,
        1879
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1059": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1060": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x436"
    },
    "1063": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x431"
    },
    "1066": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1067": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1069": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF7"
    },
    "1072": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1073": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1074": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x122E"
    },
    "1077": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1078": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1079": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1081": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1082": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1083": {
      "op": "SWAP3"
    },
    "1084": {
      "op": "DUP4"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1088": {
      "op": "DUP4"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "SWAP2"
    },
    "1091": {
      "op": "SWAP1"
    },
    "1092": {
      "op": "SWAP2"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "1098": {
      "op": "JUMP"
    },
    "1099": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1100": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "1103": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x459"
    },
    "1106": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1107": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1109": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DD6"
    },
    "1112": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1113": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1114": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x132F"
    },
    "1117": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "1122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46C"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF7"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D5"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1137": {
      "offset": [
        754,
        776
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "offset": [
        754,
        776
      ],
      "op": "AND",
      "path": "7"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1156": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1157": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1159": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1169": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 1
    },
    "1170": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1171": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B7"
    },
    "1174": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1175": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1177": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1186": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1187": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1189": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1190": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "1197": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1198": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1199": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1201": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1202": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1203": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1205": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1206": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1207": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1208": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x5"
    },
    "1210": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1211": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1213": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1214": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1223": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1224": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2156,
        2166
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1225": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1227": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1228": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ADD",
      "path": "7"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1232": {
      "op": "DUP2"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "DUP4"
    },
    "1235": {
      "op": "SWAP1"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1243": {
      "op": "SHL"
    },
    "1244": {
      "op": "SUB"
    },
    "1245": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1246": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1247": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "AND",
      "path": "7"
    },
    "1248": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1249": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2155
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "1254": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1260": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1262": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1263": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1264": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1265": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "SUB",
      "path": "7"
    },
    "1266": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1267": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1269": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1270": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "GAS",
      "path": "7"
    },
    "1271": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "CALL",
      "path": "7"
    },
    "1272": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1273": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1274": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1275": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x508"
    },
    "1278": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1279": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1280": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1282": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1283": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1284": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1285": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1287": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1288": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1289": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1290": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1291": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1292": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1293": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1295": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1296": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1297": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1299": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "NOT",
      "path": "7"
    },
    "1300": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1302": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1303": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ADD",
      "path": "7"
    },
    "1304": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "AND",
      "path": "7"
    },
    "1305": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1306": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ADD",
      "path": "7"
    },
    "1307": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1308": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1310": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1311": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1312": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1313": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "ADD",
      "path": "7"
    },
    "1314": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1315": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52C"
    },
    "1318": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1319": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1320": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "1323": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2138,
        2176
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1324": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1325": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2138,
        2176
      ],
      "op": "POP",
      "path": "7"
    },
    "1326": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2072,
        2225
      ],
      "op": "POP",
      "path": "7"
    },
    "1327": {
      "fn": "CardGame.sendMSCToken",
      "jump": "o",
      "offset": [
        2072,
        2225
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1328": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1338": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "AND",
      "path": "7"
    },
    "1339": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4259,
        4266
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1341": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1342": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1343": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1344": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1346": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1348": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1349": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1350": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1351": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1353": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1354": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4307
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1355": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4308,
        4318
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1356": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4319
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1357": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4319
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1358": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4319
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1359": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4286,
        4319
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1360": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4369,
        4382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1362": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4384,
        4400
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1363": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4404,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x55B"
    },
    "1366": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4418,
        4424
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1367": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4404,
        4417
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x122E"
    },
    "1370": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4404,
        4425
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1371": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4404,
        4425
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1372": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4368,
        4425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1373": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4368,
        4425
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4368,
        4425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4600,
        4612
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 3,
      "value": "0x56B"
    },
    "1380": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4368,
        4425
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1381": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4600,
        4602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1383": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4600,
        4612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F4A"
    },
    "1386": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4600,
        4612
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1387": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4600,
        4612
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1397": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "7"
    },
    "1398": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1400": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1401": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1402": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1403": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1405": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1407": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1408": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1409": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1410": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1412": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1413": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1414": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4575
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1415": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4576,
        4586
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1416": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1417": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1418": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1419": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1420": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1421": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1422": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1423": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4587
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1424": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x59A"
    },
    "1427": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4595
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1428": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4590,
        4595
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1429": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4590,
        4595
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1430": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4595
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F56"
    },
    "1433": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4554,
        4595
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1434": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4554,
        4595
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1435": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4553,
        4613
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A4"
    },
    "1438": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4553,
        4613
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1439": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4553,
        4613
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1440": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4553,
        4613
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F8B"
    },
    "1443": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        4553,
        4613
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1444": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4553,
        4613
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1445": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4545,
        4614
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1446": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        4163,
        4621
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "o",
      "offset": [
        4163,
        4621
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1452": {
      "offset": [
        1811,
        1839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1453": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "1455": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1456": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1457": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1458": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1459": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "LT",
      "path": "7"
    },
    "1460": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5BC"
    },
    "1463": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1464": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1466": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1467": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1468": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1469": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1471": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1472": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1473": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1474": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1476": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1477": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1478": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1479": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "ADD",
      "path": "7"
    },
    "1480": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1481": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1811,
        1839
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "offset": [
        1811,
        1839
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1484": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "o",
      "offset": [
        1811,
        1839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1485": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2231,
        2609
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1486": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1488": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1498": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1499": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1500": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F7"
    },
    "1503": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1504": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1506": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1515": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1516": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1518": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1519": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1522": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1523": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "1526": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1527": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2300,
        2313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1530": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1540": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "AND",
      "path": "7"
    },
    "1541": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1543": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1544": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1545": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1546": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1548": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1550": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1551": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1553": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1554": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2342
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1555": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2327,
        2349
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1556": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2319,
        2349
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1557": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2319,
        2349
      ],
      "op": "LT",
      "path": "7"
    },
    "1558": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1559": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52C"
    },
    "1562": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1572": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "AND",
      "path": "7"
    },
    "1573": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2374,
        2391
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1575": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1576": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1577": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1578": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2401
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1580": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1582": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1583": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1585": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1586": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2409
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1587": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1588": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1589": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2410,
        2415
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1590": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2410,
        2415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1591": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1592": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "LT",
      "path": "7"
    },
    "1593": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x644"
    },
    "1596": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1597": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x644"
    },
    "1600": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "1603": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2394,
        2416
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1604": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1605": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1607": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1608": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1609": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1610": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1612": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1613": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1614": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "ADD",
      "path": "7"
    },
    "1615": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "AND",
      "path": "7"
    },
    "1625": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2455,
        2497
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x664"
    },
    "1630": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2394,
        2416
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1631": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2490,
        2496
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1632": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2455,
        2478
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1770"
    },
    "1635": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2455,
        2497
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1636": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2455,
        2497
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1637": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2519
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x5"
    },
    "1639": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2519
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1640": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1642": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1643": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1652": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "op": "SUB"
    },
    "1661": {
      "op": "DUP6"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "AND"
    },
    "1664": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1666": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1667": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ADD",
      "path": "7"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "DUP5"
    },
    "1674": {
      "op": "SWAP1"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2430,
        2497
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1677": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2430,
        2497
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2519
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1680": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2519
      ],
      "op": "AND",
      "path": "7"
    },
    "1681": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2519
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1682": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2528
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "1687": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2528
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1693": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1695": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1696": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1697": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1698": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "SUB",
      "path": "7"
    },
    "1699": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1700": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1702": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1703": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "GAS",
      "path": "7"
    },
    "1704": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "CALL",
      "path": "7"
    },
    "1705": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1706": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1707": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1708": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6B9"
    },
    "1711": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1712": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1713": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1715": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1716": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1717": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1718": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1720": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1721": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1722": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1723": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1724": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1725": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1726": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1728": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1729": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1730": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1732": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "NOT",
      "path": "7"
    },
    "1733": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1735": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1736": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ADD",
      "path": "7"
    },
    "1737": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "AND",
      "path": "7"
    },
    "1738": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1739": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ADD",
      "path": "7"
    },
    "1740": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1741": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1743": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1744": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1745": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1746": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "ADD",
      "path": "7"
    },
    "1747": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1748": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6DD"
    },
    "1751": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1752": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1753": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "1756": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2511,
        2555
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1757": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1758": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2511,
        2555
      ],
      "op": "POP",
      "path": "7"
    },
    "1759": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2360,
        2603
      ],
      "op": "POP",
      "path": "7"
    },
    "1760": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2360,
        2603
      ],
      "op": "POP",
      "path": "7"
    },
    "1761": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 5
    },
    "1762": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1763": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EB"
    },
    "1766": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1767": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "1770": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2351,
        2358
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1771": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1772": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1773": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "POP",
      "path": "7"
    },
    "1774": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2351,
        2358
      ],
      "op": "POP",
      "path": "7"
    },
    "1775": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FA"
    },
    "1778": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2295,
        2603
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1779": {
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1780": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1782": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1783": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1784": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1785": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1786": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "LT",
      "path": "7"
    },
    "1787": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x703"
    },
    "1790": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1791": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1793": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1794": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1795": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1796": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1798": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1799": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1800": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1801": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1803": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1804": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1805": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1806": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "ADD",
      "path": "7"
    },
    "1807": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "SUB"
    },
    "1816": {
      "offset": [
        1520,
        1550
      ],
      "op": "AND",
      "path": "7"
    },
    "1817": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1820": {
      "fn": "CardGame.issueTokens",
      "jump": "o",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1821": {
      "fn": "CardGame.endGame",
      "offset": [
        9803,
        11038
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1822": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1824": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1834": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1835": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1836": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x747"
    },
    "1839": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1842": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1854": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1858": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1859": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "1862": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1864": {
      "fn": "CardGame.endGame",
      "offset": [
        9884,
        9913
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x2"
    },
    "1866": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9880
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1868": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9880
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1869": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9880
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1871": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9880
      ],
      "op": "AND",
      "path": "7"
    },
    "1872": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1874": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1875": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "GT",
      "path": "7"
    },
    "1876": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1877": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x760"
    },
    "1880": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1881": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x760"
    },
    "1884": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "1887": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        9870,
        9913
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1888": {
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1889": {
      "branch": 75,
      "fn": "CardGame.endGame",
      "offset": [
        9870,
        9913
      ],
      "op": "EQ",
      "path": "7"
    },
    "1890": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A5"
    },
    "1893": {
      "branch": 75,
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1894": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1896": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1905": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1908": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1910": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1911": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "ADD",
      "path": "7"
    },
    "1912": {
      "op": "MSTORE"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1917": {
      "op": "DUP3"
    },
    "1918": {
      "op": "ADD"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1947": {
      "op": "DUP3"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1952": {
      "op": "ADD"
    },
    "1953": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "1956": {
      "op": "JUMP"
    },
    "1957": {
      "fn": "CardGame.endGame",
      "offset": [
        9849,
        9960
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1958": {
      "fn": "CardGame.endGame",
      "offset": [
        9993,
        10006
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0xE"
    },
    "1960": {
      "fn": "CardGame.endGame",
      "offset": [
        9993,
        10006
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1961": {
      "fn": "CardGame.endGame",
      "offset": [
        9978,
        10007
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7BA"
    },
    "1964": {
      "fn": "CardGame.endGame",
      "offset": [
        9978,
        10007
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "CardGame.endGame",
      "offset": [
        9993,
        10006
      ],
      "op": "AND",
      "path": "7"
    },
    "1974": {
      "fn": "CardGame.endGame",
      "offset": [
        9978,
        9992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11D1"
    },
    "1977": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        9978,
        10007
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1978": {
      "branch": 76,
      "fn": "CardGame.endGame",
      "offset": [
        9978,
        10007
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1979": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x802"
    },
    "1982": {
      "branch": 76,
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1983": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1985": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1994": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1997": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1999": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2000": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "ADD",
      "path": "7"
    },
    "2001": {
      "op": "MSTORE"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2006": {
      "op": "DUP3"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH25",
      "value": "0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2040": {
      "op": "DUP3"
    },
    "2041": {
      "op": "ADD"
    },
    "2042": {
      "op": "MSTORE"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "2049": {
      "op": "JUMP"
    },
    "2050": {
      "fn": "CardGame.endGame",
      "offset": [
        9970,
        10037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2051": {
      "fn": "CardGame.endGame",
      "offset": [
        10068,
        10074
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0xD"
    },
    "2053": {
      "fn": "CardGame.endGame",
      "offset": [
        10068,
        10074
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "CardGame.endGame",
      "offset": [
        10068,
        10074
      ],
      "op": "AND",
      "path": "7"
    },
    "2063": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86C"
    },
    "2066": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2067": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2069": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2078": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2081": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2083": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2084": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "ADD",
      "path": "7"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH32",
      "value": "0x5374696C6C20646F65736E2774206B6E6F7720776869636820706C6179657220"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2128": {
      "op": "DUP3"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH9",
      "value": "0x34B9903BB4B73732B9"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2146": {
      "op": "DUP3"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "op": "MSTORE"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "2155": {
      "op": "JUMP"
    },
    "2156": {
      "fn": "CardGame.endGame",
      "offset": [
        10047,
        10155
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2157": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0xE"
    },
    "2159": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2160": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "2162": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2172": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2173": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "AND",
      "path": "7"
    },
    "2174": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2176": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2177": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2178": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2179": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10322
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2181": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2183": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2184": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2186": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2187": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2188": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2189": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2190": {
      "fn": "CardGame.endGame",
      "offset": [
        10314,
        10337
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2191": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2192": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2193": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2202": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2203": {
      "fn": "CardGame.endGame",
      "offset": [
        10270,
        10280
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2204": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2206": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2207": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ADD",
      "path": "7"
    },
    "2208": {
      "op": "MSTORE"
    },
    "2209": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2210": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2211": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2212": {
      "fn": "CardGame.endGame",
      "offset": [
        10294,
        10300
      ],
      "op": "AND",
      "path": "7"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2215": {
      "op": "DUP5"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "MSTORE"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2220": {
      "op": "DUP4"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "SWAP2"
    },
    "2223": {
      "op": "SWAP1"
    },
    "2224": {
      "op": "SWAP2"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "fn": "CardGame.endGame",
      "offset": [
        10229,
        10242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2227": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10256
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "2232": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10256
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2238": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2240": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2241": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2242": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2243": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "SUB",
      "path": "7"
    },
    "2244": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2245": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2247": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2248": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "GAS",
      "path": "7"
    },
    "2249": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "CALL",
      "path": "7"
    },
    "2250": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2251": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2252": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2253": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8DA"
    },
    "2256": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2257": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2258": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2260": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2261": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2262": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2263": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2265": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2266": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2267": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "POP",
      "path": "7"
    },
    "2268": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "POP",
      "path": "7"
    },
    "2269": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "POP",
      "path": "7"
    },
    "2270": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "POP",
      "path": "7"
    },
    "2271": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2273": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2274": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2275": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2277": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "NOT",
      "path": "7"
    },
    "2278": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2280": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2281": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ADD",
      "path": "7"
    },
    "2282": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "AND",
      "path": "7"
    },
    "2283": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2284": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ADD",
      "path": "7"
    },
    "2285": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2286": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2288": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2289": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "POP",
      "path": "7"
    },
    "2290": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2291": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "ADD",
      "path": "7"
    },
    "2292": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2293": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FE"
    },
    "2296": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2297": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2298": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "2301": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        10222,
        10347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2302": {
      "fn": "CardGame.endGame",
      "offset": [
        10222,
        10347
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2303": {
      "op": "POP"
    },
    "2304": {
      "fn": "CardGame.endGame",
      "offset": [
        10458,
        10471
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0xE"
    },
    "2306": {
      "fn": "CardGame.endGame",
      "offset": [
        10458,
        10471
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "CardGame.endGame",
      "offset": [
        10458,
        10471
      ],
      "op": "AND",
      "path": "7"
    },
    "2316": {
      "fn": "CardGame.endGame",
      "offset": [
        10475,
        10476
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2318": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2319": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2320": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2321": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10457
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2323": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2325": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2326": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2328": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2329": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10472
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2330": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10476
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2331": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10476
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2332": {
      "fn": "CardGame.endGame",
      "offset": [
        10449,
        10476
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2333": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2334": {
      "fn": "CardGame.endGame",
      "offset": [
        10586,
        10599
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2336": {
      "fn": "CardGame.endGame",
      "offset": [
        10586,
        10599
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "SUB"
    },
    "2345": {
      "fn": "CardGame.endGame",
      "offset": [
        10586,
        10599
      ],
      "op": "AND",
      "path": "7"
    },
    "2346": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2348": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2349": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2350": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2351": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10585
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2353": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2355": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2356": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2358": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2359": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10600
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2360": {
      "fn": "CardGame.endGame",
      "offset": [
        10578,
        10607
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2361": {
      "fn": "CardGame.endGame",
      "offset": [
        10570,
        10607
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2362": {
      "fn": "CardGame.endGame",
      "offset": [
        10570,
        10607
      ],
      "op": "LT",
      "path": "7"
    },
    "2363": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2364": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9B1"
    },
    "2367": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2368": {
      "fn": "CardGame.endGame",
      "offset": [
        10678,
        10691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2370": {
      "fn": "CardGame.endGame",
      "offset": [
        10678,
        10691
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "fn": "CardGame.endGame",
      "offset": [
        10678,
        10691
      ],
      "op": "AND",
      "path": "7"
    },
    "2380": {
      "fn": "CardGame.endGame",
      "offset": [
        10653,
        10667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2382": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2383": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2384": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2385": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10677
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2387": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2389": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2390": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2392": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2393": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10692
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2394": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2395": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2396": {
      "fn": "CardGame.endGame",
      "offset": [
        10693,
        10698
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2397": {
      "fn": "CardGame.endGame",
      "offset": [
        10693,
        10698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2398": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2399": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "LT",
      "path": "7"
    },
    "2400": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x96B"
    },
    "2403": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2404": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x96B"
    },
    "2407": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "2410": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        10670,
        10699
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2411": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2412": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2414": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2415": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2416": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2417": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2419": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2420": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2421": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2422": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2423": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2424": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "ADD",
      "path": "7"
    },
    "2425": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2426": {
      "fn": "CardGame.endGame",
      "offset": [
        10727,
        10740
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0xE"
    },
    "2428": {
      "fn": "CardGame.endGame",
      "offset": [
        10727,
        10740
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "op": "SUB"
    },
    "2437": {
      "fn": "CardGame.endGame",
      "offset": [
        10727,
        10740
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2438": {
      "fn": "CardGame.endGame",
      "offset": [
        10727,
        10740
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2439": {
      "fn": "CardGame.endGame",
      "offset": [
        10727,
        10740
      ],
      "op": "AND",
      "path": "7"
    },
    "2440": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2441": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2442": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2444": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2445": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2446": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2448": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2449": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2450": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10741
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2451": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2452": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2453": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2454": {
      "fn": "CardGame.endGame",
      "offset": [
        10670,
        10699
      ],
      "op": "AND",
      "path": "7"
    },
    "2455": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2456": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2457": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2458": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2459": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2460": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2461": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10749
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2462": {
      "fn": "CardGame.endGame",
      "offset": [
        10713,
        10753
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 12
    },
    "2465": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9A9"
    },
    "2468": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2469": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "2472": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        10621,
        10628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2473": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2474": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2475": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "POP",
      "path": "7"
    },
    "2476": {
      "fn": "CardGame.endGame",
      "offset": [
        10621,
        10628
      ],
      "op": "POP",
      "path": "7"
    },
    "2477": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x91D"
    },
    "2480": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2481": {
      "fn": "CardGame.endGame",
      "offset": [
        10521,
        10809
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "fn": "CardGame.endGame",
      "offset": [
        10834,
        10835
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x0"
    },
    "2485": {
      "fn": "CardGame.endGame",
      "offset": [
        10818,
        10831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2487": {
      "fn": "CardGame.endGame",
      "offset": [
        10818,
        10835
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2488": {
      "fn": "CardGame.endGame",
      "offset": [
        10818,
        10835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2489": {
      "fn": "CardGame.endGame",
      "offset": [
        10818,
        10835
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2490": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0x40"
    },
    "2492": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2493": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2494": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2495": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2496": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2497": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2499": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2500": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2501": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "ADD",
      "path": "7"
    },
    "2502": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2503": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2504": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2505": {
      "fn": "CardGame.endGame",
      "offset": [
        10853,
        10866
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2507": {
      "fn": "CardGame.endGame",
      "offset": [
        10853,
        10866
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "fn": "CardGame.endGame",
      "offset": [
        10853,
        10866
      ],
      "op": "AND",
      "path": "7"
    },
    "2517": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2518": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2519": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10852
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2521": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2522": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2523": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2524": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2525": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2526": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2527": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2528": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2529": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2530": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9EC"
    },
    "2533": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2534": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2535": {
      "fn": "CardGame.endGame",
      "offset": [
        10870,
        10886
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2536": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C0D"
    },
    "2539": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        10845,
        10886
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2540": {
      "fn": "CardGame.endGame",
      "offset": [
        10845,
        10886
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 15,
      "value": "0x40"
    },
    "2544": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2545": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2546": {
      "fn": "CardGame.endGame",
      "offset": [
        10924,
        10925
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2548": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2549": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2550": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2552": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2553": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "ADD",
      "path": "7"
    },
    "2554": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2555": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2556": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2557": {
      "fn": "CardGame.endGame",
      "offset": [
        10910,
        10926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2558": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10926
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2559": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10926
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0A"
    },
    "2562": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2563": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10907
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2565": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10907
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2566": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10926
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C72"
    },
    "2569": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        10896,
        10926
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2570": {
      "fn": "CardGame.endGame",
      "offset": [
        10896,
        10926
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10942
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0xD"
    },
    "2574": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2575": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "op": "NOT"
    },
    "2585": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2586": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2587": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "AND",
      "path": "7"
    },
    "2588": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2589": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2590": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2591": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10978
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0xE"
    },
    "2593": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2594": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2595": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2596": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2597": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "AND",
      "path": "7"
    },
    "2598": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2599": {
      "fn": "CardGame.endGame",
      "offset": [
        10965,
        10991
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2600": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11011
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x4"
    },
    "2602": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2603": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2604": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2606": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2607": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11011
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2610": {
      "op": "NOT"
    },
    "2611": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "AND",
      "path": "7"
    },
    "2612": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2613": {
      "fn": "CardGame.endGame",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2614": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2615": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "MUL",
      "path": "7"
    },
    "2616": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "OR",
      "path": "7"
    },
    "2617": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2618": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2619": {
      "fn": "CardGame.endGame",
      "offset": [
        11001,
        11031
      ],
      "op": "POP",
      "path": "7"
    },
    "2620": {
      "fn": "CardGame.endGame",
      "jump": "o",
      "offset": [
        9803,
        11038
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2621": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2624": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2634": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2635": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2636": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA67"
    },
    "2639": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2640": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2642": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2651": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2652": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2654": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2655": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "2658": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2659": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "2662": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2663": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0xA71"
    },
    "2667": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F6"
    },
    "2672": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2674": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2675": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2676": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2678": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "op": "SUB"
    },
    "2687": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2688": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2689": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2690": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9D"
    },
    "2693": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2694": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2696": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2703": {
      "op": "SHL"
    },
    "2704": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2705": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2706": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2708": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2709": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "2712": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2713": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "2716": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2717": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2724": {
      "op": "SHL"
    },
    "2725": {
      "op": "SUB"
    },
    "2726": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 20
    },
    "2727": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2728": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "AND",
      "path": "7"
    },
    "2729": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2731": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2732": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2733": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2734": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2736": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2738": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2739": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2741": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2742": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3133
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2743": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2744": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "SUB"
    },
    "2753": {
      "op": "NOT"
    },
    "2754": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "AND",
      "path": "7"
    },
    "2755": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2756": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2757": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2758": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "AND",
      "path": "7"
    },
    "2759": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "OR",
      "path": "7"
    },
    "2760": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2761": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3110,
        3146
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2762": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "o",
      "offset": [
        2997,
        3153
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2763": {
      "fn": "CardGame.drawCards",
      "offset": [
        7838,
        8380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2764": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2766": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2773": {
      "op": "SHL"
    },
    "2774": {
      "op": "SUB"
    },
    "2775": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2776": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2777": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2778": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF5"
    },
    "2781": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2782": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2784": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2793": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2794": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2796": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2797": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "2800": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2801": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "2804": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2805": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2806": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7915
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x4"
    },
    "2808": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2809": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2812": {
      "op": "NOT"
    },
    "2813": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "AND",
      "path": "7"
    },
    "2814": {
      "fn": "CardGame.drawCards",
      "offset": [
        7918,
        7947
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2816": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "OR",
      "path": "7"
    },
    "2817": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2818": {
      "fn": "CardGame.drawCards",
      "offset": [
        7905,
        7947
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2819": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7970
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0xE"
    },
    "2821": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2822": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "op": "SUB"
    },
    "2831": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2832": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "AND",
      "path": "7"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "op": "NOT"
    },
    "2842": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2843": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2844": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "AND",
      "path": "7"
    },
    "2845": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "OR",
      "path": "7"
    },
    "2846": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2847": {
      "fn": "CardGame.drawCards",
      "offset": [
        7957,
        7984
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2850": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2851": {
      "fn": "CardGame.drawCards",
      "offset": [
        8027,
        8040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2853": {
      "fn": "CardGame.drawCards",
      "offset": [
        8027,
        8040
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "fn": "CardGame.drawCards",
      "offset": [
        8027,
        8040
      ],
      "op": "AND",
      "path": "7"
    },
    "2863": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2865": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2866": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2867": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2868": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8026
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2870": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2872": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2873": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2875": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2876": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8041
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2877": {
      "fn": "CardGame.drawCards",
      "offset": [
        8019,
        8048
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2878": {
      "fn": "CardGame.drawCards",
      "offset": [
        8015,
        8048
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2879": {
      "fn": "CardGame.drawCards",
      "offset": [
        8015,
        8048
      ],
      "op": "LT",
      "path": "7"
    },
    "2880": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2881": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52C"
    },
    "2884": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2885": {
      "fn": "CardGame.drawCards",
      "offset": [
        8069,
        8086
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2887": {
      "fn": "CardGame.drawCards",
      "offset": [
        8089,
        8120
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB54"
    },
    "2890": {
      "fn": "CardGame.drawCards",
      "offset": [
        8107,
        8114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2892": {
      "fn": "CardGame.drawCards",
      "offset": [
        8107,
        8114
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2893": {
      "fn": "CardGame.drawCards",
      "offset": [
        8116,
        8119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2895": {
      "fn": "CardGame.drawCards",
      "offset": [
        8116,
        8119
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2896": {
      "fn": "CardGame.drawCards",
      "offset": [
        8089,
        8106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1848"
    },
    "2899": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        8089,
        8120
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2900": {
      "fn": "CardGame.drawCards",
      "offset": [
        8089,
        8120
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2901": {
      "fn": "CardGame.drawCards",
      "offset": [
        8069,
        8120
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2902": {
      "fn": "CardGame.drawCards",
      "offset": [
        8069,
        8120
      ],
      "op": "POP",
      "path": "7"
    },
    "2903": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 23,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "2936": {
      "fn": "CardGame.drawCards",
      "offset": [
        8187,
        8196
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2937": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2939": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2940": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB87"
    },
    "2943": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2944": {
      "op": "DUP2"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "SWAP1"
    },
    "2950": {
      "op": "JUMP"
    },
    "2951": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2952": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2954": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2955": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2956": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2957": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "SUB",
      "path": "7"
    },
    "2958": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2959": {
      "fn": "CardGame.drawCards",
      "offset": [
        8167,
        8197
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2960": {
      "fn": "CardGame.drawCards",
      "offset": [
        8228,
        8229
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x1"
    },
    "2962": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8224
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2964": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8224
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2966": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2967": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2968": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2969": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA2"
    },
    "2972": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2973": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2974": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD0"
    },
    "2977": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        8211,
        8229
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2978": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2979": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2980": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2981": {
      "fn": "CardGame.drawCards",
      "offset": [
        8211,
        8229
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2982": {
      "op": "POP"
    },
    "2983": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 25
    },
    "2984": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2985": {
      "op": "POP"
    },
    "2986": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB4"
    },
    "2989": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2992": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "2995": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        8050,
        8053
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2996": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2997": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2998": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "POP",
      "path": "7"
    },
    "2999": {
      "fn": "CardGame.drawCards",
      "offset": [
        8050,
        8053
      ],
      "op": "POP",
      "path": "7"
    },
    "3000": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB22"
    },
    "3003": {
      "fn": "CardGame.drawCards",
      "offset": [
        7995,
        8240
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3004": {
      "fn": "CardGame.getWinner",
      "offset": [
        8881,
        9797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3005": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3007": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3008": {
      "fn": "CardGame.getWinner",
      "offset": [
        8928,
        8935
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3010": {
      "fn": "CardGame.getWinner",
      "offset": [
        8928,
        8935
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3020": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3021": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3022": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE9"
    },
    "3025": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3026": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3028": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3035": {
      "op": "SHL"
    },
    "3036": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3037": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3038": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3040": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3041": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "3044": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3045": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "3048": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3049": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3050": {
      "fn": "CardGame.getWinner",
      "offset": [
        8982,
        9011
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x2"
    },
    "3052": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        8978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3054": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        8978
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3055": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        8978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3057": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        8978
      ],
      "op": "AND",
      "path": "7"
    },
    "3058": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3060": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3061": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "GT",
      "path": "7"
    },
    "3062": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3063": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC02"
    },
    "3066": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3067": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC02"
    },
    "3070": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "3073": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        8968,
        9011
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3074": {
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3075": {
      "branch": 77,
      "fn": "CardGame.getWinner",
      "offset": [
        8968,
        9011
      ],
      "op": "EQ",
      "path": "7"
    },
    "3076": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC47"
    },
    "3079": {
      "branch": 77,
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3080": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3082": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3091": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3094": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3096": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3097": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "ADD",
      "path": "7"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH21",
      "value": "0x47616D65206973206E6F74206F7665722079657421"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "op": "MSTORE"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3138": {
      "op": "ADD"
    },
    "3139": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "3142": {
      "op": "JUMP"
    },
    "3143": {
      "fn": "CardGame.getWinner",
      "offset": [
        8947,
        9058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3144": {
      "fn": "CardGame.getWinner",
      "offset": [
        9270,
        9281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3146": {
      "fn": "CardGame.getWinner",
      "offset": [
        9301,
        9310
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3147": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3148": {
      "fn": "CardGame.getWinner",
      "offset": [
        9320,
        9331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "3150": {
      "fn": "CardGame.getWinner",
      "offset": [
        9320,
        9338
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3151": {
      "fn": "CardGame.getWinner",
      "offset": [
        9316,
        9338
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3152": {
      "fn": "CardGame.getWinner",
      "offset": [
        9316,
        9338
      ],
      "op": "LT",
      "path": "7"
    },
    "3153": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3154": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDB1"
    },
    "3157": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3158": {
      "fn": "CardGame.getWinner",
      "offset": [
        9380,
        9383
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3159": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "3161": {
      "fn": "CardGame.getWinner",
      "offset": [
        9375,
        9376
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3162": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3163": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3164": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3165": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "LT",
      "path": "7"
    },
    "3166": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC69"
    },
    "3169": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3170": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC69"
    },
    "3173": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "3176": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9363,
        9377
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3177": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3178": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3179": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3181": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3182": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3184": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3186": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3187": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "ADD",
      "path": "7"
    },
    "3188": {
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9377
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3189": {
      "branch": 78,
      "fn": "CardGame.getWinner",
      "offset": [
        9363,
        9383
      ],
      "op": "GT",
      "path": "7"
    },
    "3190": {
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3191": {
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF9"
    },
    "3194": {
      "branch": 78,
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3195": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9420
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0xC"
    },
    "3197": {
      "fn": "CardGame.getWinner",
      "offset": [
        9421,
        9422
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3198": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3199": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3200": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3201": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "LT",
      "path": "7"
    },
    "3202": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC8D"
    },
    "3205": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3206": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC8D"
    },
    "3209": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "3212": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9409,
        9423
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3213": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3214": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3216": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3217": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3218": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3219": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3221": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3222": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3223": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3224": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3225": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3226": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "ADD",
      "path": "7"
    },
    "3227": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3228": {
      "fn": "CardGame.getWinner",
      "offset": [
        9458,
        9471
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0xE"
    },
    "3230": {
      "fn": "CardGame.getWinner",
      "offset": [
        9458,
        9471
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "fn": "CardGame.getWinner",
      "offset": [
        9458,
        9471
      ],
      "op": "AND",
      "path": "7"
    },
    "3240": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3241": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3242": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9457
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3244": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3245": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3246": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3247": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3249": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3250": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3251": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3252": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3253": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3254": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3255": {
      "fn": "CardGame.getWinner",
      "offset": [
        9409,
        9423
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3258": {
      "fn": "CardGame.getWinner",
      "offset": [
        9473,
        9474
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3259": {
      "fn": "CardGame.getWinner",
      "offset": [
        9473,
        9474
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3260": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3261": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "LT",
      "path": "7"
    },
    "3262": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC9"
    },
    "3265": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3266": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC9"
    },
    "3269": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "3272": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9450,
        9475
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3273": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3274": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3276": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3277": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3278": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3279": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3281": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3282": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3283": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3284": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "ADD",
      "path": "7"
    },
    "3285": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3286": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "3288": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3289": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "op": "SUB"
    },
    "3298": {
      "op": "NOT"
    },
    "3299": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "AND",
      "path": "7"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3309": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3310": {
      "fn": "CardGame.getWinner",
      "offset": [
        9450,
        9475
      ],
      "op": "AND",
      "path": "7"
    },
    "3311": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3312": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3313": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3314": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "OR",
      "path": "7"
    },
    "3315": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3316": {
      "fn": "CardGame.getWinner",
      "offset": [
        9441,
        9475
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3317": {
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9F"
    },
    "3320": {
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3321": {
      "fn": "CardGame.getWinner",
      "offset": [
        9359,
        9758
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3322": {
      "fn": "CardGame.getWinner",
      "offset": [
        9518,
        9521
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3323": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9511
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "3325": {
      "fn": "CardGame.getWinner",
      "offset": [
        9512,
        9513
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3326": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3327": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3328": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3329": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "LT",
      "path": "7"
    },
    "3330": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "3333": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3334": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "3337": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "3340": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9500,
        9514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3341": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3342": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3343": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3345": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3346": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3348": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3350": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3351": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "ADD",
      "path": "7"
    },
    "3352": {
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3353": {
      "branch": 79,
      "fn": "CardGame.getWinner",
      "offset": [
        9500,
        9521
      ],
      "op": "EQ",
      "path": "7"
    },
    "3354": {
      "fn": "CardGame.getWinner",
      "offset": [
        9496,
        9758
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3355": {
      "fn": "CardGame.getWinner",
      "offset": [
        9496,
        9758
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9F"
    },
    "3358": {
      "branch": 79,
      "fn": "CardGame.getWinner",
      "offset": [
        9496,
        9758
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3359": {
      "fn": "CardGame.getWinner",
      "offset": [
        9541,
        9554
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3361": {
      "fn": "CardGame.getWinner",
      "offset": [
        9557,
        9564
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD2B"
    },
    "3364": {
      "fn": "CardGame.getWinner",
      "offset": [
        9563,
        9564
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3366": {
      "fn": "CardGame.getWinner",
      "offset": [
        9557,
        9560
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3367": {
      "fn": "CardGame.getWinner",
      "offset": [
        9557,
        9564
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE8"
    },
    "3370": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9557,
        9564
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3371": {
      "fn": "CardGame.getWinner",
      "offset": [
        9557,
        9564
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3372": {
      "fn": "CardGame.getWinner",
      "offset": [
        9541,
        9564
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "branch": 80,
      "fn": "CardGame.getWinner",
      "offset": [
        9586,
        9596
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3375": {
      "fn": "CardGame.getWinner",
      "offset": [
        9582,
        9744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD8E"
    },
    "3378": {
      "branch": 80,
      "fn": "CardGame.getWinner",
      "offset": [
        9582,
        9744
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3379": {
      "fn": "CardGame.getWinner",
      "offset": [
        9637,
        9650
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0xE"
    },
    "3381": {
      "fn": "CardGame.getWinner",
      "offset": [
        9637,
        9650
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3388": {
      "op": "SHL"
    },
    "3389": {
      "op": "SUB"
    },
    "3390": {
      "fn": "CardGame.getWinner",
      "offset": [
        9637,
        9650
      ],
      "op": "AND",
      "path": "7"
    },
    "3391": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3393": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3394": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3395": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3396": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9636
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3398": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3400": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3401": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3403": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3404": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9651
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3405": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3406": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3407": {
      "fn": "CardGame.getWinner",
      "offset": [
        9652,
        9653
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3408": {
      "fn": "CardGame.getWinner",
      "offset": [
        9652,
        9653
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3409": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3410": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "LT",
      "path": "7"
    },
    "3411": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD5E"
    },
    "3414": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3415": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD5E"
    },
    "3418": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "3421": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9629,
        9654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3422": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3423": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3425": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3426": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3427": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3428": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3430": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3431": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3432": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3433": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "ADD",
      "path": "7"
    },
    "3434": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3435": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9626
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "3437": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3438": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3445": {
      "op": "SHL"
    },
    "3446": {
      "op": "SUB"
    },
    "3447": {
      "op": "NOT"
    },
    "3448": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "AND",
      "path": "7"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3458": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3459": {
      "fn": "CardGame.getWinner",
      "offset": [
        9629,
        9654
      ],
      "op": "AND",
      "path": "7"
    },
    "3460": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3461": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3462": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3463": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "OR",
      "path": "7"
    },
    "3464": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3465": {
      "fn": "CardGame.getWinner",
      "offset": [
        9620,
        9654
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3466": {
      "fn": "CardGame.getWinner",
      "offset": [
        9582,
        9744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9D"
    },
    "3469": {
      "fn": "CardGame.getWinner",
      "offset": [
        9582,
        9744
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3470": {
      "fn": "CardGame.getWinner",
      "offset": [
        9582,
        9744
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3471": {
      "fn": "CardGame.getWinner",
      "offset": [
        9683,
        9688
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3472": {
      "fn": "CardGame.getWinner",
      "offset": [
        9692,
        9693
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3474": {
      "branch": 81,
      "fn": "CardGame.getWinner",
      "offset": [
        9683,
        9693
      ],
      "op": "EQ",
      "path": "7"
    },
    "3475": {
      "fn": "CardGame.getWinner",
      "offset": [
        9679,
        9744
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3476": {
      "fn": "CardGame.getWinner",
      "offset": [
        9679,
        9744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9D"
    },
    "3479": {
      "branch": 81,
      "fn": "CardGame.getWinner",
      "offset": [
        9679,
        9744
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3480": {
      "fn": "CardGame.getWinner",
      "offset": [
        9717,
        9725
      ],
      "op": "POP",
      "path": "7",
      "statement": 30
    },
    "3481": {
      "fn": "CardGame.getWinner",
      "offset": [
        9717,
        9725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9F"
    },
    "3484": {
      "fn": "CardGame.getWinner",
      "offset": [
        9717,
        9725
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3485": {
      "fn": "CardGame.getWinner",
      "offset": [
        9679,
        9744
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3486": {
      "fn": "CardGame.getWinner",
      "offset": [
        9523,
        9758
      ],
      "op": "POP",
      "path": "7"
    },
    "3487": {
      "fn": "CardGame.getWinner",
      "offset": [
        9496,
        9758
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3488": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 31
    },
    "3489": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA9"
    },
    "3492": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3493": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "3496": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        9340,
        9343
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3497": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3498": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3499": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "POP",
      "path": "7"
    },
    "3500": {
      "fn": "CardGame.getWinner",
      "offset": [
        9340,
        9343
      ],
      "op": "POP",
      "path": "7"
    },
    "3501": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC4B"
    },
    "3504": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3505": {
      "fn": "CardGame.getWinner",
      "offset": [
        9296,
        9768
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "fn": "CardGame.getWinner",
      "offset": [
        9784,
        9790
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0xD"
    },
    "3510": {
      "fn": "CardGame.getWinner",
      "offset": [
        9784,
        9790
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "op": "SUB"
    },
    "3519": {
      "fn": "CardGame.getWinner",
      "offset": [
        9784,
        9790
      ],
      "op": "AND",
      "path": "7"
    },
    "3520": {
      "fn": "CardGame.getWinner",
      "offset": [
        9784,
        9790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3521": {
      "op": "POP"
    },
    "3522": {
      "fn": "CardGame.getWinner",
      "offset": [
        8881,
        9797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3523": {
      "fn": "CardGame.getWinner",
      "jump": "o",
      "offset": [
        8881,
        9797
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3524": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3525": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 33
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "op": "SUB"
    },
    "3534": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "3567": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "3"
    },
    "3568": {
      "branch": 95,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "3"
    },
    "3569": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3C"
    },
    "3572": {
      "branch": 95,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3573": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3575": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3582": {
      "op": "SHL"
    },
    "3583": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3584": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3587": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3589": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3590": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "3"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3596": {
      "op": "DUP3"
    },
    "3597": {
      "op": "ADD"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3634": {
      "op": "DUP3"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "MSTORE"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3639": {
      "op": "ADD"
    },
    "3640": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AE"
    },
    "3643": {
      "op": "JUMP"
    },
    "3644": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3645": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 34,
      "value": "0x52C"
    },
    "3648": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3649": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3650": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19BF"
    },
    "3653": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3654": {
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3655": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3657": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3659": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3660": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3661": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3663": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3664": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3666": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3668": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3669": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3670": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3671": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3672": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3673": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "LT",
      "path": "7"
    },
    "3674": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE62"
    },
    "3677": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3678": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3680": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3681": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3682": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3683": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3685": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3686": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3687": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3688": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3690": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3691": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3692": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3693": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "ADD",
      "path": "7"
    },
    "3694": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "offset": [
        1470,
        1514
      ],
      "op": "AND",
      "path": "7"
    },
    "3704": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "offset": [
        1470,
        1514
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3707": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "jump": "o",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3710": {
      "fn": "CardGame.allowToken",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3711": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3713": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3723": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3724": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3725": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA8"
    },
    "3728": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3729": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3731": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3740": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3741": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3743": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3744": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "3747": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3748": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "3751": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3752": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3753": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2691
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x9"
    },
    "3755": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3756": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3757": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3759": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3760": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "ADD",
      "path": "7"
    },
    "3761": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3762": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3765": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3766": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3767": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3768": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3769": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "3802": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "ADD",
      "path": "7"
    },
    "3803": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3804": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "op": "NOT"
    },
    "3814": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "AND",
      "path": "7"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3824": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3825": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3826": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "AND",
      "path": "7"
    },
    "3827": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3828": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3829": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3830": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "OR",
      "path": "7"
    },
    "3831": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3832": {
      "fn": "CardGame.allowToken",
      "offset": [
        2678,
        2704
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3833": {
      "fn": "CardGame.allowToken",
      "jump": "o",
      "offset": [
        2615,
        2711
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3834": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5194,
        5902
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3835": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5302,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x0"
    },
    "3837": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5298
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3839": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5298
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3840": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5298
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3842": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5298
      ],
      "op": "AND",
      "path": "7"
    },
    "3843": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3845": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3846": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "GT",
      "path": "7"
    },
    "3847": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3848": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF13"
    },
    "3851": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3852": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF13"
    },
    "3855": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "3858": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5288,
        5317
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3859": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3860": {
      "branch": 82,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5317
      ],
      "op": "EQ",
      "path": "7"
    },
    "3861": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3862": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF35"
    },
    "3865": {
      "branch": 82,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5352
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5335,
        5352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3869": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3871": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5331
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3872": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3874": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5331
      ],
      "op": "AND",
      "path": "7"
    },
    "3875": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3877": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3878": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "GT",
      "path": "7"
    },
    "3879": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3880": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF33"
    },
    "3883": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3884": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF33"
    },
    "3887": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "3890": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5321,
        5352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3891": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3892": {
      "branch": 83,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5321,
        5352
      ],
      "op": "EQ",
      "path": "7"
    },
    "3893": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5288,
        5352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3894": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF96"
    },
    "3897": {
      "branch": 83,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3898": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3900": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3909": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3914": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3915": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "ADD",
      "path": "7"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH32",
      "value": "0x596F752063616E2774206765742074686520726566756E642061667465722067"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH12",
      "value": "0x616D65207374617274656421"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3980": {
      "op": "DUP3"
    },
    "3981": {
      "op": "ADD"
    },
    "3982": {
      "op": "MSTORE"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3985": {
      "op": "ADD"
    },
    "3986": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "3989": {
      "op": "JUMP"
    },
    "3990": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5267,
        5422
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "op": "SUB"
    },
    "3999": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 37
    },
    "4000": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "AND",
      "path": "7"
    },
    "4001": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4003": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4004": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4005": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4006": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5466
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4008": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4010": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4011": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4012": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4013": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4015": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4016": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4017": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5474
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4018": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5475,
        5485
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4019": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4020": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4021": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4022": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4023": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4024": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4025": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4026": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5486
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4027": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5497
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4028": {
      "op": "GT"
    },
    "4029": {
      "branch": 84,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5453,
        5497
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4030": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1015"
    },
    "4033": {
      "branch": 84,
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4034": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4036": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4043": {
      "op": "SHL"
    },
    "4044": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4045": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4048": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4050": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4051": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "ADD",
      "path": "7"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4057": {
      "op": "DUP3"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "op": "MSTORE"
    },
    "4060": {
      "op": "PUSH32",
      "value": "0x596F75206469646E27742062657420746F6B656E206F662074686520616D6F75"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4095": {
      "op": "DUP3"
    },
    "4096": {
      "op": "ADD"
    },
    "4097": {
      "op": "MSTORE"
    },
    "4098": {
      "op": "PUSH3",
      "value": "0x6E7421"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4104": {
      "op": "SHL"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4107": {
      "op": "DUP3"
    },
    "4108": {
      "op": "ADD"
    },
    "4109": {
      "op": "MSTORE"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4112": {
      "op": "ADD"
    },
    "4113": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "4116": {
      "op": "JUMP"
    },
    "4117": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5432,
        5558
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4118": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0x40"
    },
    "4120": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4121": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4130": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4131": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5592,
        5602
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4132": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4134": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4135": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ADD",
      "path": "7"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4139": {
      "op": "DUP2"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "op": "DUP4"
    },
    "4142": {
      "op": "SWAP1"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5591
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4153": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5591
      ],
      "op": "AND",
      "path": "7"
    },
    "4154": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5591
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4155": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5591
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "4160": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5591
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4166": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4168": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4169": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4170": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4171": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "SUB",
      "path": "7"
    },
    "4172": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4173": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4175": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4176": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "GAS",
      "path": "7"
    },
    "4177": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "CALL",
      "path": "7"
    },
    "4178": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4179": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4180": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4181": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1062"
    },
    "4184": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4185": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4186": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4188": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4189": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4190": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4191": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4193": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4194": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4195": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "POP",
      "path": "7"
    },
    "4196": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "POP",
      "path": "7"
    },
    "4197": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "POP",
      "path": "7"
    },
    "4198": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "POP",
      "path": "7"
    },
    "4199": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4201": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4202": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4203": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4205": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "NOT",
      "path": "7"
    },
    "4206": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4208": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4209": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ADD",
      "path": "7"
    },
    "4210": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "AND",
      "path": "7"
    },
    "4211": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4212": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ADD",
      "path": "7"
    },
    "4213": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4214": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4216": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4217": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "POP",
      "path": "7"
    },
    "4218": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4219": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "ADD",
      "path": "7"
    },
    "4220": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4221": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1086"
    },
    "4224": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4225": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4226": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "4229": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5568,
        5612
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4230": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5568,
        5612
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4238": {
      "op": "SHL"
    },
    "4239": {
      "op": "SUB"
    },
    "4240": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 39
    },
    "4241": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "AND",
      "path": "7"
    },
    "4242": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4244": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4245": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4246": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4247": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5683
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4249": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4251": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4252": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4253": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4254": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4256": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4257": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4258": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4259": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5692,
        5702
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4260": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4261": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4262": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4263": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4264": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4265": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4266": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4267": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5703
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4268": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10B6"
    },
    "4271": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4272": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5718,
        5725
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4273": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5718,
        5725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4274": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5725
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FFC"
    },
    "4277": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5670,
        5725
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4278": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5670,
        5725
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "SUB"
    },
    "4287": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4288": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "AND",
      "path": "7"
    },
    "4289": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4291": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4292": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4293": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4294": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4296": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4298": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4299": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4300": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4301": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4303": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4304": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4305": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5643
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4306": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5644,
        5654
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4307": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4308": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4309": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4310": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4311": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4312": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4313": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5655
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4314": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5725
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4315": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5725
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4316": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5725
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4317": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5622,
        5725
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4318": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 40
    },
    "4319": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4320": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4321": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5762
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4323": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4324": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4325": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4326": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4327": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5770
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4328": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F2"
    },
    "4331": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4332": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5773,
        5780
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4333": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5773,
        5780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4334": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FFC"
    },
    "4337": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5754,
        5780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4338": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5754,
        5780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "op": "SUB"
    },
    "4347": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4348": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "AND",
      "path": "7"
    },
    "4349": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4351": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4352": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4353": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4354": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4356": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4358": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4359": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4360": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4361": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4363": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4364": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4365": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5751
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4366": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5780
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4367": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4368": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5780
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4369": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5735,
        5780
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4370": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5807
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4372": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4373": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5815
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4374": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4375": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4376": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5815
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4377": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5816,
        5826
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4378": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4379": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4380": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4381": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4382": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4383": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5794,
        5827
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4384": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5790,
        5896
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52C"
    },
    "4387": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5790,
        5896
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4388": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5848,
        5885
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 41,
      "value": "0x52C"
    },
    "4391": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5866,
        5872
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4392": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5874,
        5884
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4393": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        5848,
        5865
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA5"
    },
    "4396": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        5848,
        5885
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4397": {
      "fn": "CardGame.startGame",
      "offset": [
        5908,
        6111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4398": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4400": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "op": "SUB"
    },
    "4409": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4410": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4411": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4412": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1157"
    },
    "4415": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4416": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4418": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4427": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4428": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4430": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4431": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "4434": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4435": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "4438": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4439": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4440": {
      "fn": "CardGame.startGame",
      "offset": [
        5991,
        6008
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x1"
    },
    "4442": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        5987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4444": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        5987
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4445": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        5987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "4447": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        5987
      ],
      "op": "AND",
      "path": "7"
    },
    "4448": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4450": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4451": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "GT",
      "path": "7"
    },
    "4452": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4453": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1170"
    },
    "4456": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4457": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1170"
    },
    "4460": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "4463": {
      "fn": "CardGame.startGame",
      "jump": "i",
      "offset": [
        5977,
        6008
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4464": {
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4465": {
      "branch": 85,
      "fn": "CardGame.startGame",
      "offset": [
        5977,
        6008
      ],
      "op": "EQ",
      "path": "7"
    },
    "4466": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11BD"
    },
    "4469": {
      "branch": 85,
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4470": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4472": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4473": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4479": {
      "op": "SHL"
    },
    "4480": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4481": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4484": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4486": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4487": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "ADD",
      "path": "7"
    },
    "4488": {
      "op": "MSTORE"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4493": {
      "op": "DUP3"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "MSTORE"
    },
    "4496": {
      "op": "PUSH32",
      "value": "0x43616E2774207374617274206E65772067616D65207374617465207965742100"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4531": {
      "op": "DUP3"
    },
    "4532": {
      "op": "ADD"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "4540": {
      "op": "JUMP"
    },
    "4541": {
      "fn": "CardGame.startGame",
      "offset": [
        5956,
        6065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4542": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6086
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x4"
    },
    "4544": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4545": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4546": {
      "fn": "CardGame.startGame",
      "offset": [
        6089,
        6104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4548": {
      "fn": "CardGame.startGame",
      "offset": [
        6089,
        6104
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4549": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6086
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4552": {
      "op": "NOT"
    },
    "4553": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "AND",
      "path": "7"
    },
    "4554": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4556": {
      "fn": "CardGame.startGame",
      "offset": [
        6089,
        6104
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4557": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA36"
    },
    "4560": {
      "fn": "CardGame.startGame",
      "offset": [
        6076,
        6104
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4561": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4562": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2773,
        2777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4564": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2773,
        2777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4565": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2821,
        2834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4567": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2821,
        2841
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4568": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2813,
        2841
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4569": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2813,
        2841
      ],
      "op": "LT",
      "path": "7"
    },
    "4570": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2789,
        2985
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4571": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2789,
        2985
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1228"
    },
    "4574": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2789,
        2985
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4575": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2897,
        2903
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2903
      ],
      "op": "AND",
      "path": "7"
    },
    "4585": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4587": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2887,
        2892
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4588": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4589": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4590": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4591": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "LT",
      "path": "7"
    },
    "4592": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11FB"
    },
    "4595": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4596": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11FB"
    },
    "4599": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "4602": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        2873,
        2893
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4603": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4604": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4606": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4607": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4608": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4609": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4611": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4612": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4613": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4614": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "ADD",
      "path": "7"
    },
    "4615": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2893
      ],
      "op": "AND",
      "path": "7"
    },
    "4625": {
      "branch": 86,
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2873,
        2903
      ],
      "op": "EQ",
      "path": "7"
    },
    "4626": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2869,
        2949
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4627": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2869,
        2949
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x121F"
    },
    "4630": {
      "branch": 86,
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2869,
        2949
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2930,
        2934
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x1"
    },
    "4634": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2930,
        2934
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4635": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4639": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2869,
        2949
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2969,
        2974
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 45,
      "value": "0x0"
    },
    "4643": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2969,
        2974
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4644": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4648": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2789,
        2985
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4649": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2789,
        2985
      ],
      "op": "POP",
      "path": "7"
    },
    "4650": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4651": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4652": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        2717,
        2991
      ],
      "op": "POP",
      "path": "7"
    },
    "4653": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        2717,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4654": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4661": {
      "op": "SHL"
    },
    "4662": {
      "op": "SUB"
    },
    "4663": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4664": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4665": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "AND",
      "path": "7"
    },
    "4666": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4668": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4669": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4670": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4671": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3317
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4673": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4675": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4676": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4678": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4679": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4680": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4681": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4682": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4683": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4684": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4691": {
      "op": "SHL"
    },
    "4692": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4693": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4694": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4695": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4696": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4697": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4698": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4699": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4700": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4701": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "AND",
      "path": "7"
    },
    "4702": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4703": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4704": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4705": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4706": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3243,
        3250
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4707": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4708": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4709": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3565
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "4714": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3565
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4715": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4717": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4718": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4719": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ADD",
      "path": "7"
    },
    "4720": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4721": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "4723": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4724": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4725": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4726": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4727": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4728": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4729": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SUB",
      "path": "7"
    },
    "4730": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ADD",
      "path": "7"
    },
    "4731": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4732": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3302,
        3325
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4733": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "GAS",
      "path": "7"
    },
    "4734": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "4735": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4736": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4737": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4738": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x128F"
    },
    "4741": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4742": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4743": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4745": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4746": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4747": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4748": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4750": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4751": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4752": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4753": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4754": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4755": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4756": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4758": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4759": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4760": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4762": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "NOT",
      "path": "7"
    },
    "4763": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4765": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4766": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ADD",
      "path": "7"
    },
    "4767": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "AND",
      "path": "7"
    },
    "4768": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4769": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ADD",
      "path": "7"
    },
    "4770": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4771": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4773": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4774": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4775": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4776": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "ADD",
      "path": "7"
    },
    "4777": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4778": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B3"
    },
    "4781": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4782": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4783": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x202D"
    },
    "4786": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        3540,
        3567
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4787": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3540,
        3567
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4788": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4789": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4790": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4791": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4792": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4793": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3515,
        3567
      ],
      "op": "POP",
      "path": "7"
    },
    "4794": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3577,
        3593
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4796": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3613
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4803": {
      "op": "SHL"
    },
    "4804": {
      "op": "SUB"
    },
    "4805": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3622
      ],
      "op": "AND",
      "path": "7"
    },
    "4806": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3622
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "4811": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4813": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4814": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4815": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "4820": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "AND",
      "path": "7"
    },
    "4821": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "4823": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "SHL",
      "path": "7"
    },
    "4824": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4825": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4826": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4828": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ADD",
      "path": "7"
    },
    "4829": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4831": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4833": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4834": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4835": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4836": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "SUB",
      "path": "7"
    },
    "4837": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4838": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4839": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "GAS",
      "path": "7"
    },
    "4840": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "4841": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4842": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4843": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4844": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F9"
    },
    "4847": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4848": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4849": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4851": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4852": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4853": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4854": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4856": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4857": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4858": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "POP",
      "path": "7"
    },
    "4859": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "POP",
      "path": "7"
    },
    "4860": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "POP",
      "path": "7"
    },
    "4861": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "POP",
      "path": "7"
    },
    "4862": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4864": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4865": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4866": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4868": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "NOT",
      "path": "7"
    },
    "4869": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4871": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4872": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ADD",
      "path": "7"
    },
    "4873": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "AND",
      "path": "7"
    },
    "4874": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4875": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ADD",
      "path": "7"
    },
    "4876": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4877": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4879": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4880": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "POP",
      "path": "7"
    },
    "4881": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4882": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "ADD",
      "path": "7"
    },
    "4883": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4884": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x131D"
    },
    "4887": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4888": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4889": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207D"
    },
    "4892": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        3604,
        3624
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4893": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3604,
        3624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4894": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3651,
        3656
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 46
    },
    "4895": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3651,
        3656
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "4896": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3596,
        3625
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "4898": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3596,
        3625
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4899": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3596,
        3625
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4900": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3596,
        3625
      ],
      "op": "AND",
      "path": "7"
    },
    "4901": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3596,
        3625
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "4902": {
      "op": "POP"
    },
    "4903": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3651,
        3656
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4904": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        3651,
        3656
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "op": "POP"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "op": "POP"
    },
    "4909": {
      "op": "POP"
    },
    "4910": {
      "fn": "CardGame.getTokenValue",
      "jump": "o",
      "offset": [
        3159,
        3675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4911": {
      "fn": "CardGame.betMoney",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4912": {
      "fn": "CardGame.betMoney",
      "offset": [
        6203,
        6204
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 47,
      "value": "0x0"
    },
    "4914": {
      "fn": "CardGame.betMoney",
      "offset": [
        6193,
        6200
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4915": {
      "branch": 87,
      "fn": "CardGame.betMoney",
      "offset": [
        6193,
        6204
      ],
      "op": "GT",
      "path": "7"
    },
    "4916": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x137F"
    },
    "4919": {
      "branch": 87,
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4920": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4922": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4931": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4934": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4936": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4937": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "ADD",
      "path": "7"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4943": {
      "op": "DUP3"
    },
    "4944": {
      "op": "ADD"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "PUSH32",
      "value": "0x4120626574206D757374206265206D6F7265207468616E203000000000000000"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4981": {
      "op": "DUP3"
    },
    "4982": {
      "op": "ADD"
    },
    "4983": {
      "op": "MSTORE"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "4990": {
      "op": "JUMP"
    },
    "4991": {
      "fn": "CardGame.betMoney",
      "offset": [
        6185,
        6234
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4992": {
      "fn": "CardGame.betMoney",
      "offset": [
        6252,
        6274
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 48,
      "value": "0x1388"
    },
    "4995": {
      "fn": "CardGame.betMoney",
      "offset": [
        6267,
        6273
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4996": {
      "fn": "CardGame.betMoney",
      "offset": [
        6252,
        6266
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11D1"
    },
    "4999": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        6252,
        6274
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5000": {
      "branch": 88,
      "fn": "CardGame.betMoney",
      "offset": [
        6252,
        6274
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5001": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13D0"
    },
    "5004": {
      "branch": 88,
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5005": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5007": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5014": {
      "op": "SHL"
    },
    "5015": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5016": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5019": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5021": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5022": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "ADD",
      "path": "7"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5028": {
      "op": "DUP3"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "PUSH25",
      "value": "0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5062": {
      "op": "DUP3"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "op": "MSTORE"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5067": {
      "op": "ADD"
    },
    "5068": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "5071": {
      "op": "JUMP"
    },
    "5072": {
      "fn": "CardGame.betMoney",
      "offset": [
        6244,
        6304
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "op": "SUB"
    },
    "5081": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 49
    },
    "5082": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "AND",
      "path": "7"
    },
    "5083": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5085": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5086": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5087": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5088": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6342
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "5090": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5092": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5093": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5095": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5096": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6350
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5097": {
      "fn": "CardGame.betMoney",
      "offset": [
        6335,
        6357
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5098": {
      "fn": "CardGame.betMoney",
      "offset": [
        6360,
        6361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "5100": {
      "op": "GT"
    },
    "5101": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145E"
    },
    "5104": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5105": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5107": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5116": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5119": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5121": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5122": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "ADD",
      "path": "7"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "MSTORE"
    },
    "5131": {
      "op": "PUSH32",
      "value": "0x536F7272792C20746869732067616D6520697320616C72656164792066756C6C"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5166": {
      "op": "DUP3"
    },
    "5167": {
      "op": "ADD"
    },
    "5168": {
      "op": "MSTORE"
    },
    "5169": {
      "op": "PUSH32",
      "value": "0x2E20506C656173652077616974206E6578742067616D652E0000000000000000"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "ADD"
    },
    "5206": {
      "op": "MSTORE"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "5213": {
      "op": "JUMP"
    },
    "5214": {
      "fn": "CardGame.betMoney",
      "offset": [
        6314,
        6443
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5215": {
      "fn": "CardGame.betMoney",
      "offset": [
        6475,
        6490
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 50,
      "value": "0x0"
    },
    "5217": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5219": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6471
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5220": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "5222": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6471
      ],
      "op": "AND",
      "path": "7"
    },
    "5223": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "5225": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5226": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "GT",
      "path": "7"
    },
    "5227": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5228": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1477"
    },
    "5231": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5232": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1477"
    },
    "5235": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "5238": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        6461,
        6490
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5239": {
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5240": {
      "branch": 89,
      "fn": "CardGame.betMoney",
      "offset": [
        6461,
        6490
      ],
      "op": "EQ",
      "path": "7"
    },
    "5241": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14C4"
    },
    "5244": {
      "branch": 89,
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5245": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5247": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5254": {
      "op": "SHL"
    },
    "5255": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5256": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5259": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5261": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5262": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "ADD",
      "path": "7"
    },
    "5263": {
      "op": "MSTORE"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5268": {
      "op": "DUP3"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "MSTORE"
    },
    "5271": {
      "op": "PUSH32",
      "value": "0x596F752063616E277420626574206D6F6E6579207768696C6520000000000000"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5306": {
      "op": "DUP3"
    },
    "5307": {
      "op": "ADD"
    },
    "5308": {
      "op": "MSTORE"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "5315": {
      "op": "JUMP"
    },
    "5316": {
      "fn": "CardGame.betMoney",
      "offset": [
        6453,
        6521
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5317": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5319": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "op": "SUB"
    },
    "5328": {
      "fn": "CardGame.betMoney",
      "offset": [
        6757,
        6782
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5329": {
      "fn": "CardGame.betMoney",
      "offset": [
        6757,
        6782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5330": {
      "fn": "CardGame.betMoney",
      "offset": [
        6757,
        6782
      ],
      "op": "AND",
      "path": "7"
    },
    "5331": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "5334": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5335": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5336": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "DIV",
      "path": "7"
    },
    "5337": {
      "fn": "CardGame.betMoney",
      "offset": [
        6767,
        6782
      ],
      "op": "AND",
      "path": "7"
    },
    "5338": {
      "branch": 90,
      "fn": "CardGame.betMoney",
      "offset": [
        6757,
        6782
      ],
      "op": "EQ",
      "path": "7"
    },
    "5339": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5340": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1560"
    },
    "5343": {
      "branch": 90,
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5344": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x5"
    },
    "5346": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5347": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5349": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5350": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5357": {
      "op": "SHL"
    },
    "5358": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5359": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5360": {
      "fn": "CardGame.betMoney",
      "offset": [
        6820,
        6830
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5361": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5363": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5364": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ADD",
      "path": "7"
    },
    "5365": {
      "op": "MSTORE"
    },
    "5366": {
      "fn": "CardGame.betMoney",
      "offset": [
        6840,
        6844
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5369": {
      "op": "DUP3"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "MSTORE"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5374": {
      "op": "DUP2"
    },
    "5375": {
      "op": "ADD"
    },
    "5376": {
      "op": "DUP5"
    },
    "5377": {
      "op": "SWAP1"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "SUB"
    },
    "5387": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5388": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5389": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "AND",
      "path": "7"
    },
    "5390": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6806
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5391": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6819
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "5396": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5402": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5404": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5405": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5406": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5407": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "SUB",
      "path": "7"
    },
    "5408": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5409": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5411": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP8",
      "path": "7"
    },
    "5412": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "GAS",
      "path": "7"
    },
    "5413": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "CALL",
      "path": "7"
    },
    "5414": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5415": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5416": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5417": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1536"
    },
    "5420": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5421": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5422": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5424": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5425": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "5426": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5427": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5429": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "REVERT",
      "path": "7"
    },
    "5430": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5431": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5432": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5433": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5434": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5435": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5437": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5438": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5439": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5441": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "NOT",
      "path": "7"
    },
    "5442": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5444": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5445": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ADD",
      "path": "7"
    },
    "5446": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "AND",
      "path": "7"
    },
    "5447": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5448": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ADD",
      "path": "7"
    },
    "5449": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5450": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5452": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5453": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5454": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5455": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "ADD",
      "path": "7"
    },
    "5456": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5457": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155A"
    },
    "5460": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5461": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5462": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "5465": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        6798,
        6855
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5466": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5467": {
      "fn": "CardGame.betMoney",
      "offset": [
        6798,
        6855
      ],
      "op": "POP",
      "path": "7"
    },
    "5468": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D9"
    },
    "5471": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5472": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5473": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 52,
      "value": "0x40"
    },
    "5475": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5476": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5483": {
      "op": "SHL"
    },
    "5484": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5485": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5486": {
      "fn": "CardGame.betMoney",
      "offset": [
        7387,
        7397
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5487": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5489": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5490": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ADD",
      "path": "7"
    },
    "5491": {
      "op": "MSTORE"
    },
    "5492": {
      "fn": "CardGame.betMoney",
      "offset": [
        7407,
        7411
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "ADD"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5500": {
      "op": "DUP2"
    },
    "5501": {
      "op": "ADD"
    },
    "5502": {
      "op": "DUP4"
    },
    "5503": {
      "op": "SWAP1"
    },
    "5504": {
      "op": "MSTORE"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5511": {
      "op": "SHL"
    },
    "5512": {
      "op": "SUB"
    },
    "5513": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7386
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5514": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7386
      ],
      "op": "AND",
      "path": "7"
    },
    "5515": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7386
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5516": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7386
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "5521": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7386
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5524": {
      "op": "ADD"
    },
    "5525": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5527": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5529": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5530": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5531": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5532": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "SUB",
      "path": "7"
    },
    "5533": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5534": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5536": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP8",
      "path": "7"
    },
    "5537": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "GAS",
      "path": "7"
    },
    "5538": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "CALL",
      "path": "7"
    },
    "5539": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5540": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5541": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5542": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15B3"
    },
    "5545": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5546": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5547": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5549": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5550": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "5551": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5552": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5554": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "REVERT",
      "path": "7"
    },
    "5555": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5556": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5557": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5558": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5559": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5560": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5562": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5563": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5564": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5566": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "NOT",
      "path": "7"
    },
    "5567": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5569": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5570": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ADD",
      "path": "7"
    },
    "5571": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "AND",
      "path": "7"
    },
    "5572": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5573": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ADD",
      "path": "7"
    },
    "5574": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5575": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5577": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5578": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5579": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5580": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "ADD",
      "path": "7"
    },
    "5581": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5582": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D7"
    },
    "5585": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5586": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5587": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2E"
    },
    "5590": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7359,
        7422
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5591": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5592": {
      "fn": "CardGame.betMoney",
      "offset": [
        7359,
        7422
      ],
      "op": "POP",
      "path": "7"
    },
    "5593": {
      "fn": "CardGame.betMoney",
      "offset": [
        6753,
        7502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5600": {
      "op": "SHL"
    },
    "5601": {
      "op": "SUB"
    },
    "5602": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 53
    },
    "5603": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "AND",
      "path": "7"
    },
    "5604": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5606": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5607": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5608": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5609": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "5611": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5613": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5614": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5615": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5616": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5618": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5619": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5620": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7580
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5621": {
      "fn": "CardGame.betMoney",
      "offset": [
        7581,
        7591
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5622": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5623": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5624": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5625": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5626": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5627": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5628": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5629": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7592
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5630": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7614
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1608"
    },
    "5633": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7614
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5634": {
      "fn": "CardGame.betMoney",
      "offset": [
        7607,
        7614
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5635": {
      "fn": "CardGame.betMoney",
      "offset": [
        7607,
        7614
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5636": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7614
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD0"
    },
    "5639": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7559,
        7614
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5640": {
      "fn": "CardGame.betMoney",
      "offset": [
        7559,
        7614
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "op": "SUB"
    },
    "5649": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5650": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "AND",
      "path": "7"
    },
    "5651": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5653": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5654": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5655": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5656": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7524
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "5658": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5660": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5661": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5662": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5663": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5665": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5666": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5667": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7532
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5668": {
      "fn": "CardGame.betMoney",
      "offset": [
        7533,
        7543
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5669": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5670": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5671": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5672": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5673": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5674": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5675": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5676": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7614
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5677": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7614
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5678": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7614
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5679": {
      "fn": "CardGame.betMoney",
      "offset": [
        7511,
        7614
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5680": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5681": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5682": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5683": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "5685": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5686": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5687": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5688": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7643
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5689": {
      "fn": "CardGame.betMoney",
      "offset": [
        7628,
        7650
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5690": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165D"
    },
    "5693": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5700": {
      "op": "SHL"
    },
    "5701": {
      "op": "SUB"
    },
    "5702": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 54
    },
    "5703": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "AND",
      "path": "7"
    },
    "5704": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5706": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5707": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5708": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5709": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7679
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5711": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5713": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5714": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5716": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5717": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7687
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5718": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7697
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5719": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7697
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5720": {
      "fn": "CardGame.betMoney",
      "offset": [
        7671,
        7697
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5721": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x169B"
    },
    "5724": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5725": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5732": {
      "op": "SHL"
    },
    "5733": {
      "op": "SUB"
    },
    "5734": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 55
    },
    "5735": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "AND",
      "path": "7"
    },
    "5736": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5738": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5739": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5740": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5741": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5743": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5745": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5746": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5748": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5749": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5750": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7763
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5751": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1681"
    },
    "5754": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7773
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5755": {
      "fn": "CardGame.betMoney",
      "offset": [
        7766,
        7773
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5756": {
      "fn": "CardGame.betMoney",
      "offset": [
        7766,
        7773
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5757": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD0"
    },
    "5760": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7747,
        7773
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5761": {
      "fn": "CardGame.betMoney",
      "offset": [
        7747,
        7773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5768": {
      "op": "SHL"
    },
    "5769": {
      "op": "SUB"
    },
    "5770": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5771": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "AND",
      "path": "7"
    },
    "5772": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5774": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5775": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5776": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5777": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7736
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5779": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5781": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5782": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5784": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5785": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7744
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5786": {
      "fn": "CardGame.betMoney",
      "offset": [
        7728,
        7773
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5787": {
      "fn": "CardGame.betMoney",
      "offset": [
        7624,
        7784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5794": {
      "op": "SHL"
    },
    "5795": {
      "op": "SUB"
    },
    "5796": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "AND",
      "path": "7",
      "statement": 56
    },
    "5797": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5799": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5800": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5801": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5802": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7800
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "5804": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5806": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5807": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5808": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5809": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5811": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5812": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7808
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5813": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5814": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5815": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5817": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5818": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "ADD",
      "path": "7"
    },
    "5819": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5820": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5821": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5822": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5823": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5824": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5825": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5826": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "ADD",
      "path": "7"
    },
    "5827": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5828": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "SUB"
    },
    "5837": {
      "op": "NOT"
    },
    "5838": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "AND",
      "path": "7"
    },
    "5839": {
      "fn": "CardGame.betMoney",
      "offset": [
        7814,
        7824
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5840": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "OR",
      "path": "7"
    },
    "5841": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5842": {
      "fn": "CardGame.betMoney",
      "offset": [
        7793,
        7825
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5843": {
      "op": "POP"
    },
    "5844": {
      "fn": "CardGame.betMoney",
      "jump": "o",
      "offset": [
        6117,
        7832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5846": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5848": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5855": {
      "op": "SHL"
    },
    "5856": {
      "op": "SUB"
    },
    "5857": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5858": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5859": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5860": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16FF"
    },
    "5863": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5864": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5875": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5876": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5878": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "5882": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5883": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF9"
    },
    "5886": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5894": {
      "op": "SHL"
    },
    "5895": {
      "op": "SUB"
    },
    "5896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 57
    },
    "5897": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "5898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1764"
    },
    "5901": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5911": {
      "op": "SHL"
    },
    "5912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "5920": {
      "op": "MSTORE"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5925": {
      "op": "DUP3"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "MSTORE"
    },
    "5928": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5963": {
      "op": "DUP3"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "op": "MSTORE"
    },
    "5966": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5975": {
      "op": "SHL"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5978": {
      "op": "DUP3"
    },
    "5979": {
      "op": "ADD"
    },
    "5980": {
      "op": "MSTORE"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "5987": {
      "op": "JUMP"
    },
    "5988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x176D"
    },
    "5992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F6"
    },
    "5996": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "5999": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6000": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6007": {
      "op": "SHL"
    },
    "6008": {
      "op": "SUB"
    },
    "6009": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6010": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6011": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "AND",
      "path": "7"
    },
    "6012": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3868,
        3875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6014": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6015": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6016": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6017": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6019": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6021": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6022": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6023": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6024": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6026": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6027": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3916
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6028": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6029": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6030": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "AND",
      "path": "7"
    },
    "6031": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6032": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6033": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6034": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6035": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6036": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3895,
        3923
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6037": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3973,
        3986
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6039": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3988,
        4004
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6040": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4008,
        4029
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17A0"
    },
    "6043": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4022,
        4028
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6044": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4008,
        4021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x122E"
    },
    "6047": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4008,
        4029
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6048": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4008,
        4029
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6049": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3972,
        4029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6050": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3972,
        4029
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6051": {
      "op": "POP"
    },
    "6052": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3972,
        4029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6053": {
      "op": "POP"
    },
    "6054": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4089,
        4101
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 59,
      "value": "0x17B0"
    },
    "6057": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3972,
        4029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6058": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4089,
        4091
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6060": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4089,
        4101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F4A"
    },
    "6063": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4089,
        4101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6064": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4089,
        4101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6071": {
      "op": "SHL"
    },
    "6072": {
      "op": "SUB"
    },
    "6073": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6074": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP7",
      "path": "7"
    },
    "6075": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "AND",
      "path": "7"
    },
    "6076": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6078": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6079": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6080": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6081": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4061
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6083": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6085": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6086": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6087": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6088": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6090": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6091": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6092": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4069
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6093": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "6094": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "DUP11",
      "path": "7"
    },
    "6095": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "AND",
      "path": "7"
    },
    "6096": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6097": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6098": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6099": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6100": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6101": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6102": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4076
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6103": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17E1"
    },
    "6106": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6107": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4079,
        4084
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6108": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4079,
        4084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6109": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F56"
    },
    "6112": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4048,
        4084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6113": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4048,
        4084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6114": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4047,
        4102
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17EB"
    },
    "6117": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4047,
        4102
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6118": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4047,
        4102
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6119": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4047,
        4102
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F8B"
    },
    "6122": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4047,
        4102
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6123": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4047,
        4102
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6124": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4039,
        4103
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6125": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4039,
        4103
      ],
      "op": "POP",
      "path": "7"
    },
    "6126": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4039,
        4103
      ],
      "op": "POP",
      "path": "7"
    },
    "6127": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4039,
        4103
      ],
      "op": "POP",
      "path": "7"
    },
    "6128": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6129": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6130": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6131": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "POP",
      "path": "7"
    },
    "6132": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        3770,
        4110
      ],
      "op": "POP",
      "path": "7"
    },
    "6133": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        3770,
        4110
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6134": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6135": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6137": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6138": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6145": {
      "op": "SHL"
    },
    "6146": {
      "op": "SUB"
    },
    "6147": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 60
    },
    "6148": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6149": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6156": {
      "op": "SHL"
    },
    "6157": {
      "op": "SUB"
    },
    "6158": {
      "op": "NOT"
    },
    "6159": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6160": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6161": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6162": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6163": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6164": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6165": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6166": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x40"
    },
    "6168": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6169": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6171": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6172": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6173": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6174": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6175": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6208": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6209": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6211": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6212": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6213": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6214": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6215": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6219": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 62,
      "value": "0x0"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6258": {
      "op": "SHL"
    },
    "6259": {
      "op": "SUB"
    },
    "6260": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "3"
    },
    "6261": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4000AEA0"
    },
    "6266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "6299": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6300": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6301": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6305": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "3"
    },
    "6309": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B8"
    },
    "6312": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6315": {
      "op": "SWAP2"
    },
    "6316": {
      "op": "DUP3"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6320": {
      "op": "DUP3"
    },
    "6321": {
      "op": "ADD"
    },
    "6322": {
      "op": "MSTORE"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6325": {
      "op": "ADD"
    },
    "6326": {
      "op": "SWAP1"
    },
    "6327": {
      "op": "JUMP"
    },
    "6328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6329": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6332": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6334": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "3"
    },
    "6337": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "3"
    },
    "6338": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6339": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6340": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6341": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6343": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6344": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6346": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6353": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "3"
    },
    "6354": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "6356": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "3"
    },
    "6357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6358": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6359": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6361": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "6362": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E5"
    },
    "6365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6366": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6367": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6368": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6369": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20A0"
    },
    "6372": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6373": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6376": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6378": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6379": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6380": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6381": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "3"
    },
    "6382": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6383": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6385": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6386": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "3"
    },
    "6387": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "3"
    },
    "6388": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1904"
    },
    "6394": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6395": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6396": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6398": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6399": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6400": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6401": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6405": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "6406": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "6407": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "6408": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "6409": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6411": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6412": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6413": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6415": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "3"
    },
    "6416": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6418": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6419": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "6420": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "3"
    },
    "6421": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "6423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6424": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "6428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "6430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1928"
    },
    "6434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6436": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E2E"
    },
    "6439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6440": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6441": {
      "op": "POP"
    },
    "6442": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6444": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6445": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6446": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6449": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6450": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6451": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6452": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6454": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6455": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6456": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6457": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6458": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 63
    },
    "6459": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6460": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6461": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6462": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "4"
    },
    "6463": {
      "op": "DUP9"
    },
    "6464": {
      "op": "SWAP1"
    },
    "6465": {
      "op": "MSTORE"
    },
    "6466": {
      "op": "DUP1"
    },
    "6467": {
      "op": "DUP4"
    },
    "6468": {
      "op": "ADD"
    },
    "6469": {
      "op": "DUP6"
    },
    "6470": {
      "op": "SWAP1"
    },
    "6471": {
      "op": "MSTORE"
    },
    "6472": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6475": {
      "op": "DUP3"
    },
    "6476": {
      "op": "ADD"
    },
    "6477": {
      "op": "MSTORE"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6480": {
      "op": "DUP1"
    },
    "6481": {
      "op": "DUP3"
    },
    "6482": {
      "op": "ADD"
    },
    "6483": {
      "op": "DUP4"
    },
    "6484": {
      "op": "SWAP1"
    },
    "6485": {
      "op": "MSTORE"
    },
    "6486": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6487": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6488": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6489": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6490": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "4"
    },
    "6491": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6492": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6493": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "4"
    },
    "6494": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6495": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6498": {
      "op": "SWAP1"
    },
    "6499": {
      "op": "SWAP2"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6502": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6503": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6504": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6505": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6506": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6507": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6508": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "4"
    },
    "6509": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6510": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6511": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6512": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 64
    },
    "6514": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6516": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6517": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6518": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6519": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6520": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1982"
    },
    "6523": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6524": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6526": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FD0"
    },
    "6529": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6530": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6531": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6533": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6534": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6535": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6536": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6538": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6539": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6540": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6541": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6543": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6544": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6545": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6546": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6547": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6548": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6549": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6550": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6551": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 65
    },
    "6552": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6553": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6554": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6555": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "4"
    },
    "6556": {
      "op": "DUP8"
    },
    "6557": {
      "op": "SWAP1"
    },
    "6558": {
      "op": "MSTORE"
    },
    "6559": {
      "op": "DUP1"
    },
    "6560": {
      "op": "DUP3"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "op": "DUP5"
    },
    "6563": {
      "op": "SWAP1"
    },
    "6564": {
      "op": "MSTORE"
    },
    "6565": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6566": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6567": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6568": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6569": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "4"
    },
    "6570": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6571": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "4"
    },
    "6572": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6573": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6576": {
      "op": "SWAP1"
    },
    "6577": {
      "op": "SWAP2"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6580": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6581": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6582": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6583": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6584": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6585": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "4"
    },
    "6586": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6587": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 66,
      "value": "0x5A4"
    },
    "6590": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6591": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8386,
        8875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6592": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8537,
        8566
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 67,
      "value": "0x2"
    },
    "6594": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8533
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6596": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8533
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6597": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8533
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "6599": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8533
      ],
      "op": "AND",
      "path": "7"
    },
    "6600": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "6602": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6603": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "GT",
      "path": "7"
    },
    "6604": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6605": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19D8"
    },
    "6608": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6609": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19D8"
    },
    "6612": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4C"
    },
    "6615": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        8523,
        8566
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6616": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6617": {
      "branch": 91,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8523,
        8566
      ],
      "op": "EQ",
      "path": "7"
    },
    "6618": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A1D"
    },
    "6621": {
      "branch": 91,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6622": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6624": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6633": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6636": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6638": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6639": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "ADD",
      "path": "7"
    },
    "6640": {
      "op": "MSTORE"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6645": {
      "op": "DUP3"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6672": {
      "op": "SHL"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "ADD"
    },
    "6677": {
      "op": "MSTORE"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6680": {
      "op": "ADD"
    },
    "6681": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "6684": {
      "op": "JUMP"
    },
    "6685": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8502,
        8613
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6686": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8645,
        8646
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 68,
      "value": "0x0"
    },
    "6688": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8631,
        8642
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6689": {
      "branch": 92,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8631,
        8646
      ],
      "op": "GT",
      "path": "7"
    },
    "6690": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A60"
    },
    "6693": {
      "branch": 92,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6694": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6696": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6703": {
      "op": "SHL"
    },
    "6704": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6705": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6708": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6710": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6711": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "ADD",
      "path": "7"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6717": {
      "op": "DUP3"
    },
    "6718": {
      "op": "ADD"
    },
    "6719": {
      "op": "MSTORE"
    },
    "6720": {
      "op": "PUSH16",
      "value": "0x1C985B991BDB4B5B9BDD0B599BDD5B99"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "6739": {
      "op": "SHL"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6742": {
      "op": "DUP3"
    },
    "6743": {
      "op": "ADD"
    },
    "6744": {
      "op": "MSTORE"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6747": {
      "op": "ADD"
    },
    "6748": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AE"
    },
    "6751": {
      "op": "JUMP"
    },
    "6752": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8623,
        8667
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6753": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8677,
        8695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6755": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8698,
        8714
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A6D"
    },
    "6758": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8712,
        8714
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "6760": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8698,
        8709
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6761": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8698,
        8714
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE8"
    },
    "6764": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        8698,
        8714
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6765": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8698,
        8714
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6766": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8735
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 69,
      "value": "0xC"
    },
    "6768": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6769": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6770": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6772": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6773": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "ADD",
      "path": "7"
    },
    "6774": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6775": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6778": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6779": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6780": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6781": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6782": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7"
    },
    "6815": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "ADD",
      "path": "7"
    },
    "6816": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        8724,
        8752
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6817": {
      "op": "POP"
    },
    "6818": {
      "op": "POP"
    },
    "6819": {
      "op": "POP"
    },
    "6820": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "o",
      "offset": [
        8386,
        8875
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6821": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4733,
        5188
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6822": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4810,
        4823
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6824": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4810,
        4823
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6825": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "op": "SUB"
    },
    "6834": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6835": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "AND",
      "path": "7"
    },
    "6836": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6838": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6839": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6840": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6841": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "6843": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6845": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6846": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6848": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6849": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4872
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6850": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4857,
        4879
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6851": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4853,
        4879
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6852": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4853,
        4879
      ],
      "op": "LT",
      "path": "7"
    },
    "6853": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6854": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B2D"
    },
    "6857": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6864": {
      "op": "SHL"
    },
    "6865": {
      "op": "SUB"
    },
    "6866": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6867": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6868": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "AND",
      "path": "7"
    },
    "6869": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6871": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6872": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6873": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6874": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4911
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "6876": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6878": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6879": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6881": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6882": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4919
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6883": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6884": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6885": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4931
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6886": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4931
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6887": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4931
      ],
      "op": "AND",
      "path": "7"
    },
    "6888": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4931
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6889": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4920,
        4921
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6890": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4920,
        4921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6891": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6892": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "LT",
      "path": "7"
    },
    "6893": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AF8"
    },
    "6896": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6897": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AF8"
    },
    "6900": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "6903": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6904": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6905": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6907": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6908": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6909": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6910": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6912": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6913": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6914": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6915": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "ADD",
      "path": "7"
    },
    "6916": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6923": {
      "op": "SHL"
    },
    "6924": {
      "op": "SUB"
    },
    "6925": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4922
      ],
      "op": "AND",
      "path": "7"
    },
    "6926": {
      "branch": 93,
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4904,
        4931
      ],
      "op": "EQ",
      "path": "7"
    },
    "6927": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4900,
        4998
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6928": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4900,
        4998
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B1B"
    },
    "6931": {
      "branch": 93,
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4900,
        4998
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6932": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4959,
        4960
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 70
    },
    "6933": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4951,
        4960
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6934": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4951,
        4960
      ],
      "op": "POP",
      "path": "7"
    },
    "6935": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4978,
        4983
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 71,
      "value": "0x1B2D"
    },
    "6938": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4978,
        4983
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6939": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4900,
        4998
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6940": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 72
    },
    "6941": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B25"
    },
    "6944": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6945": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "6948": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        4881,
        4884
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6949": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6950": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6951": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "POP",
      "path": "7"
    },
    "6952": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4881,
        4884
      ],
      "op": "POP",
      "path": "7"
    },
    "6953": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA9"
    },
    "6956": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6957": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4833,
        5008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6958": {
      "op": "POP"
    },
    "6959": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6960": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6967": {
      "op": "SHL"
    },
    "6968": {
      "op": "SUB"
    },
    "6969": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6970": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "AND",
      "path": "7"
    },
    "6971": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6973": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6974": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6975": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6976": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5052
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "6978": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6980": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6981": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6983": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6984": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5060
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6985": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5067
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6986": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5071
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B55"
    },
    "6989": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5071
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6990": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5070,
        5071
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6992": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5070,
        5071
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6993": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5071
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FFC"
    },
    "6996": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5045,
        5071
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6997": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5045,
        5071
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6998": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5041,
        5042
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6999": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5041,
        5071
      ],
      "op": "LT",
      "path": "7"
    },
    "7000": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7001": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C07"
    },
    "7004": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "SUB"
    },
    "7013": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 73
    },
    "7014": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "AND",
      "path": "7"
    },
    "7015": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7017": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7018": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7019": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7020": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5120
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7022": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7024": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7025": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7027": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7028": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5128
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7029": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5129,
        5134
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B7F"
    },
    "7032": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5129,
        5130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7033": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5133,
        5134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7035": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5129,
        5134
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD0"
    },
    "7038": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5129,
        5134
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7039": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5129,
        5134
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7040": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7041": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7042": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7043": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "LT",
      "path": "7"
    },
    "7044": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8F"
    },
    "7047": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7048": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8F"
    },
    "7051": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "7054": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5113,
        5135
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7055": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7056": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7058": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7059": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7060": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7061": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7063": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7064": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7065": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7066": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7067": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7068": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "ADD",
      "path": "7"
    },
    "7069": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7076": {
      "op": "SHL"
    },
    "7077": {
      "op": "SUB"
    },
    "7078": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7079": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7080": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "AND",
      "path": "7"
    },
    "7081": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7082": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7083": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5099
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7085": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7086": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7087": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7088": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7090": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7091": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7092": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7093": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7094": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7095": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7096": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7097": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7098": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "AND",
      "path": "7"
    },
    "7099": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5113,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7100": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5107
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7101": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5108,
        5109
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7102": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5108,
        5109
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7103": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7104": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "LT",
      "path": "7"
    },
    "7105": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BCC"
    },
    "7108": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7109": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BCC"
    },
    "7112": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9F"
    },
    "7115": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5092,
        5110
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7116": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7117": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7119": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7120": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7121": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7122": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7124": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7125": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7126": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7127": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5110
      ],
      "op": "ADD",
      "path": "7"
    },
    "7128": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7129": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7136": {
      "op": "SHL"
    },
    "7137": {
      "op": "SUB"
    },
    "7138": {
      "op": "NOT"
    },
    "7139": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "AND",
      "path": "7"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7146": {
      "op": "SHL"
    },
    "7147": {
      "op": "SUB"
    },
    "7148": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7149": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7150": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7151": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "AND",
      "path": "7"
    },
    "7152": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7153": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7154": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7155": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "OR",
      "path": "7"
    },
    "7156": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7157": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5092,
        5135
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7158": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 74
    },
    "7159": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "7162": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7163": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB5"
    },
    "7166": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5073,
        5076
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7167": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7168": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7169": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "POP",
      "path": "7"
    },
    "7170": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5073,
        5076
      ],
      "op": "POP",
      "path": "7"
    },
    "7171": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B30"
    },
    "7174": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7175": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7176": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5017,
        5146
      ],
      "op": "POP",
      "path": "7"
    },
    "7177": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4800,
        5188
      ],
      "op": "POP",
      "path": "7"
    },
    "7178": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4733,
        5188
      ],
      "op": "POP",
      "path": "7"
    },
    "7179": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        4733,
        5188
      ],
      "op": "POP",
      "path": "7"
    },
    "7180": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "o",
      "offset": [
        4733,
        5188
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7181": {
      "op": "JUMPDEST"
    },
    "7182": {
      "op": "DUP3"
    },
    "7183": {
      "op": "DUP1"
    },
    "7184": {
      "op": "SLOAD"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "DUP3"
    },
    "7187": {
      "op": "SSTORE"
    },
    "7188": {
      "op": "SWAP1"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7191": {
      "op": "MSTORE"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7196": {
      "op": "KECCAK256"
    },
    "7197": {
      "op": "SWAP1"
    },
    "7198": {
      "op": "DUP2"
    },
    "7199": {
      "op": "ADD"
    },
    "7200": {
      "op": "SWAP3"
    },
    "7201": {
      "op": "DUP3"
    },
    "7202": {
      "op": "ISZERO"
    },
    "7203": {
      "op": "PUSH2",
      "value": "0x1C62"
    },
    "7206": {
      "op": "JUMPI"
    },
    "7207": {
      "op": "SWAP2"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7210": {
      "op": "MUL"
    },
    "7211": {
      "op": "DUP3"
    },
    "7212": {
      "op": "ADD"
    },
    "7213": {
      "op": "JUMPDEST"
    },
    "7214": {
      "op": "DUP3"
    },
    "7215": {
      "op": "DUP2"
    },
    "7216": {
      "op": "GT"
    },
    "7217": {
      "op": "ISZERO"
    },
    "7218": {
      "op": "PUSH2",
      "value": "0x1C62"
    },
    "7221": {
      "op": "JUMPI"
    },
    "7222": {
      "op": "DUP3"
    },
    "7223": {
      "op": "MLOAD"
    },
    "7224": {
      "op": "DUP3"
    },
    "7225": {
      "op": "SLOAD"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7232": {
      "op": "SHL"
    },
    "7233": {
      "op": "SUB"
    },
    "7234": {
      "op": "NOT"
    },
    "7235": {
      "op": "AND"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7242": {
      "op": "SHL"
    },
    "7243": {
      "op": "SUB"
    },
    "7244": {
      "op": "SWAP1"
    },
    "7245": {
      "op": "SWAP2"
    },
    "7246": {
      "op": "AND"
    },
    "7247": {
      "op": "OR"
    },
    "7248": {
      "op": "DUP3"
    },
    "7249": {
      "op": "SSTORE"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7252": {
      "op": "SWAP1"
    },
    "7253": {
      "op": "SWAP3"
    },
    "7254": {
      "op": "ADD"
    },
    "7255": {
      "op": "SWAP2"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7258": {
      "op": "SWAP1"
    },
    "7259": {
      "op": "SWAP2"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "op": "SWAP1"
    },
    "7262": {
      "op": "PUSH2",
      "value": "0x1C2D"
    },
    "7265": {
      "op": "JUMP"
    },
    "7266": {
      "op": "JUMPDEST"
    },
    "7267": {
      "op": "POP"
    },
    "7268": {
      "op": "PUSH2",
      "value": "0x1C6E"
    },
    "7271": {
      "op": "SWAP3"
    },
    "7272": {
      "op": "SWAP2"
    },
    "7273": {
      "op": "POP"
    },
    "7274": {
      "op": "PUSH2",
      "value": "0x1CAD"
    },
    "7277": {
      "jump": "i",
      "op": "JUMP"
    },
    "7278": {
      "op": "JUMPDEST"
    },
    "7279": {
      "op": "POP"
    },
    "7280": {
      "op": "SWAP1"
    },
    "7281": {
      "jump": "o",
      "op": "JUMP"
    },
    "7282": {
      "op": "JUMPDEST"
    },
    "7283": {
      "op": "DUP3"
    },
    "7284": {
      "op": "DUP1"
    },
    "7285": {
      "op": "SLOAD"
    },
    "7286": {
      "op": "DUP3"
    },
    "7287": {
      "op": "DUP3"
    },
    "7288": {
      "op": "SSTORE"
    },
    "7289": {
      "op": "SWAP1"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7297": {
      "op": "KECCAK256"
    },
    "7298": {
      "op": "SWAP1"
    },
    "7299": {
      "op": "DUP2"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "SWAP3"
    },
    "7302": {
      "op": "DUP3"
    },
    "7303": {
      "op": "ISZERO"
    },
    "7304": {
      "op": "PUSH2",
      "value": "0x1C62"
    },
    "7307": {
      "op": "JUMPI"
    },
    "7308": {
      "op": "SWAP2"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7311": {
      "op": "MUL"
    },
    "7312": {
      "op": "DUP3"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "op": "JUMPDEST"
    },
    "7315": {
      "op": "DUP3"
    },
    "7316": {
      "op": "DUP2"
    },
    "7317": {
      "op": "GT"
    },
    "7318": {
      "op": "ISZERO"
    },
    "7319": {
      "op": "PUSH2",
      "value": "0x1C62"
    },
    "7322": {
      "op": "JUMPI"
    },
    "7323": {
      "op": "DUP3"
    },
    "7324": {
      "op": "MLOAD"
    },
    "7325": {
      "op": "DUP3"
    },
    "7326": {
      "op": "SSTORE"
    },
    "7327": {
      "op": "SWAP2"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7330": {
      "op": "ADD"
    },
    "7331": {
      "op": "SWAP2"
    },
    "7332": {
      "op": "SWAP1"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7335": {
      "op": "ADD"
    },
    "7336": {
      "op": "SWAP1"
    },
    "7337": {
      "op": "PUSH2",
      "value": "0x1C92"
    },
    "7340": {
      "op": "JUMP"
    },
    "7341": {
      "op": "JUMPDEST"
    },
    "7342": {
      "op": "JUMPDEST"
    },
    "7343": {
      "op": "DUP1"
    },
    "7344": {
      "op": "DUP3"
    },
    "7345": {
      "op": "GT"
    },
    "7346": {
      "op": "ISZERO"
    },
    "7347": {
      "op": "PUSH2",
      "value": "0x1C6E"
    },
    "7350": {
      "op": "JUMPI"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7353": {
      "op": "DUP2"
    },
    "7354": {
      "op": "SSTORE"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7357": {
      "op": "ADD"
    },
    "7358": {
      "op": "PUSH2",
      "value": "0x1CAE"
    },
    "7361": {
      "op": "JUMP"
    },
    "7362": {
      "op": "JUMPDEST"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7367": {
      "op": "DUP3"
    },
    "7368": {
      "op": "DUP5"
    },
    "7369": {
      "op": "SUB"
    },
    "7370": {
      "op": "SLT"
    },
    "7371": {
      "op": "ISZERO"
    },
    "7372": {
      "op": "PUSH2",
      "value": "0x1CD4"
    },
    "7375": {
      "op": "JUMPI"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7378": {
      "op": "DUP1"
    },
    "7379": {
      "op": "REVERT"
    },
    "7380": {
      "op": "JUMPDEST"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "op": "CALLDATALOAD"
    },
    "7383": {
      "op": "SWAP2"
    },
    "7384": {
      "op": "SWAP1"
    },
    "7385": {
      "op": "POP"
    },
    "7386": {
      "jump": "o",
      "op": "JUMP"
    },
    "7387": {
      "op": "JUMPDEST"
    },
    "7388": {
      "op": "DUP1"
    },
    "7389": {
      "op": "CALLDATALOAD"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7396": {
      "op": "SHL"
    },
    "7397": {
      "op": "SUB"
    },
    "7398": {
      "op": "DUP2"
    },
    "7399": {
      "op": "AND"
    },
    "7400": {
      "op": "DUP2"
    },
    "7401": {
      "op": "EQ"
    },
    "7402": {
      "op": "PUSH2",
      "value": "0x1CF2"
    },
    "7405": {
      "op": "JUMPI"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7408": {
      "op": "DUP1"
    },
    "7409": {
      "op": "REVERT"
    },
    "7410": {
      "op": "JUMPDEST"
    },
    "7411": {
      "op": "SWAP2"
    },
    "7412": {
      "op": "SWAP1"
    },
    "7413": {
      "op": "POP"
    },
    "7414": {
      "jump": "o",
      "op": "JUMP"
    },
    "7415": {
      "op": "JUMPDEST"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7420": {
      "op": "DUP3"
    },
    "7421": {
      "op": "DUP5"
    },
    "7422": {
      "op": "SUB"
    },
    "7423": {
      "op": "SLT"
    },
    "7424": {
      "op": "ISZERO"
    },
    "7425": {
      "op": "PUSH2",
      "value": "0x1D09"
    },
    "7428": {
      "op": "JUMPI"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7431": {
      "op": "DUP1"
    },
    "7432": {
      "op": "REVERT"
    },
    "7433": {
      "op": "JUMPDEST"
    },
    "7434": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "7437": {
      "op": "DUP3"
    },
    "7438": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7441": {
      "jump": "i",
      "op": "JUMP"
    },
    "7442": {
      "op": "JUMPDEST"
    },
    "7443": {
      "op": "SWAP4"
    },
    "7444": {
      "op": "SWAP3"
    },
    "7445": {
      "op": "POP"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "jump": "o",
      "op": "JUMP"
    },
    "7449": {
      "op": "JUMPDEST"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7452": {
      "op": "DUP1"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7455": {
      "op": "DUP4"
    },
    "7456": {
      "op": "DUP6"
    },
    "7457": {
      "op": "SUB"
    },
    "7458": {
      "op": "SLT"
    },
    "7459": {
      "op": "ISZERO"
    },
    "7460": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7463": {
      "op": "JUMPI"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7466": {
      "op": "DUP1"
    },
    "7467": {
      "op": "REVERT"
    },
    "7468": {
      "op": "JUMPDEST"
    },
    "7469": {
      "op": "PUSH2",
      "value": "0x1D35"
    },
    "7472": {
      "op": "DUP4"
    },
    "7473": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7476": {
      "jump": "i",
      "op": "JUMP"
    },
    "7477": {
      "op": "JUMPDEST"
    },
    "7478": {
      "op": "SWAP2"
    },
    "7479": {
      "op": "POP"
    },
    "7480": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "7483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7485": {
      "op": "DUP5"
    },
    "7486": {
      "op": "ADD"
    },
    "7487": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7490": {
      "jump": "i",
      "op": "JUMP"
    },
    "7491": {
      "op": "JUMPDEST"
    },
    "7492": {
      "op": "SWAP1"
    },
    "7493": {
      "op": "POP"
    },
    "7494": {
      "op": "SWAP3"
    },
    "7495": {
      "op": "POP"
    },
    "7496": {
      "op": "SWAP3"
    },
    "7497": {
      "op": "SWAP1"
    },
    "7498": {
      "op": "POP"
    },
    "7499": {
      "jump": "o",
      "op": "JUMP"
    },
    "7500": {
      "op": "JUMPDEST"
    },
    "7501": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7508": {
      "op": "SHL"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7511": {
      "op": "MSTORE"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7516": {
      "op": "MSTORE"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7521": {
      "op": "REVERT"
    },
    "7522": {
      "op": "JUMPDEST"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7525": {
      "op": "DUP2"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7529": {
      "op": "DUP4"
    },
    "7530": {
      "op": "LT"
    },
    "7531": {
      "op": "PUSH2",
      "value": "0x1D84"
    },
    "7534": {
      "op": "JUMPI"
    },
    "7535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7542": {
      "op": "SHL"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7550": {
      "op": "MSTORE"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7555": {
      "op": "REVERT"
    },
    "7556": {
      "op": "JUMPDEST"
    },
    "7557": {
      "op": "SWAP2"
    },
    "7558": {
      "op": "SWAP1"
    },
    "7559": {
      "op": "MSTORE"
    },
    "7560": {
      "op": "SWAP1"
    },
    "7561": {
      "jump": "o",
      "op": "JUMP"
    },
    "7562": {
      "op": "JUMPDEST"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7565": {
      "op": "DUP1"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7568": {
      "op": "DUP4"
    },
    "7569": {
      "op": "DUP6"
    },
    "7570": {
      "op": "SUB"
    },
    "7571": {
      "op": "SLT"
    },
    "7572": {
      "op": "ISZERO"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7576": {
      "op": "JUMPI"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7579": {
      "op": "DUP1"
    },
    "7580": {
      "op": "REVERT"
    },
    "7581": {
      "op": "JUMPDEST"
    },
    "7582": {
      "op": "POP"
    },
    "7583": {
      "op": "POP"
    },
    "7584": {
      "op": "DUP1"
    },
    "7585": {
      "op": "CALLDATALOAD"
    },
    "7586": {
      "op": "SWAP3"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7589": {
      "op": "SWAP1"
    },
    "7590": {
      "op": "SWAP2"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "op": "CALLDATALOAD"
    },
    "7593": {
      "op": "SWAP2"
    },
    "7594": {
      "op": "POP"
    },
    "7595": {
      "jump": "o",
      "op": "JUMP"
    },
    "7596": {
      "op": "JUMPDEST"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7599": {
      "op": "DUP1"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7602": {
      "op": "DUP4"
    },
    "7603": {
      "op": "DUP6"
    },
    "7604": {
      "op": "SUB"
    },
    "7605": {
      "op": "SLT"
    },
    "7606": {
      "op": "ISZERO"
    },
    "7607": {
      "op": "PUSH2",
      "value": "0x1DBF"
    },
    "7610": {
      "op": "JUMPI"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7613": {
      "op": "DUP1"
    },
    "7614": {
      "op": "REVERT"
    },
    "7615": {
      "op": "JUMPDEST"
    },
    "7616": {
      "op": "PUSH2",
      "value": "0x1DC8"
    },
    "7619": {
      "op": "DUP4"
    },
    "7620": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7623": {
      "jump": "i",
      "op": "JUMP"
    },
    "7624": {
      "op": "JUMPDEST"
    },
    "7625": {
      "op": "SWAP5"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7628": {
      "op": "SWAP4"
    },
    "7629": {
      "op": "SWAP1"
    },
    "7630": {
      "op": "SWAP4"
    },
    "7631": {
      "op": "ADD"
    },
    "7632": {
      "op": "CALLDATALOAD"
    },
    "7633": {
      "op": "SWAP4"
    },
    "7634": {
      "op": "POP"
    },
    "7635": {
      "op": "POP"
    },
    "7636": {
      "op": "POP"
    },
    "7637": {
      "jump": "o",
      "op": "JUMP"
    },
    "7638": {
      "op": "JUMPDEST"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7641": {
      "op": "DUP1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7644": {
      "op": "DUP4"
    },
    "7645": {
      "op": "DUP6"
    },
    "7646": {
      "op": "SUB"
    },
    "7647": {
      "op": "SLT"
    },
    "7648": {
      "op": "ISZERO"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1DE9"
    },
    "7652": {
      "op": "JUMPI"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7655": {
      "op": "DUP1"
    },
    "7656": {
      "op": "REVERT"
    },
    "7657": {
      "op": "JUMPDEST"
    },
    "7658": {
      "op": "DUP3"
    },
    "7659": {
      "op": "CALLDATALOAD"
    },
    "7660": {
      "op": "SWAP2"
    },
    "7661": {
      "op": "POP"
    },
    "7662": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7667": {
      "op": "DUP5"
    },
    "7668": {
      "op": "ADD"
    },
    "7669": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7672": {
      "jump": "i",
      "op": "JUMP"
    },
    "7673": {
      "op": "JUMPDEST"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7676": {
      "op": "DUP1"
    },
    "7677": {
      "op": "DUP3"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "DUP2"
    },
    "7680": {
      "op": "DUP2"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "op": "MSTORE"
    },
    "7683": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "ADD"
    },
    "7720": {
      "op": "MSTORE"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7723": {
      "op": "ADD"
    },
    "7724": {
      "op": "SWAP1"
    },
    "7725": {
      "jump": "o",
      "op": "JUMP"
    },
    "7726": {
      "op": "JUMPDEST"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7731": {
      "op": "DUP3"
    },
    "7732": {
      "op": "DUP5"
    },
    "7733": {
      "op": "SUB"
    },
    "7734": {
      "op": "SLT"
    },
    "7735": {
      "op": "ISZERO"
    },
    "7736": {
      "op": "PUSH2",
      "value": "0x1E40"
    },
    "7739": {
      "op": "JUMPI"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7742": {
      "op": "DUP1"
    },
    "7743": {
      "op": "REVERT"
    },
    "7744": {
      "op": "JUMPDEST"
    },
    "7745": {
      "op": "DUP2"
    },
    "7746": {
      "op": "MLOAD"
    },
    "7747": {
      "op": "DUP1"
    },
    "7748": {
      "op": "ISZERO"
    },
    "7749": {
      "op": "ISZERO"
    },
    "7750": {
      "op": "DUP2"
    },
    "7751": {
      "op": "EQ"
    },
    "7752": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "7755": {
      "op": "JUMPI"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7758": {
      "op": "DUP1"
    },
    "7759": {
      "op": "REVERT"
    },
    "7760": {
      "op": "JUMPDEST"
    },
    "7761": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7768": {
      "op": "SHL"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7771": {
      "op": "MSTORE"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7776": {
      "op": "MSTORE"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7781": {
      "op": "REVERT"
    },
    "7782": {
      "op": "JUMPDEST"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7785": {
      "op": "DUP2"
    },
    "7786": {
      "op": "DUP2"
    },
    "7787": {
      "op": "JUMPDEST"
    },
    "7788": {
      "op": "DUP1"
    },
    "7789": {
      "op": "DUP6"
    },
    "7790": {
      "op": "GT"
    },
    "7791": {
      "op": "ISZERO"
    },
    "7792": {
      "op": "PUSH2",
      "value": "0x1EA1"
    },
    "7795": {
      "op": "JUMPI"
    },
    "7796": {
      "op": "DUP2"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7799": {
      "op": "NOT"
    },
    "7800": {
      "op": "DIV"
    },
    "7801": {
      "op": "DUP3"
    },
    "7802": {
      "op": "GT"
    },
    "7803": {
      "op": "ISZERO"
    },
    "7804": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "7807": {
      "op": "JUMPI"
    },
    "7808": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "7811": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7814": {
      "jump": "i",
      "op": "JUMP"
    },
    "7815": {
      "op": "JUMPDEST"
    },
    "7816": {
      "op": "DUP1"
    },
    "7817": {
      "op": "DUP6"
    },
    "7818": {
      "op": "AND"
    },
    "7819": {
      "op": "ISZERO"
    },
    "7820": {
      "op": "PUSH2",
      "value": "0x1E94"
    },
    "7823": {
      "op": "JUMPI"
    },
    "7824": {
      "op": "SWAP2"
    },
    "7825": {
      "op": "DUP2"
    },
    "7826": {
      "op": "MUL"
    },
    "7827": {
      "op": "SWAP2"
    },
    "7828": {
      "op": "JUMPDEST"
    },
    "7829": {
      "op": "SWAP4"
    },
    "7830": {
      "op": "DUP5"
    },
    "7831": {
      "op": "SHR"
    },
    "7832": {
      "op": "SWAP4"
    },
    "7833": {
      "op": "SWAP1"
    },
    "7834": {
      "op": "DUP1"
    },
    "7835": {
      "op": "MUL"
    },
    "7836": {
      "op": "SWAP1"
    },
    "7837": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7840": {
      "op": "JUMP"
    },
    "7841": {
      "op": "JUMPDEST"
    },
    "7842": {
      "op": "POP"
    },
    "7843": {
      "op": "SWAP3"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "op": "SWAP3"
    },
    "7846": {
      "op": "SWAP1"
    },
    "7847": {
      "op": "POP"
    },
    "7848": {
      "jump": "o",
      "op": "JUMP"
    },
    "7849": {
      "op": "JUMPDEST"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7852": {
      "op": "DUP3"
    },
    "7853": {
      "op": "PUSH2",
      "value": "0x1EB8"
    },
    "7856": {
      "op": "JUMPI"
    },
    "7857": {
      "op": "POP"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7860": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "7863": {
      "op": "JUMP"
    },
    "7864": {
      "op": "JUMPDEST"
    },
    "7865": {
      "op": "DUP2"
    },
    "7866": {
      "op": "PUSH2",
      "value": "0x1EC5"
    },
    "7869": {
      "op": "JUMPI"
    },
    "7870": {
      "op": "POP"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7873": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "7876": {
      "op": "JUMP"
    },
    "7877": {
      "op": "JUMPDEST"
    },
    "7878": {
      "op": "DUP2"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7881": {
      "op": "DUP2"
    },
    "7882": {
      "op": "EQ"
    },
    "7883": {
      "op": "PUSH2",
      "value": "0x1EDB"
    },
    "7886": {
      "op": "JUMPI"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7889": {
      "op": "DUP2"
    },
    "7890": {
      "op": "EQ"
    },
    "7891": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "7894": {
      "op": "JUMPI"
    },
    "7895": {
      "op": "PUSH2",
      "value": "0x1F01"
    },
    "7898": {
      "op": "JUMP"
    },
    "7899": {
      "op": "JUMPDEST"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7902": {
      "op": "SWAP2"
    },
    "7903": {
      "op": "POP"
    },
    "7904": {
      "op": "POP"
    },
    "7905": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "7908": {
      "op": "JUMP"
    },
    "7909": {
      "op": "JUMPDEST"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7912": {
      "op": "DUP5"
    },
    "7913": {
      "op": "GT"
    },
    "7914": {
      "op": "ISZERO"
    },
    "7915": {
      "op": "PUSH2",
      "value": "0x1EF6"
    },
    "7918": {
      "op": "JUMPI"
    },
    "7919": {
      "op": "PUSH2",
      "value": "0x1EF6"
    },
    "7922": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7925": {
      "jump": "i",
      "op": "JUMP"
    },
    "7926": {
      "op": "JUMPDEST"
    },
    "7927": {
      "op": "POP"
    },
    "7928": {
      "op": "POP"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7931": {
      "op": "DUP3"
    },
    "7932": {
      "op": "SHL"
    },
    "7933": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "7936": {
      "op": "JUMP"
    },
    "7937": {
      "op": "JUMPDEST"
    },
    "7938": {
      "op": "POP"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7941": {
      "op": "DUP4"
    },
    "7942": {
      "op": "LT"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "7946": {
      "op": "DUP4"
    },
    "7947": {
      "op": "LT"
    },
    "7948": {
      "op": "AND"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "7951": {
      "op": "DUP5"
    },
    "7952": {
      "op": "LT"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "7955": {
      "op": "DUP5"
    },
    "7956": {
      "op": "LT"
    },
    "7957": {
      "op": "AND"
    },
    "7958": {
      "op": "OR"
    },
    "7959": {
      "op": "ISZERO"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1F24"
    },
    "7963": {
      "op": "JUMPI"
    },
    "7964": {
      "op": "POP"
    },
    "7965": {
      "op": "DUP2"
    },
    "7966": {
      "op": "DUP2"
    },
    "7967": {
      "op": "EXP"
    },
    "7968": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "7971": {
      "op": "JUMP"
    },
    "7972": {
      "op": "JUMPDEST"
    },
    "7973": {
      "op": "PUSH2",
      "value": "0x1F2E"
    },
    "7976": {
      "op": "DUP4"
    },
    "7977": {
      "op": "DUP4"
    },
    "7978": {
      "op": "PUSH2",
      "value": "0x1E66"
    },
    "7981": {
      "jump": "i",
      "op": "JUMP"
    },
    "7982": {
      "op": "JUMPDEST"
    },
    "7983": {
      "op": "DUP1"
    },
    "7984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7986": {
      "op": "NOT"
    },
    "7987": {
      "op": "DIV"
    },
    "7988": {
      "op": "DUP3"
    },
    "7989": {
      "op": "GT"
    },
    "7990": {
      "op": "ISZERO"
    },
    "7991": {
      "op": "PUSH2",
      "value": "0x1F42"
    },
    "7994": {
      "op": "JUMPI"
    },
    "7995": {
      "op": "PUSH2",
      "value": "0x1F42"
    },
    "7998": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "8001": {
      "jump": "i",
      "op": "JUMP"
    },
    "8002": {
      "op": "JUMPDEST"
    },
    "8003": {
      "op": "MUL"
    },
    "8004": {
      "op": "SWAP4"
    },
    "8005": {
      "op": "SWAP3"
    },
    "8006": {
      "op": "POP"
    },
    "8007": {
      "op": "POP"
    },
    "8008": {
      "op": "POP"
    },
    "8009": {
      "jump": "o",
      "op": "JUMP"
    },
    "8010": {
      "op": "JUMPDEST"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8013": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "8016": {
      "op": "DUP4"
    },
    "8017": {
      "op": "DUP4"
    },
    "8018": {
      "op": "PUSH2",
      "value": "0x1EA9"
    },
    "8021": {
      "jump": "i",
      "op": "JUMP"
    },
    "8022": {
      "op": "JUMPDEST"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8025": {
      "op": "DUP2"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8028": {
      "op": "NOT"
    },
    "8029": {
      "op": "DIV"
    },
    "8030": {
      "op": "DUP4"
    },
    "8031": {
      "op": "GT"
    },
    "8032": {
      "op": "DUP3"
    },
    "8033": {
      "op": "ISZERO"
    },
    "8034": {
      "op": "ISZERO"
    },
    "8035": {
      "op": "AND"
    },
    "8036": {
      "op": "ISZERO"
    },
    "8037": {
      "op": "PUSH2",
      "value": "0x1F70"
    },
    "8040": {
      "op": "JUMPI"
    },
    "8041": {
      "op": "PUSH2",
      "value": "0x1F70"
    },
    "8044": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "8047": {
      "jump": "i",
      "op": "JUMP"
    },
    "8048": {
      "op": "JUMPDEST"
    },
    "8049": {
      "op": "POP"
    },
    "8050": {
      "op": "MUL"
    },
    "8051": {
      "op": "SWAP1"
    },
    "8052": {
      "jump": "o",
      "op": "JUMP"
    },
    "8053": {
      "op": "JUMPDEST"
    },
    "8054": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8061": {
      "op": "SHL"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8064": {
      "op": "MSTORE"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8069": {
      "op": "MSTORE"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8074": {
      "op": "REVERT"
    },
    "8075": {
      "op": "JUMPDEST"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8078": {
      "op": "DUP3"
    },
    "8079": {
      "op": "PUSH2",
      "value": "0x1F9A"
    },
    "8082": {
      "op": "JUMPI"
    },
    "8083": {
      "op": "PUSH2",
      "value": "0x1F9A"
    },
    "8086": {
      "op": "PUSH2",
      "value": "0x1F75"
    },
    "8089": {
      "jump": "i",
      "op": "JUMP"
    },
    "8090": {
      "op": "JUMPDEST"
    },
    "8091": {
      "op": "POP"
    },
    "8092": {
      "op": "DIV"
    },
    "8093": {
      "op": "SWAP1"
    },
    "8094": {
      "jump": "o",
      "op": "JUMP"
    },
    "8095": {
      "op": "JUMPDEST"
    },
    "8096": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8103": {
      "op": "SHL"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8106": {
      "op": "MSTORE"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8111": {
      "op": "MSTORE"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8116": {
      "op": "REVERT"
    },
    "8117": {
      "op": "JUMPDEST"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8122": {
      "op": "NOT"
    },
    "8123": {
      "op": "DUP3"
    },
    "8124": {
      "op": "EQ"
    },
    "8125": {
      "op": "ISZERO"
    },
    "8126": {
      "op": "PUSH2",
      "value": "0x1FC9"
    },
    "8129": {
      "op": "JUMPI"
    },
    "8130": {
      "op": "PUSH2",
      "value": "0x1FC9"
    },
    "8133": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "8136": {
      "jump": "i",
      "op": "JUMP"
    },
    "8137": {
      "op": "JUMPDEST"
    },
    "8138": {
      "op": "POP"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "ADD"
    },
    "8142": {
      "op": "SWAP1"
    },
    "8143": {
      "jump": "o",
      "op": "JUMP"
    },
    "8144": {
      "op": "JUMPDEST"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "op": "DUP3"
    },
    "8148": {
      "op": "NOT"
    },
    "8149": {
      "op": "DUP3"
    },
    "8150": {
      "op": "GT"
    },
    "8151": {
      "op": "ISZERO"
    },
    "8152": {
      "op": "PUSH2",
      "value": "0x1FE3"
    },
    "8155": {
      "op": "JUMPI"
    },
    "8156": {
      "op": "PUSH2",
      "value": "0x1FE3"
    },
    "8159": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "8162": {
      "jump": "i",
      "op": "JUMP"
    },
    "8163": {
      "op": "JUMPDEST"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "op": "ADD"
    },
    "8166": {
      "op": "SWAP1"
    },
    "8167": {
      "jump": "o",
      "op": "JUMP"
    },
    "8168": {
      "op": "JUMPDEST"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8171": {
      "op": "DUP3"
    },
    "8172": {
      "op": "PUSH2",
      "value": "0x1FF7"
    },
    "8175": {
      "op": "JUMPI"
    },
    "8176": {
      "op": "PUSH2",
      "value": "0x1FF7"
    },
    "8179": {
      "op": "PUSH2",
      "value": "0x1F75"
    },
    "8182": {
      "jump": "i",
      "op": "JUMP"
    },
    "8183": {
      "op": "JUMPDEST"
    },
    "8184": {
      "op": "POP"
    },
    "8185": {
      "op": "MOD"
    },
    "8186": {
      "op": "SWAP1"
    },
    "8187": {
      "jump": "o",
      "op": "JUMP"
    },
    "8188": {
      "op": "JUMPDEST"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8191": {
      "op": "DUP3"
    },
    "8192": {
      "op": "DUP3"
    },
    "8193": {
      "op": "LT"
    },
    "8194": {
      "op": "ISZERO"
    },
    "8195": {
      "op": "PUSH2",
      "value": "0x200E"
    },
    "8198": {
      "op": "JUMPI"
    },
    "8199": {
      "op": "PUSH2",
      "value": "0x200E"
    },
    "8202": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "8205": {
      "jump": "i",
      "op": "JUMP"
    },
    "8206": {
      "op": "JUMPDEST"
    },
    "8207": {
      "op": "POP"
    },
    "8208": {
      "op": "SUB"
    },
    "8209": {
      "op": "SWAP1"
    },
    "8210": {
      "jump": "o",
      "op": "JUMP"
    },
    "8211": {
      "op": "JUMPDEST"
    },
    "8212": {
      "op": "DUP1"
    },
    "8213": {
      "op": "MLOAD"
    },
    "8214": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "8225": {
      "op": "DUP2"
    },
    "8226": {
      "op": "AND"
    },
    "8227": {
      "op": "DUP2"
    },
    "8228": {
      "op": "EQ"
    },
    "8229": {
      "op": "PUSH2",
      "value": "0x1CF2"
    },
    "8232": {
      "op": "JUMPI"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8235": {
      "op": "DUP1"
    },
    "8236": {
      "op": "REVERT"
    },
    "8237": {
      "op": "JUMPDEST"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8240": {
      "op": "DUP1"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8243": {
      "op": "DUP1"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8248": {
      "op": "DUP7"
    },
    "8249": {
      "op": "DUP9"
    },
    "8250": {
      "op": "SUB"
    },
    "8251": {
      "op": "SLT"
    },
    "8252": {
      "op": "ISZERO"
    },
    "8253": {
      "op": "PUSH2",
      "value": "0x2045"
    },
    "8256": {
      "op": "JUMPI"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8259": {
      "op": "DUP1"
    },
    "8260": {
      "op": "REVERT"
    },
    "8261": {
      "op": "JUMPDEST"
    },
    "8262": {
      "op": "PUSH2",
      "value": "0x204E"
    },
    "8265": {
      "op": "DUP7"
    },
    "8266": {
      "op": "PUSH2",
      "value": "0x2013"
    },
    "8269": {
      "jump": "i",
      "op": "JUMP"
    },
    "8270": {
      "op": "JUMPDEST"
    },
    "8271": {
      "op": "SWAP5"
    },
    "8272": {
      "op": "POP"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8275": {
      "op": "DUP7"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "MLOAD"
    },
    "8278": {
      "op": "SWAP4"
    },
    "8279": {
      "op": "POP"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8282": {
      "op": "DUP7"
    },
    "8283": {
      "op": "ADD"
    },
    "8284": {
      "op": "MLOAD"
    },
    "8285": {
      "op": "SWAP3"
    },
    "8286": {
      "op": "POP"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8289": {
      "op": "DUP7"
    },
    "8290": {
      "op": "ADD"
    },
    "8291": {
      "op": "MLOAD"
    },
    "8292": {
      "op": "SWAP2"
    },
    "8293": {
      "op": "POP"
    },
    "8294": {
      "op": "PUSH2",
      "value": "0x2071"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8299": {
      "op": "DUP8"
    },
    "8300": {
      "op": "ADD"
    },
    "8301": {
      "op": "PUSH2",
      "value": "0x2013"
    },
    "8304": {
      "jump": "i",
      "op": "JUMP"
    },
    "8305": {
      "op": "JUMPDEST"
    },
    "8306": {
      "op": "SWAP1"
    },
    "8307": {
      "op": "POP"
    },
    "8308": {
      "op": "SWAP3"
    },
    "8309": {
      "op": "SWAP6"
    },
    "8310": {
      "op": "POP"
    },
    "8311": {
      "op": "SWAP3"
    },
    "8312": {
      "op": "SWAP6"
    },
    "8313": {
      "op": "SWAP1"
    },
    "8314": {
      "op": "SWAP4"
    },
    "8315": {
      "op": "POP"
    },
    "8316": {
      "jump": "o",
      "op": "JUMP"
    },
    "8317": {
      "op": "JUMPDEST"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8322": {
      "op": "DUP3"
    },
    "8323": {
      "op": "DUP5"
    },
    "8324": {
      "op": "SUB"
    },
    "8325": {
      "op": "SLT"
    },
    "8326": {
      "op": "ISZERO"
    },
    "8327": {
      "op": "PUSH2",
      "value": "0x208F"
    },
    "8330": {
      "op": "JUMPI"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8333": {
      "op": "DUP1"
    },
    "8334": {
      "op": "REVERT"
    },
    "8335": {
      "op": "JUMPDEST"
    },
    "8336": {
      "op": "DUP2"
    },
    "8337": {
      "op": "MLOAD"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8340": {
      "op": "DUP2"
    },
    "8341": {
      "op": "AND"
    },
    "8342": {
      "op": "DUP2"
    },
    "8343": {
      "op": "EQ"
    },
    "8344": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "8347": {
      "op": "JUMPI"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8350": {
      "op": "DUP1"
    },
    "8351": {
      "op": "REVERT"
    },
    "8352": {
      "op": "JUMPDEST"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8355": {
      "op": "DUP1"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "op": "SUB"
    },
    "8360": {
      "op": "DUP5"
    },
    "8361": {
      "op": "AND"
    },
    "8362": {
      "op": "DUP2"
    },
    "8363": {
      "op": "MSTORE"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8368": {
      "op": "DUP5"
    },
    "8369": {
      "op": "DUP2"
    },
    "8370": {
      "op": "DUP5"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "op": "MSTORE"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8377": {
      "op": "DUP5"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "DUP4"
    },
    "8381": {
      "op": "MLOAD"
    },
    "8382": {
      "op": "DUP1"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8385": {
      "op": "DUP6"
    },
    "8386": {
      "op": "ADD"
    },
    "8387": {
      "op": "MSTORE"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8390": {
      "op": "JUMPDEST"
    },
    "8391": {
      "op": "DUP2"
    },
    "8392": {
      "op": "DUP2"
    },
    "8393": {
      "op": "LT"
    },
    "8394": {
      "op": "ISZERO"
    },
    "8395": {
      "op": "PUSH2",
      "value": "0x20E2"
    },
    "8398": {
      "op": "JUMPI"
    },
    "8399": {
      "op": "DUP6"
    },
    "8400": {
      "op": "DUP2"
    },
    "8401": {
      "op": "ADD"
    },
    "8402": {
      "op": "DUP4"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "op": "MLOAD"
    },
    "8405": {
      "op": "DUP6"
    },
    "8406": {
      "op": "DUP3"
    },
    "8407": {
      "op": "ADD"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8410": {
      "op": "ADD"
    },
    "8411": {
      "op": "MSTORE"
    },
    "8412": {
      "op": "DUP3"
    },
    "8413": {
      "op": "ADD"
    },
    "8414": {
      "op": "PUSH2",
      "value": "0x20C6"
    },
    "8417": {
      "op": "JUMP"
    },
    "8418": {
      "op": "JUMPDEST"
    },
    "8419": {
      "op": "DUP2"
    },
    "8420": {
      "op": "DUP2"
    },
    "8421": {
      "op": "GT"
    },
    "8422": {
      "op": "ISZERO"
    },
    "8423": {
      "op": "PUSH2",
      "value": "0x20F4"
    },
    "8426": {
      "op": "JUMPI"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8431": {
      "op": "DUP4"
    },
    "8432": {
      "op": "DUP8"
    },
    "8433": {
      "op": "ADD"
    },
    "8434": {
      "op": "ADD"
    },
    "8435": {
      "op": "MSTORE"
    },
    "8436": {
      "op": "JUMPDEST"
    },
    "8437": {
      "op": "POP"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8443": {
      "op": "NOT"
    },
    "8444": {
      "op": "AND"
    },
    "8445": {
      "op": "SWAP3"
    },
    "8446": {
      "op": "SWAP1"
    },
    "8447": {
      "op": "SWAP3"
    },
    "8448": {
      "op": "ADD"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8451": {
      "op": "ADD"
    },
    "8452": {
      "op": "SWAP6"
    },
    "8453": {
      "op": "SWAP5"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "op": "POP"
    },
    "8456": {
      "op": "POP"
    },
    "8457": {
      "op": "POP"
    },
    "8458": {
      "op": "POP"
    },
    "8459": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fd1187def7d9320a1dddb2c53d0e6c56f9abcea9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // to create my own token or make available the token on smart contract\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\"; // to get current rate of currencies\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\"; // to get randomness function\n\ncontract CardGame is VRFConsumerBase, Ownable {\n    bytes32 public keyHash;\n    uint256 public fee;\n    event RequestedRandomness(bytes32 requestId);\n\n    enum GAME_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    GAME_STATE public game_state;\n    address public mscTokenAddress;\n    IERC20 public mscToken;\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyHash,\n        address _mscTokenAddress\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        keyHash = _keyHash;\n        fee = _fee;\n        game_state = GAME_STATE.CLOSED;\n        mscTokenAddress = _mscTokenAddress;\n        mscToken = IERC20(_mscTokenAddress);\n    }\n\n    // token address > player address > amount\n    mapping(address => mapping(address => uint256)) public wagerOfPlayer;\n\n    // token address > priceFeed address\n    mapping(address => address) public tokenPriceFeeds;\n    //address[] public players;\n    // token address > player address list\n    mapping(address => address[]) public players;\n    address[] public allowedTokens;\n    //uint256 public totalPot = 0;\n    // token address > totalBetValue\n    mapping(address => uint256) public totalPot;\n    // player address > card number\n    //mapping(address => uint256) public playersCardNumber;\n    uint256 public playerCounter = 0;\n    uint256[] public cardsNumber;\n    address public winner = address(0); // you can't use 'null' in solidity\n    address public competedToken = address(0);\n\n    //function showMSCTokenAddress() public returns (address) {\n    //return mscTokenAddress;\n    //}\n\n    function sendMSCToken(uint256 _amount) public onlyOwner {\n        mscToken.transfer(msg.sender, _amount); // from contract_address to owner_address\n    }\n\n    function issueTokens(address _token) public onlyOwner {\n        for (uint256 index = 0; index < players[_token].length; index++) {\n            address recipient = players[_token][index];\n            uint256 userTotalValue = getUserSingleTokenValue(recipient, _token);\n            mscToken.transfer(recipient, userTotalValue); // send players MSCToken as a reward\n        }\n    }\n\n    function allowToken(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    function tokenIsAllowed(address _token) public returns (bool) {\n        for (uint256 index = 0; index < allowedTokens.length; index += 1) {\n            if (allowedTokens[index] == _token) {\n                return true;\n            }\n            return false;\n        }\n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeeds[_token] = _priceFeed;\n    }\n\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeeds[_token];\n        // AggregatorV3Interface is for getting current rate of currencies\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // this func is for just calculating prices to send MSCToken to players as a reward.\n    function getUserSingleTokenValue(address _user, address _token)\n        internal\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][_user] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        return ((wagerOfPlayer[_token][_user] * price) / (10**decimals));\n    }\n\n    // this func is for UI which each user use\n    function getPlayerSingleTokenValue(address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][msg.sender] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        // 10 ETH (100000000000000000000)\n        // ETH/USD -> 100 (10000000000)\n        // 10 * 100 = 1,000\n        return ((wagerOfPlayer[_token][msg.sender] * price) / (10**decimals));\n    }\n\n    //function balanceOfCG() public view returns (uint256) {\n    //return address(this).balance;\n    //}\n\n    function removeFromPlayers(address _token, address _user) internal {\n        uint256 index;\n        for (uint256 i = 0; i < players[_token].length; i++) {\n            if (players[_token][i] == _user) {\n                index = i;\n                break;\n            }\n        }\n        for (uint256 e = index; e < players[_token].length - 1; e++) {\n            players[_token][e] = players[_token][e + 1];\n        }\n        //players[_token].length--;\n    }\n\n    function repayBetToken(uint256 _amount, address _token) public {\n        require(\n            game_state == GAME_STATE.OPEN || game_state == GAME_STATE.CLOSED,\n            \"You can't get the refund after game started!\"\n        );\n        require(\n            wagerOfPlayer[_token][msg.sender] >= _amount,\n            \"You didn't bet token of the amount!\"\n        );\n        IERC20(_token).transfer(msg.sender, _amount);\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] -\n            _amount;\n        totalPot[_token] = totalPot[_token] - _amount;\n        if (wagerOfPlayer[_token][msg.sender] <= 0) {\n            removeFromPlayers(_token, msg.sender);\n        }\n    }\n\n    function startGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CLOSED,\n            \"Can't start new game state yet!\"\n        );\n\n        game_state = GAME_STATE.OPEN;\n    }\n\n    function betMoney(uint256 _amount, address _token) public {\n        require(_amount > 0, \"A bet must be more than 0\");\n        require(tokenIsAllowed(_token), \"This token is not allowed\");\n        require(\n            players[_token].length < 5,\n            \"Sorry, this game is already full. Please wait next game.\"\n        );\n        require(game_state == GAME_STATE.OPEN, \"You can't bet money while \");\n        //require(\n        //IERC20(_token).balanceOf(msg.sender) > 0,\n        //\"You don't have this token!\"\n        //);\n        //msg.sender.transfer(_amount);\n        //IERC20(_token).approve(address(this), _amount);\n\n        if (_token == mscTokenAddress) {\n            mscToken.transferFrom(msg.sender, address(this), _amount); // this 'msg.sender' must be owner of MSCToken, not third party address\n            //mscToken.transfer(address(this), _amount); // transfer(toAddress, amount);  sender(who call this func(this contact)) sends amount of token to toAddress\n        } else {\n            //IERC20(_token).transferFrom(msg.sender, address(this), _amount); // this function is avaiable only when owner of the token who gived the right this contract to handle allowance with approve function gives token to users.\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount); // you can't use transferFrom when user send token to this contract.\n        }\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] +\n            _amount;\n        if (players[_token].length <= 0) {\n            totalPot[_token] = _amount;\n        } else {\n            totalPot[_token] = totalPot[_token] + _amount;\n        }\n        players[_token].push(msg.sender);\n    }\n\n    function drawCards(address _comp_token) public onlyOwner {\n        game_state = GAME_STATE.CALCULATING_WINNER;\n        competedToken = _comp_token;\n\n        for (uint256 i = 0; i < players[competedToken].length; i++) {\n            bytes32 requestId = requestRandomness(keyHash, fee); // let fulfillRandomness do\n            emit RequestedRandomness(requestId);\n            playerCounter += 1;\n        }\n        //bytes32 requestId = requestRandomness(keyHash, fee);\n        //playerCounter = 0;\n        //game_state = GAME_STATE.CLOSED;\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(\n            game_state == GAME_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(_randomness > 0, \"random-not-found\");\n        uint256 cardNumber = _randomness % 14;\n        cardsNumber.push(cardNumber);\n        //address player = players[competedToken][playerCounter];\n        //playersCardNumber[player] = cardNumber;\n    }\n\n    function getWinner() public onlyOwner returns (address) {\n        require(\n            game_state == GAME_STATE.CALCULATING_WINNER,\n            \"Game is not over yet!\"\n        );\n\n        //for (uint256 i = 0; i < players[competedToken].length; i++) {\n        //uint256 cardNumber = playersCardNumber[players[competedToken][i]];\n        //cardsNumber.push(cardNumber);\n        //}\n        uint256 max = 0;\n\n        for (uint256 c = 0; c < cardsNumber.length; c++) {\n            if (cardsNumber[c] > max) {\n                max = cardsNumber[c];\n                winner = players[competedToken][c];\n            } else if (cardsNumber[c] == max) {\n                uint256 judge = max % 2;\n                if (judge == 0) {\n                    winner = players[competedToken][c];\n                } else if (judge == 1) {\n                    continue;\n                }\n            }\n        }\n        return winner;\n    }\n\n    function endGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(tokenIsAllowed(competedToken), \"This token is not allowed\");\n        require(\n            winner != address(0),\n            \"Still doesn't know which player is winner\"\n        );\n        //IERC20(_token).transfer(msg.sender, totalPot);\n        IERC20(competedToken).transferFrom(\n            msg.sender,\n            winner,\n            totalPot[competedToken]\n        ); // You can use transferFrom only when you sends tokens to user. It's impossibel the reverse\n        totalPot[competedToken] = 0;\n        //players = new address[];\n        for (\n            uint256 index = 0;\n            index < players[competedToken].length;\n            index++\n        ) {\n            address player = players[competedToken][index];\n            wagerOfPlayer[competedToken][player] = 0;\n            //playersCardNumber[player] = 0;\n        }\n        playerCounter = 0;\n        players[competedToken] = new address[](0);\n        cardsNumber = new uint256[](0);\n        winner = address(0);\n        competedToken = address(0);\n        game_state = GAME_STATE.CLOSED;\n    }\n}\n",
  "sourceMap": "444:10596:7:-:0;;;1804:1;1773:32;;1845:34;;;-1:-1:-1;;;;;;1845:34:7;;;;;;1921:41;;;;;;;;783:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:3;;;;;9407;;;;867:23:0;665:10:2;867:9:0;:23::i;:::-;996:7:7::1;:18:::0;;;;1024:3:::1;:10:::0;;;;1044::::1;:30:::0;;1057:17:::1;-1:-1:-1::0;;;;;;1084:34:7;;;::::1;-1:-1:-1::0;;;;;1084:34:7;;::::1;::::0;;::::1;::::0;;;;1128:8:::1;:35:::0;;-1:-1:-1;;;;;;1128:35:7::1;::::0;;::::1;::::0;;-1:-1:-1;444:10596:7;;-1:-1:-1;444:10596:7;2041:169:0;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;575:2;564:9;560:18;554:25;544:35;;619:2;608:9;604:18;598:25;588:35;;642:50;687:3;676:9;672:19;642:50;:::i;:::-;632:60;;196:502;;;;;;;;:::o;703:127::-;444:10596:7;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CardGame.sol",
  "type": "contract"
}