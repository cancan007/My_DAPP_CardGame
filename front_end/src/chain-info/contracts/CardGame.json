{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_mscTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "allowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "betMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardNumbers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "competedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "drawCards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "game_state",
      "outputs": [
        {
          "internalType": "enum CardGame.GAME_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPlayerSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mscToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mscTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playersCardNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "repayBetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendMSCToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenToRandomness",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalPot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wagerOfPlayer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "3": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol",
    "4": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFRequestIDBase.sol",
    "5": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "7": "contracts/CardGame.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardGame.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1455
      ],
      "CardGame": [
        1106
      ],
      "Context": [
        1476
      ],
      "IERC20": [
        1288
      ],
      "LinkTokenInterface": [
        1621
      ],
      "Ownable": [
        1210
      ],
      "VRFConsumerBase": [
        1409
      ],
      "VRFRequestIDBase": [
        1526
      ]
    },
    "id": 1107,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1107,
        "sourceUnit": 1211,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1107,
        "sourceUnit": 1289,
        "src": "110:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1107,
        "sourceUnit": 1456,
        "src": "239:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1107,
        "sourceUnit": 1410,
        "src": "353:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1409,
              "src": "465:15:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "465:15:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1210,
              "src": "482:7:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:7"
          }
        ],
        "canonicalName": "CardGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1106,
        "linearizedBaseContracts": [
          1106,
          1210,
          1476,
          1409,
          1526
        ],
        "name": "CardGame",
        "nameLocation": "453:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61728f39",
            "id": 11,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "511:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "496:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 13,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "539:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "524:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "524:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 17,
            "name": "RequestedRandomness",
            "nameLocation": "554:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "582:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "574:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "573:19:7"
            },
            "src": "548:45:7"
          },
          {
            "canonicalName": "CardGame.GAME_STATE",
            "id": 21,
            "members": [
              {
                "id": 18,
                "name": "OPEN",
                "nameLocation": "625:4:7",
                "nodeType": "EnumValue",
                "src": "625:4:7"
              },
              {
                "id": 19,
                "name": "CLOSED",
                "nameLocation": "639:6:7",
                "nodeType": "EnumValue",
                "src": "639:6:7"
              },
              {
                "id": 20,
                "name": "CALCULATING_WINNER",
                "nameLocation": "655:18:7",
                "nodeType": "EnumValue",
                "src": "655:18:7"
              }
            ],
            "name": "GAME_STATE",
            "nameLocation": "604:10:7",
            "nodeType": "EnumDefinition",
            "src": "599:80:7"
          },
          {
            "constant": false,
            "functionSelector": "8ae43b54",
            "id": 24,
            "mutability": "mutable",
            "name": "game_state",
            "nameLocation": "702:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "684:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_GAME_STATE_$21",
              "typeString": "enum CardGame.GAME_STATE"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "GAME_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "684:10:7"
              },
              "referencedDeclaration": 21,
              "src": "684:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_GAME_STATE_$21",
                "typeString": "enum CardGame.GAME_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87cd6ad2",
            "id": 26,
            "mutability": "mutable",
            "name": "mscTokenAddress",
            "nameLocation": "733:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "718:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "718:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe05cc9c",
            "id": 29,
            "mutability": "mutable",
            "name": "mscToken",
            "nameLocation": "768:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "754:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1288",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1288,
                "src": "754:6:7"
              },
              "referencedDeclaration": 1288,
              "src": "754:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1288",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:184:7",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "996:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1006:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "996:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:7"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1024:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1030:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1024:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:10:7"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1044:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 55,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1057:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1057:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "1044:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:30:7"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1084:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "_mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1102:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1084:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:34:7"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "mscToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1128:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "_mscTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1146:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "1139:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1139:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1128:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:35:7"
                }
              ]
            },
            "id": 70,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "962:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 43,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "979:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1409,
                  "src": "946:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "946:39:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "812:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "804:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "845:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "837:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "868:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "860:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_keyHash",
                  "nameLocation": "890:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "882:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_mscTokenAddress",
                  "nameLocation": "916:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "908:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:144:7"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:7"
            },
            "scope": 1106,
            "src": "783:387:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66ce6dab",
            "id": 76,
            "mutability": "mutable",
            "name": "wagerOfPlayer",
            "nameLocation": "1278:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1223:68:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 71,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1231:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1223:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 74,
                "keyType": {
                  "id": 72,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1250:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1242:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 73,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1261:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bd9c47e3",
            "id": 80,
            "mutability": "mutable",
            "name": "tokenPriceFeeds",
            "nameLocation": "1374:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1339:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1347:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1339:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 78,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1358:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c753122",
            "id": 85,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "1507:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1470:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 84,
              "keyType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1478:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1470:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 82,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1489:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 83,
                "nodeType": "ArrayTypeName",
                "src": "1489:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 88,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "1537:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1520:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 86,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1520:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 87,
              "nodeType": "ArrayTypeName",
              "src": "1520:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66a1df65",
            "id": 92,
            "mutability": "mutable",
            "name": "totalPot",
            "nameLocation": "1663:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1628:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 89,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1636:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1628:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 90,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1647:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fdb144b",
            "id": 98,
            "mutability": "mutable",
            "name": "playersCardNumber",
            "nameLocation": "1784:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1729:72:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 97,
              "keyType": {
                "id": 93,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1737:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1729:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 96,
                "keyType": {
                  "id": 94,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1748:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 95,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1767:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd5ea4f8",
            "id": 102,
            "mutability": "mutable",
            "name": "playerCounter",
            "nameLocation": "1875:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1840:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 101,
              "keyType": {
                "id": 99,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1848:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1840:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 100,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1859:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "05f3bbd9",
            "id": 107,
            "mutability": "mutable",
            "name": "cardNumbers",
            "nameLocation": "1967:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "1930:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1938:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1930:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 104,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1949:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 105,
                "nodeType": "ArrayTypeName",
                "src": "1949:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ad95786",
            "id": 111,
            "mutability": "mutable",
            "name": "winner",
            "nameLocation": "2119:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "2084:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 110,
              "keyType": {
                "id": 108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2092:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2084:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 109,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2103:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45d7c3b9",
            "id": 117,
            "mutability": "mutable",
            "name": "tokenToRandomness",
            "nameLocation": "2303:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "2288:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 112,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2288:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 115,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2331:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 114,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2323:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 113,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2323:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2323:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2521cc46",
            "id": 123,
            "mutability": "mutable",
            "name": "competedToken",
            "nameLocation": "2354:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "2339:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 118,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2339:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 121,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2378:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 120,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2370:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 119,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2370:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2370:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36013189",
            "id": 125,
            "mutability": "mutable",
            "name": "randomness",
            "nameLocation": "2401:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1106,
            "src": "2386:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 124,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2386:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "2676:97:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2704:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2704:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 137,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2716:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "mscToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2686:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1288",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1237,
                      "src": "2686:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:38:7"
                }
              ]
            },
            "functionSelector": "0b26083c",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 130,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 129,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "2666:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2666:9:7"
              }
            ],
            "name": "sendMSCToken",
            "nameLocation": "2629:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2650:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "2642:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2641:17:7"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2676:0:7"
            },
            "scope": 1106,
            "src": "2620:153:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "2833:324:7",
              "statements": [
                {
                  "body": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "2908:243:7",
                    "statements": [
                      {
                        "assignments": [
                          162
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 162,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "2930:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 183,
                            "src": "2922:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 161,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2922:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 168,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 163,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "2942:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 165,
                            "indexExpression": {
                              "id": 164,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2950:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2942:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 167,
                          "indexExpression": {
                            "id": 166,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "2958:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2942:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2922:42:7"
                      },
                      {
                        "assignments": [
                          170
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 170,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "2986:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 183,
                            "src": "2978:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2978:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 175,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 172,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "3027:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 173,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "3038:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 171,
                            "name": "getUserSingleTokenValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "3003:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) returns (uint256)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3003:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2978:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 179,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "3077:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 180,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "3088:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 176,
                              "name": "mscToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "3059:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1288",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1237,
                            "src": "3059:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3059:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "3059:44:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 152,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2867:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 153,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2875:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 155,
                        "indexExpression": {
                          "id": 154,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "2883:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2875:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2875:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2867:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "initializationExpression": {
                    "assignments": [
                      149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2856:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "2848:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2848:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2864:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2848:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2899:7:7",
                      "subExpression": {
                        "id": 158,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2899:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 160,
                    "nodeType": "ExpressionStatement",
                    "src": "2899:7:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2843:308:7"
                }
              ]
            },
            "functionSelector": "3ff54c71",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "2823:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2823:9:7"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "2788:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2808:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2800:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:16:7"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2833:0:7"
            },
            "scope": 1106,
            "src": "2779:378:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "3216:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3245:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 193,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3226:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3226:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:26:7"
                }
              ]
            },
            "functionSelector": "b53472ef",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 190,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "3206:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3206:9:7"
              }
            ],
            "name": "allowToken",
            "nameLocation": "3172:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3191:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3183:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3182:16:7"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3216:0:7"
            },
            "scope": 1106,
            "src": "3163:96:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "3327:212:7",
              "statements": [
                {
                  "body": {
                    "id": 230,
                    "nodeType": "Block",
                    "src": "3403:130:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 219,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "3421:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 221,
                            "indexExpression": {
                              "id": 220,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "3435:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3421:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 222,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3445:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3421:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 227,
                        "nodeType": "IfStatement",
                        "src": "3417:80:7",
                        "trueBody": {
                          "id": 226,
                          "nodeType": "Block",
                          "src": "3453:44:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3478:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 206,
                              "id": 225,
                              "nodeType": "Return",
                              "src": "3471:11:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3517:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 206,
                        "id": 229,
                        "nodeType": "Return",
                        "src": "3510:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 211,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "3361:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 212,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3369:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3369:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3361:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 231,
                  "initializationExpression": {
                    "assignments": [
                      208
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3350:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "3342:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3342:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 210,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3358:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3342:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 215,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3391:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3391:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 218,
                    "nodeType": "ExpressionStatement",
                    "src": "3391:10:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "3337:196:7"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "3274:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3297:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "3289:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:16:7"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "3321:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3320:6:7"
            },
            "scope": 1106,
            "src": "3265:274:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "3610:297:7",
              "statements": [
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "3685:216:7",
                    "statements": [
                      {
                        "assignments": [
                          254
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 254,
                            "mutability": "mutable",
                            "name": "player",
                            "nameLocation": "3707:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 275,
                            "src": "3699:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 253,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3699:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 260,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 255,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "3716:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "id": 256,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "3724:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3716:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 259,
                          "indexExpression": {
                            "id": 258,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "3732:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3716:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3699:39:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 261,
                                "name": "playersCardNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3756:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 263,
                              "indexExpression": {
                                "id": 262,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 235,
                                "src": "3774:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3756:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "id": 264,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 254,
                              "src": "3782:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3756:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3793:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3756:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 273,
                          "nodeType": "Block",
                          "src": "3846:45:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3871:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 239,
                              "id": 272,
                              "nodeType": "Return",
                              "src": "3864:12:7"
                            }
                          ]
                        },
                        "id": 274,
                        "nodeType": "IfStatement",
                        "src": "3752:139:7",
                        "trueBody": {
                          "id": 270,
                          "nodeType": "Block",
                          "src": "3796:44:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3821:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 239,
                              "id": 269,
                              "nodeType": "Return",
                              "src": "3814:11:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 244,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "3644:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 245,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "3652:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "id": 246,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "3660:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3652:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3652:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3644:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "initializationExpression": {
                    "assignments": [
                      241
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3633:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3625:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3625:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 243,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3641:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3625:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3676:7:7",
                      "subExpression": {
                        "id": 250,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3676:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 252,
                    "nodeType": "ExpressionStatement",
                    "src": "3676:7:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "3620:281:7"
                }
              ]
            },
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playerIsAllowed",
            "nameLocation": "3554:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3578:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3570:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3569:16:7"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3604:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3603:6:7"
            },
            "scope": 1106,
            "src": "3545:362:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "4016:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 287,
                        "name": "tokenPriceFeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "4026:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 289,
                      "indexExpression": {
                        "id": 288,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4042:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4026:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4052:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4026:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "4026:36:7"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 284,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "4002:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4002:9:7"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "3922:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3951:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "3943:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3943:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "3967:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "3959:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:36:7"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4016:0:7"
            },
            "scope": 1106,
            "src": "3913:156:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "4181:410:7",
              "statements": [
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "4199:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "4191:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4191:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "baseExpression": {
                      "id": 305,
                      "name": "tokenPriceFeeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "4218:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 307,
                    "indexExpression": {
                      "id": 306,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "4234:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4218:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4191:50:7"
                },
                {
                  "assignments": [
                    311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "4348:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "4326:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1455",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 310,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 309,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1455,
                          "src": "4326:21:7"
                        },
                        "referencedDeclaration": 1455,
                        "src": "4326:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1455",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 313,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "4395:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 312,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "4360:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1455_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1455",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4326:95:7"
                },
                {
                  "assignments": [
                    null,
                    317,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4441:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "4434:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4434:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 321,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 318,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "4456:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1455",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "4456:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4456:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4431:52:7"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4501:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "4493:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4493:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 330,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 326,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "4520:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1455",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1416,
                          "src": "4520:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4520:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4512:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4512:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4512:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4493:48:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 333,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "4567:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4559:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 331,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4559:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4559:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 335,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "4575:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 336,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4558:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 302,
                  "id": 337,
                  "nodeType": "Return",
                  "src": "4551:33:7"
                }
              ]
            },
            "functionSelector": "f1c5d6c2",
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "4084:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4106:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "4098:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4097:16:7"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "4159:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "4168:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4158:18:7"
            },
            "scope": 1106,
            "src": "4075:516:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "4797:229:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 348,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4811:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 350,
                        "indexExpression": {
                          "id": 349,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "4825:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4811:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 352,
                      "indexExpression": {
                        "id": 351,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4833:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4811:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4842:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4811:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 358,
                  "nodeType": "IfStatement",
                  "src": "4807:71:7",
                  "trueBody": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "4845:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 347,
                        "id": 356,
                        "nodeType": "Return",
                        "src": "4859:8:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    360,
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4897:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "4889:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4889:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4912:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "4904:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4904:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 364,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "4938:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 363,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "4924:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4924:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4888:57:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 367,
                                    "name": "wagerOfPlayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "4964:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 369,
                                  "indexExpression": {
                                    "id": 368,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 343,
                                    "src": "4978:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4964:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 371,
                                "indexExpression": {
                                  "id": 370,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "4986:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4964:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 372,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 360,
                                "src": "4995:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4964:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 374,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4963:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5005:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 376,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "5009:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5005:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 378,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5004:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4963:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 380,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4962:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 347,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "4955:64:7"
                }
              ]
            },
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "4695:23:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4727:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "4719:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4719:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4742:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "4734:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4734:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4718:31:7"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "4784:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4783:9:7"
            },
            "scope": 1106,
            "src": "4686:340:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "5188:349:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 390,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "5202:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 392,
                        "indexExpression": {
                          "id": 391,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "5216:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5202:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5224:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5224:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5202:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5238:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5202:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 401,
                  "nodeType": "IfStatement",
                  "src": "5198:76:7",
                  "trueBody": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "5241:33:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5262:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 389,
                        "id": 399,
                        "nodeType": "Return",
                        "src": "5255:8:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    403,
                    405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5293:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 426,
                      "src": "5285:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5285:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 405,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "5308:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 426,
                      "src": "5300:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5300:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 409,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "5334:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 406,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "5320:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5320:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5284:57:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 410,
                                    "name": "wagerOfPlayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "5470:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 412,
                                  "indexExpression": {
                                    "id": 411,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 385,
                                    "src": "5484:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5470:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 415,
                                "indexExpression": {
                                  "expression": {
                                    "id": 413,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5492:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5492:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5470:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 416,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "5506:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5470:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 418,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5469:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5516:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 420,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "5520:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5516:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 422,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5515:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5469:60:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 424,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5468:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "5461:69:7"
                }
              ]
            },
            "functionSelector": "24398a85",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerSingleTokenValue",
            "nameLocation": "5088:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5122:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "5114:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:16:7"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "5175:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5175:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5174:9:7"
            },
            "scope": 1106,
            "src": "5079:458:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "5716:382:7",
              "statements": [
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "5734:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "5726:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5726:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5726:13:7"
                },
                {
                  "body": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "5802:122:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 450,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "5820:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 452,
                              "indexExpression": {
                                "id": 451,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "5828:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5820:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 454,
                            "indexExpression": {
                              "id": 453,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "5836:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5820:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 455,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "5842:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5820:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 463,
                        "nodeType": "IfStatement",
                        "src": "5816:98:7",
                        "trueBody": {
                          "id": 462,
                          "nodeType": "Block",
                          "src": "5849:65:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 457,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 435,
                                  "src": "5867:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 458,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "5875:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5867:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 460,
                              "nodeType": "ExpressionStatement",
                              "src": "5867:9:7"
                            },
                            {
                              "id": 461,
                              "nodeType": "Break",
                              "src": "5894:5:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 441,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "5769:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 442,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "5773:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 444,
                        "indexExpression": {
                          "id": 443,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "5781:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5773:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5773:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5769:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 465,
                  "initializationExpression": {
                    "assignments": [
                      438
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5762:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "5754:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5754:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 440,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5766:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5754:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5797:3:7",
                      "subExpression": {
                        "id": 447,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5797:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 449,
                    "nodeType": "ExpressionStatement",
                    "src": "5797:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5749:175:7"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "5994:68:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 481,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "6008:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 484,
                              "indexExpression": {
                                "id": 482,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "6016:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6008:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 485,
                            "indexExpression": {
                              "id": 483,
                              "name": "e",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "6024:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6008:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 486,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "6029:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 488,
                              "indexExpression": {
                                "id": 487,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "6037:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6029:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 492,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 489,
                                "name": "e",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "6045:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6049:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6045:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6029:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6008:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 494,
                        "nodeType": "ExpressionStatement",
                        "src": "6008:43:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 470,
                      "name": "e",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "5957:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 471,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "5961:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 473,
                          "indexExpression": {
                            "id": 472,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "5969:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5961:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5961:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5986:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5961:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5957:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "initializationExpression": {
                    "assignments": [
                      467
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 467,
                        "mutability": "mutable",
                        "name": "e",
                        "nameLocation": "5946:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5938:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5938:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 469,
                    "initialValue": {
                      "id": 468,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "5950:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5938:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5989:3:7",
                      "subExpression": {
                        "id": 478,
                        "name": "e",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "5989:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 480,
                    "nodeType": "ExpressionStatement",
                    "src": "5989:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5933:129:7"
                }
              ]
            },
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromPlayers",
            "nameLocation": "5658:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5684:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5676:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5700:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5692:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:31:7"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5716:0:7"
            },
            "scope": 1106,
            "src": "5649:449:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "6167:781:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 506,
                            "name": "game_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6198:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 507,
                              "name": "GAME_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "6212:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                                "typeString": "type(enum CardGame.GAME_STATE)"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "6212:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "src": "6198:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 510,
                            "name": "game_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "6231:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 511,
                              "name": "GAME_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "6245:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                                "typeString": "type(enum CardGame.GAME_STATE)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CLOSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "6245:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GAME_STATE_$21",
                              "typeString": "enum CardGame.GAME_STATE"
                            }
                          },
                          "src": "6231:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6198:64:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e2774206765742074686520726566756e642061667465722067616d65207374617274656421",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6276:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7",
                          "typeString": "literal_string \"You can't get the refund after game started!\""
                        },
                        "value": "You can't get the refund after game started!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7",
                          "typeString": "literal_string \"You can't get the refund after game started!\""
                        }
                      ],
                      "id": 505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6177:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:155:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:155:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 519,
                              "name": "wagerOfPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "6363:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 521,
                            "indexExpression": {
                              "id": 520,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "6377:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6363:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 524,
                          "indexExpression": {
                            "expression": {
                              "id": 522,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6385:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6385:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6363:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 525,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 500,
                          "src": "6400:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6363:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742062657420746f6b656e206f662074686520616d6f756e7421",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d",
                          "typeString": "literal_string \"You didn't bet token of the amount!\""
                        },
                        "value": "You didn't bet token of the amount!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d",
                          "typeString": "literal_string \"You didn't bet token of the amount!\""
                        }
                      ],
                      "id": 518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6342:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6342:126:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "6342:126:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 531,
                              "name": "playersCardNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "6499:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 533,
                            "indexExpression": {
                              "id": 532,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "6517:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6499:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 536,
                          "indexExpression": {
                            "expression": {
                              "id": 534,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6525:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6525:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6499:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6540:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6499:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206472657720796f757220636172642c20796f752063616e277420726566756e6421",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6555:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c8ee954c52d2df4198e8d40c4228e1d6b2c26095806fd580c73121ce3dc5a05",
                          "typeString": "literal_string \"You drew your card, you can't refund!\""
                        },
                        "value": "You drew your card, you can't refund!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c8ee954c52d2df4198e8d40c4228e1d6b2c26095806fd580c73121ce3dc5a05",
                          "typeString": "literal_string \"You drew your card, you can't refund!\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6478:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:126:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6478:126:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 546,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6638:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6638:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 548,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6650:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 543,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "6621:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 542,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1288,
                          "src": "6614:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6614:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1288",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1237,
                      "src": "6614:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6614:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:44:7"
                },
                {
                  "expression": {
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 551,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "6668:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 555,
                        "indexExpression": {
                          "id": 552,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "6682:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6668:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 556,
                      "indexExpression": {
                        "expression": {
                          "id": 553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6690:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6690:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6668:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 557,
                            "name": "wagerOfPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "6716:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "id": 558,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "6730:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6716:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 562,
                        "indexExpression": {
                          "expression": {
                            "id": 560,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6738:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6738:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6716:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 563,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6764:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6716:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6668:103:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "6668:103:7"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 567,
                        "name": "totalPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "6781:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 569,
                      "indexExpression": {
                        "id": 568,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "6790:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6781:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 570,
                          "name": "totalPot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6800:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 572,
                        "indexExpression": {
                          "id": 571,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "6809:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6800:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 573,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6819:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6800:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6781:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "6781:45:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 577,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "6840:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 579,
                        "indexExpression": {
                          "id": 578,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "6854:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6840:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 582,
                      "indexExpression": {
                        "expression": {
                          "id": 580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6862:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6862:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6840:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6877:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6840:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 592,
                  "nodeType": "IfStatement",
                  "src": "6836:106:7",
                  "trueBody": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "6880:62:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 586,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "6912:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 587,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6920:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6920:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 585,
                            "name": "removeFromPlayers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "6894:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6894:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "6894:37:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b81baa59",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBetToken",
            "nameLocation": "6113:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6135:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "6127:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6127:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6152:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "6144:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6144:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6126:33:7"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6167:0:7"
            },
            "scope": 1106,
            "src": "6104:844:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "6992:165:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 600,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "7023:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 601,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "7037:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "7037:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "7023:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774207374617274206e65772067616d652073746174652079657421",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7068:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d",
                          "typeString": "literal_string \"Can't start new game state yet!\""
                        },
                        "value": "Can't start new game state yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d",
                          "typeString": "literal_string \"Can't start new game state yet!\""
                        }
                      ],
                      "id": 599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7002:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7002:109:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "7002:109:7"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 607,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7122:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 608,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "7135:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "7135:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "7122:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "7122:28:7"
                }
              ]
            },
            "functionSelector": "d65ab5f2",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 596,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "6982:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6982:9:7"
              }
            ],
            "name": "startGame",
            "nameLocation": "6963:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6972:2:7"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:0:7"
            },
            "scope": 1106,
            "src": "6954:203:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "7221:1738:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 621,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 615,
                          "src": "7239:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7249:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7239:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4120626574206d757374206265206d6f7265207468616e2030",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7252:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf",
                          "typeString": "literal_string \"A bet must be more than 0\""
                        },
                        "value": "A bet must be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf",
                          "typeString": "literal_string \"A bet must be more than 0\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7231:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7231:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "7231:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 629,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "7313:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 628,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "7298:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7298:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7322:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        },
                        "value": "This token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7290:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7290:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "7290:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 635,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "7381:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 637,
                            "indexExpression": {
                              "id": 636,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "7389:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7381:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7381:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7406:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "7381:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c20746869732067616d6520697320616c72656164792066756c6c2e20506c656173652077616974206e6578742067616d652e",
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7421:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba",
                          "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""
                        },
                        "value": "Sorry, this game is already full. Please wait next game."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba",
                          "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7360:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7360:129:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "7360:129:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 645,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "7507:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 646,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "7521:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "7521:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "7507:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420626574206d6f6e6579207768696c6520",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7538:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990",
                          "typeString": "literal_string \"You can't bet money while \""
                        },
                        "value": "You can't bet money while "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990",
                          "typeString": "literal_string \"You can't bet money while \""
                        }
                      ],
                      "id": 644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7499:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7499:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "7499:68:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 652,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "7803:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 653,
                      "name": "mscTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "7813:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7803:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "8156:392:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 672,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8433:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8433:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 676,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8453:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardGame_$1106",
                                    "typeString": "contract CardGame"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardGame_$1106",
                                    "typeString": "contract CardGame"
                                  }
                                ],
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8445:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 674,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8445:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8445:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 678,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "8460:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 669,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "8412:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 668,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1288,
                                "src": "8405:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8405:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1288",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1269,
                            "src": "8405:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8405:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "8405:63:7"
                      }
                    ]
                  },
                  "id": 682,
                  "nodeType": "IfStatement",
                  "src": "7799:749:7",
                  "trueBody": {
                    "id": 667,
                    "nodeType": "Block",
                    "src": "7830:320:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 658,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7866:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7866:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 662,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7886:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardGame_$1106",
                                    "typeString": "contract CardGame"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardGame_$1106",
                                    "typeString": "contract CardGame"
                                  }
                                ],
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7878:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 660,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7878:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7878:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 664,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "7893:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 655,
                              "name": "mscToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "7844:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1288",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1269,
                            "src": "7844:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7844:57:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "7844:57:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 683,
                          "name": "wagerOfPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "8557:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 687,
                        "indexExpression": {
                          "id": 684,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "8571:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8557:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 688,
                      "indexExpression": {
                        "expression": {
                          "id": 685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8579:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8579:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8557:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 689,
                            "name": "wagerOfPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "8605:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 691,
                          "indexExpression": {
                            "id": 690,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "8619:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8605:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 694,
                        "indexExpression": {
                          "expression": {
                            "id": 692,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8627:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8627:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8605:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 695,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "8653:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8605:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8557:103:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "8557:103:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 699,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "8674:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 701,
                        "indexExpression": {
                          "id": 700,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "8682:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8674:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8674:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8700:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8674:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 722,
                    "nodeType": "Block",
                    "src": "8760:70:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 712,
                              "name": "totalPot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "8774:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 714,
                            "indexExpression": {
                              "id": 713,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "8783:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8774:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 715,
                                "name": "totalPot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "8793:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 717,
                              "indexExpression": {
                                "id": 716,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "8802:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8793:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 718,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "8812:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8793:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8774:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "8774:45:7"
                      }
                    ]
                  },
                  "id": 723,
                  "nodeType": "IfStatement",
                  "src": "8670:160:7",
                  "trueBody": {
                    "id": 711,
                    "nodeType": "Block",
                    "src": "8703:51:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 705,
                              "name": "totalPot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "8717:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 707,
                            "indexExpression": {
                              "id": 706,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "8726:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8717:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 708,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "8736:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8717:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "8717:26:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8860:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8860:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 724,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "8839:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 726,
                        "indexExpression": {
                          "id": 725,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "8847:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8839:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8839:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8839:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "8839:32:7"
                },
                {
                  "expression": {
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 732,
                          "name": "playersCardNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "8881:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 736,
                        "indexExpression": {
                          "id": 733,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "8899:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8881:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 737,
                      "indexExpression": {
                        "expression": {
                          "id": 734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8907:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8907:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8881:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8921:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8881:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8881:41:7"
                }
              ]
            },
            "functionSelector": "f1d76a5f",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "betMoney",
            "nameLocation": "7172:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7189:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "7181:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7181:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7206:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "7198:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7198:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7180:33:7"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7221:0:7"
            },
            "scope": 1106,
            "src": "7163:1796:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "9007:495:7",
              "statements": [
                {
                  "expression": {
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 747,
                      "name": "tokenToRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "9017:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 748,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "9037:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9017:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "9017:26:7"
                },
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "9062:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "9054:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9054:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 754,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "9092:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 755,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "9101:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 753,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1359,
                      "src": "9074:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9074:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9054:51:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 759,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "9140:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 758,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "9120:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9120:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "EmitStatement",
                  "src": "9115:35:7"
                }
              ]
            },
            "functionSelector": "8b42eb7c",
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawCards",
            "nameLocation": "8974:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8992:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "8984:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8984:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8983:16:7"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9007:0:7"
            },
            "scope": 1106,
            "src": "8965:537:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1303
            ],
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "9706:680:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 772,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "9724:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 773,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "9738:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "9738:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "9724:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9755:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 771,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9716:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9716:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "9716:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 780,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "9797:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9811:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9797:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72616e646f6d2d6e6f742d666f756e64",
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9814:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab",
                          "typeString": "literal_string \"random-not-found\""
                        },
                        "value": "random-not-found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab",
                          "typeString": "literal_string \"random-not-found\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9789:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9789:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "9789:44:7"
                },
                {
                  "expression": {
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 786,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "9843:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 787,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "9856:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9843:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "9843:24:7"
                },
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "cardNumber",
                      "nameLocation": "9885:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 836,
                      "src": "9877:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 790,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9877:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 795,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 792,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "9898:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "3134",
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9912:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14_by_1",
                        "typeString": "int_const 14"
                      },
                      "value": "14"
                    },
                    "src": "9898:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9877:37:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 796,
                      "name": "cardNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "9928:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9942:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9928:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "9924:60:7",
                  "trueBody": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "9945:39:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 799,
                            "name": "cardNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "9959:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9972:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9959:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 802,
                        "nodeType": "ExpressionStatement",
                        "src": "9959:14:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "player",
                      "nameLocation": "10001:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 836,
                      "src": "9993:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9993:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 814,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 807,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "10010:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 809,
                      "indexExpression": {
                        "id": 808,
                        "name": "tokenToRandomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "10018:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10010:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 813,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 810,
                        "name": "playerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "10050:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 812,
                      "indexExpression": {
                        "id": 811,
                        "name": "tokenToRandomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "10064:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10050:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10010:82:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9993:99:7"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 815,
                          "name": "playersCardNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "10102:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 818,
                        "indexExpression": {
                          "id": 816,
                          "name": "tokenToRandomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "10120:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10102:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 819,
                      "indexExpression": {
                        "id": 817,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "10139:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10102:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 820,
                      "name": "cardNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "10149:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10102:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "10102:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 827,
                        "name": "cardNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "10205:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 823,
                          "name": "cardNumbers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "10169:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 825,
                        "indexExpression": {
                          "id": 824,
                          "name": "tokenToRandomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "10181:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10169:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "10169:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10169:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "10169:47:7"
                },
                {
                  "expression": {
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 830,
                        "name": "playerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "10226:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 832,
                      "indexExpression": {
                        "id": 831,
                        "name": "tokenToRandomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "10240:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10226:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10262:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10226:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "10226:37:7"
                }
              ]
            },
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "9609:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 769,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9693:8:7"
            },
            "parameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "9635:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "9627:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9627:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "9655:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "9647:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9647:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9626:41:7"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9706:0:7"
            },
            "scope": 1106,
            "src": "9600:786:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "10462:1289:7",
              "statements": [
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 846,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "10472:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 847,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "10485:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING_WINNER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "10485:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "10472:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "10472:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 852,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "10703:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10728:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10720:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 853,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10720:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10720:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10703:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4265666f72652067616d65206973206e6f74206f766572207965742c206f776e6572206861766520746f207061792072657761726420746f2077696e6e657221",
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10744:66:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39ebb67fea5db80fb2d0f3a25f6e24ea5aadf12c7f1df56c40ca9e7529dba198",
                          "typeString": "literal_string \"Before game is not over yet, owner have to pay reward to winner!\""
                        },
                        "value": "Before game is not over yet, owner have to pay reward to winner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39ebb67fea5db80fb2d0f3a25f6e24ea5aadf12c7f1df56c40ca9e7529dba198",
                          "typeString": "literal_string \"Before game is not over yet, owner have to pay reward to winner!\""
                        }
                      ],
                      "id": 851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10682:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10682:138:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "10682:138:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "10867:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 862,
                          "name": "playerIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "10851:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10851:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c207061727469636970616e7473206e6565647320746f20647261772061206361726421",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10888:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a270eece503ec8ff69054a8a0f11dad42479c25ff62c76722a946e0d57e15740",
                          "typeString": "literal_string \"All participants needs to draw a card!\""
                        },
                        "value": "All participants needs to draw a card!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a270eece503ec8ff69054a8a0f11dad42479c25ff62c76722a946e0d57e15740",
                          "typeString": "literal_string \"All participants needs to draw a card!\""
                        }
                      ],
                      "id": 861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10830:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10830:108:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "10830:108:7"
                },
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "max",
                      "nameLocation": "11158:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "11150:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11150:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 871,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11164:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11150:15:7"
                },
                {
                  "body": {
                    "id": 948,
                    "nodeType": "Block",
                    "src": "11233:449:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 885,
                                "name": "cardNumbers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "11251:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 887,
                              "indexExpression": {
                                "id": 886,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "11263:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11251:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 889,
                            "indexExpression": {
                              "id": 888,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "11271:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11251:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 890,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "11276:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11251:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 911,
                                  "name": "cardNumbers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "11405:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                    "typeString": "mapping(address => uint256[] storage ref)"
                                  }
                                },
                                "id": 913,
                                "indexExpression": {
                                  "id": 912,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "11417:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11405:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 915,
                              "indexExpression": {
                                "id": 914,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "11425:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11405:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 916,
                              "name": "max",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "11431:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11405:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 946,
                          "nodeType": "IfStatement",
                          "src": "11401:271:7",
                          "trueBody": {
                            "id": 945,
                            "nodeType": "Block",
                            "src": "11436:236:7",
                            "statements": [
                              {
                                "assignments": [
                                  919
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 919,
                                    "mutability": "mutable",
                                    "name": "judge",
                                    "nameLocation": "11462:5:7",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 945,
                                    "src": "11454:13:7",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 918,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11454:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 923,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 920,
                                    "name": "max",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "11470:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 921,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11476:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "11470:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "11454:23:7"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 924,
                                    "name": "judge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 919,
                                    "src": "11499:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 925,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11508:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11499:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 940,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 938,
                                      "name": "judge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 919,
                                      "src": "11597:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 939,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11606:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11597:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 943,
                                  "nodeType": "IfStatement",
                                  "src": "11593:65:7",
                                  "trueBody": {
                                    "id": 942,
                                    "nodeType": "Block",
                                    "src": "11609:49:7",
                                    "statements": [
                                      {
                                        "id": 941,
                                        "nodeType": "Continue",
                                        "src": "11631:8:7"
                                      }
                                    ]
                                  }
                                },
                                "id": 944,
                                "nodeType": "IfStatement",
                                "src": "11495:163:7",
                                "trueBody": {
                                  "id": 937,
                                  "nodeType": "Block",
                                  "src": "11511:76:7",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 935,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 927,
                                            "name": "winner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 111,
                                            "src": "11533:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                              "typeString": "mapping(address => address)"
                                            }
                                          },
                                          "id": 929,
                                          "indexExpression": {
                                            "id": 928,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 839,
                                            "src": "11540:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "11533:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 930,
                                              "name": "players",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 85,
                                              "src": "11550:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(address => address[] storage ref)"
                                              }
                                            },
                                            "id": 932,
                                            "indexExpression": {
                                              "id": 931,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 839,
                                              "src": "11558:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "11550:15:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 934,
                                          "indexExpression": {
                                            "id": 933,
                                            "name": "c",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 873,
                                            "src": "11566:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "11550:18:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "11533:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 936,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11533:35:7"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "11247:425:7",
                        "trueBody": {
                          "id": 910,
                          "nodeType": "Block",
                          "src": "11281:114:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 892,
                                  "name": "max",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "11299:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 893,
                                      "name": "cardNumbers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "11305:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 895,
                                    "indexExpression": {
                                      "id": 894,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 839,
                                      "src": "11317:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11305:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 897,
                                  "indexExpression": {
                                    "id": 896,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 873,
                                    "src": "11325:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11305:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11299:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 899,
                              "nodeType": "ExpressionStatement",
                              "src": "11299:28:7"
                            },
                            {
                              "expression": {
                                "id": 908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 900,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "11345:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                      "typeString": "mapping(address => address)"
                                    }
                                  },
                                  "id": 902,
                                  "indexExpression": {
                                    "id": 901,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 839,
                                    "src": "11352:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11345:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 903,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85,
                                      "src": "11362:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 905,
                                    "indexExpression": {
                                      "id": 904,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 839,
                                      "src": "11370:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11362:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 907,
                                  "indexExpression": {
                                    "id": 906,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 873,
                                    "src": "11378:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11362:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "11345:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 909,
                              "nodeType": "ExpressionStatement",
                              "src": "11345:35:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 876,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "11196:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 877,
                          "name": "cardNumbers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "11200:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 879,
                        "indexExpression": {
                          "id": 878,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "11212:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11200:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11200:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11196:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 949,
                  "initializationExpression": {
                    "assignments": [
                      873
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "c",
                        "nameLocation": "11189:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 949,
                        "src": "11181:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11181:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 875,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11193:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11181:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11228:3:7",
                      "subExpression": {
                        "id": 882,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "11228:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 884,
                    "nodeType": "ExpressionStatement",
                    "src": "11228:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "11176:506:7"
                },
                {
                  "expression": {
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 950,
                      "name": "competedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "11691:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 951,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "11707:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11691:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "11691:22:7"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 954,
                      "name": "winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "11730:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 956,
                    "indexExpression": {
                      "id": 955,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "11737:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11730:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 845,
                  "id": 957,
                  "nodeType": "Return",
                  "src": "11723:21:7"
                }
              ]
            },
            "functionSelector": "b90c899d",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 841,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "10434:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "10434:9:7"
              }
            ],
            "name": "getWinner",
            "nameLocation": "10401:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "10419:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "10411:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10411:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10410:16:7"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "10453:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10453:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10452:9:7"
            },
            "scope": 1106,
            "src": "10392:1359:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "11793:1327:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GAME_STATE_$21",
                          "typeString": "enum CardGame.GAME_STATE"
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 965,
                          "name": "game_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "11824:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 966,
                            "name": "GAME_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "11838:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                              "typeString": "type(enum CardGame.GAME_STATE)"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "11838:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GAME_STATE_$21",
                            "typeString": "enum CardGame.GAME_STATE"
                          }
                        },
                        "src": "11824:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11881:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11803:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11803:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "11803:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 974,
                            "name": "competedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "11947:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 973,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "11932:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11932:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11963:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        },
                        "value": "This token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a",
                          "typeString": "literal_string \"This token is not allowed\""
                        }
                      ],
                      "id": 972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11924:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11924:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "11924:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 980,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "12022:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 982,
                          "indexExpression": {
                            "id": 981,
                            "name": "competedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "12029:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12022:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12055:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12047:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 983,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12047:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12047:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12022:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722069732077696e6e6572",
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12071:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c",
                          "typeString": "literal_string \"Still doesn't know which player is winner\""
                        },
                        "value": "Still doesn't know which player is winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c",
                          "typeString": "literal_string \"Still doesn't know which player is winner\""
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12001:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12001:123:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "12001:123:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12239:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12239:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 997,
                          "name": "winner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "12263:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 999,
                        "indexExpression": {
                          "id": 998,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "12270:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12263:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1000,
                          "name": "totalPot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "12298:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1002,
                        "indexExpression": {
                          "id": 1001,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "12307:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12298:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 992,
                            "name": "competedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "12198:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 991,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1288,
                          "src": "12191:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12191:21:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1288",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1269,
                      "src": "12191:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12191:140:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "12191:140:7"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1005,
                        "name": "totalPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "12433:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1007,
                      "indexExpression": {
                        "id": 1006,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "12442:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12433:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12459:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12433:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "12433:27:7"
                },
                {
                  "body": {
                    "id": 1048,
                    "nodeType": "Block",
                    "src": "12623:183:7",
                    "statements": [
                      {
                        "assignments": [
                          1025
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1025,
                            "mutability": "mutable",
                            "name": "player",
                            "nameLocation": "12645:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1048,
                            "src": "12637:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12637:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1031,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1026,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "12654:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 1028,
                            "indexExpression": {
                              "id": 1027,
                              "name": "competedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "12662:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12654:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1030,
                          "indexExpression": {
                            "id": 1029,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "12677:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12654:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12637:46:7"
                      },
                      {
                        "expression": {
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1032,
                                "name": "wagerOfPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "12697:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1035,
                              "indexExpression": {
                                "id": 1033,
                                "name": "competedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "12711:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12697:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1036,
                            "indexExpression": {
                              "id": 1034,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "12726:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12697:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12736:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12697:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "12697:40:7"
                      },
                      {
                        "expression": {
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1040,
                                "name": "playersCardNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "12751:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1043,
                              "indexExpression": {
                                "id": 1041,
                                "name": "competedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "12769:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12751:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1044,
                            "indexExpression": {
                              "id": 1042,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "12784:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12751:40:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12794:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12751:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1047,
                        "nodeType": "ExpressionStatement",
                        "src": "12751:44:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1015,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "12554:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1016,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "12562:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 1018,
                        "indexExpression": {
                          "id": 1017,
                          "name": "competedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "12570:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12562:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12562:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12554:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1049,
                  "initializationExpression": {
                    "assignments": [
                      1012
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "12531:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "12523:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12523:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1014,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12539:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12523:17:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12605:7:7",
                      "subExpression": {
                        "id": 1021,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "12605:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1023,
                    "nodeType": "ExpressionStatement",
                    "src": "12605:7:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "12505:301:7"
                },
                {
                  "expression": {
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1050,
                      "name": "tokenToRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "12815:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12843:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12835:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12835:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12835:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12815:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "12815:30:7"
                },
                {
                  "expression": {
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1057,
                        "name": "playerCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "12855:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1059,
                      "indexExpression": {
                        "id": 1058,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "12869:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12855:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12886:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12855:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "12855:32:7"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1063,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "12897:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "id": 1064,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "12905:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12897:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12936:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12922:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1066,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12926:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1067,
                          "nodeType": "ArrayTypeName",
                          "src": "12926:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12922:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "12897:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "12897:41:7"
                },
                {
                  "expression": {
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1073,
                        "name": "cardNumbers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "12948:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(address => uint256[] storage ref)"
                        }
                      },
                      "id": 1075,
                      "indexExpression": {
                        "id": 1074,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "12960:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12948:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12991:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12977:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1076,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12981:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1077,
                          "nodeType": "ArrayTypeName",
                          "src": "12981:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12977:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "12948:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "12948:45:7"
                },
                {
                  "expression": {
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1083,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "13003:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1085,
                      "indexExpression": {
                        "id": 1084,
                        "name": "competedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "13010:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13003:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13035:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13027:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13027:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13027:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13003:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "13003:34:7"
                },
                {
                  "expression": {
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1092,
                      "name": "competedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "13047:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13071:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13063:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13063:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13063:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13047:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "13047:26:7"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1099,
                      "name": "game_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "13083:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1100,
                        "name": "GAME_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "13096:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$",
                          "typeString": "type(enum CardGame.GAME_STATE)"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "13096:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GAME_STATE_$21",
                        "typeString": "enum CardGame.GAME_STATE"
                      }
                    },
                    "src": "13083:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GAME_STATE_$21",
                      "typeString": "enum CardGame.GAME_STATE"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "13083:30:7"
                }
              ]
            },
            "functionSelector": "6cbc2ded",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 961,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "11783:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "11783:9:7"
              }
            ],
            "name": "endGame",
            "nameLocation": "11766:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11773:2:7"
            },
            "returnParameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11793:0:7"
            },
            "scope": 1106,
            "src": "11757:1363:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1107,
        "src": "444:12678:7",
        "usedErrors": []
      }
    ],
    "src": "32:13091:7"
  },
  "bytecode": "60c0604052600f80546001600160a01b03199081169091556010805490911690553480156200002d57600080fd5b506040516200268d3803806200268d83398101604081905262000050916200012c565b6001600160a01b0385811660a05284166080526200006e33620000bd565b6002919091556003919091556004805460016001600160a81b03199091166101006001600160a01b0390941693840217179055600580546001600160a01b0319169091179055506200018a9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200012757600080fd5b919050565b600080600080600060a086880312156200014557600080fd5b62000150866200010f565b945062000160602087016200010f565b935060408601519250606086015191506200017e608087016200010f565b90509295509295909350565b60805160a0516124d6620001b760003960008181610c680152611aec01526000611abd01526124d66000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638ae43b541161011a578063bd9c47e3116100ad578063ddca3f431161007c578063ddca3f43146104ba578063f1c5d6c2146104c3578063f1d76a5f146104eb578063f2fde38b146104fe578063fe05cc9c1461051157600080fd5b8063bd9c47e314610446578063cd5ea4f81461046f578063d65ab5f21461048f578063dd5b84671461049757600080fd5b80639c753122116100e95780639c753122146103fa578063b53472ef1461040d578063b81baa5914610420578063b90c899d1461043357600080fd5b80638ae43b54146103a95780638b42eb7c146103c35780638da5cb5b146103d657806394985ddd146103e757600080fd5b806345d7c3b91161019d57806366ce6dab1161016c57806366ce6dab146103435780636cbc2ded1461036e578063715018a614610376578063877dd39d1461037e57806387cd6ad21461039157600080fd5b806345d7c3b9146102f45780635e5f2e261461030757806361728f391461031a57806366a1df651461032357600080fd5b80632ad95786116101d95780632ad957861461028457806336013189146102ad5780633fdb144b146102b65780633ff54c71146102e157600080fd5b806305f3bbd91461020b5780630b26083c1461023157806324398a85146102465780632521cc4614610259575b600080fd5b61021e610219366004612072565b610524565b6040519081526020015b60405180910390f35b61024461023f36600461209c565b610555565b005b61021e6102543660046120b5565b610601565b60105461026c906001600160a01b031681565b6040516001600160a01b039091168152602001610228565b61026c6102923660046120b5565b600e602052600090815260409020546001600160a01b031681565b61021e60115481565b61021e6102c43660046120d7565b600b60209081526000928352604080842090915290825290205481565b6102446102ef3660046120b5565b61067d565b600f5461026c906001600160a01b031681565b61026c61031536600461209c565b6107a3565b61021e60025481565b61021e6103313660046120b5565b600a6020526000908152604090205481565b61021e6103513660046120d7565b600660209081526000928352604080842090915290825290205481565b6102446107cd565b610244610b63565b61024461038c3660046120d7565b610b99565b60045461026c9061010090046001600160a01b031681565b6004546103b69060ff1681565b6040516102289190612120565b6102446103d13660046120b5565b610bf1565b6001546001600160a01b031661026c565b6102446103f5366004612148565b610c5d565b61026c610408366004612072565b610cdf565b61024461041b3660046120b5565b610d17565b61024461042e36600461216a565b610d93565b61026c6104413660046120b5565b611045565b61026c6104543660046120b5565b6007602052600090815260409020546001600160a01b031681565b61021e61047d3660046120b5565b600c6020526000908152604090205481565b610244611385565b6104aa6104a53660046120b5565b611429565b6040519015158152602001610228565b61021e60035481565b6104d66104d13660046120b5565b611486565b60408051928352602083019190915201610228565b6102446104f936600461216a565b611587565b61024461050c3660046120b5565b611946565b60055461026c906001600160a01b031681565b600d602052816000526040600020818154811061054057600080fd5b90600052602060002001600091509150505481565b6001546001600160a01b031633146105885760405162461bcd60e51b815260040161057f9061218d565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd91906121c2565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061062c84611486565b909250905061063c81600a6122de565b6001600160a01b038516600090815260066020908152604080832033845290915290205461066b9084906122ea565b610675919061231f565b949350505050565b6001546001600160a01b031633146106a75760405162461bcd60e51b815260040161057f9061218d565b60005b6001600160a01b0382166000908152600860205260409020548110156105fd576001600160a01b03821660009081526008602052604081208054839081106106f4576106f4612333565b60009182526020822001546001600160a01b0316915061071482856119e1565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906121c2565b505050808061079b90612349565b9150506106aa565b600981815481106107b357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107f75760405162461bcd60e51b815260040161057f9061218d565b600260045460ff1660028111156108105761081061210a565b146108555760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60105461086a906001600160a01b0316611429565b6108b25760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6010546001600160a01b039081166000908152600e60205260409020541661092e5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b606482015260840161057f565b6010546001600160a01b039081166000818152600e6020908152604080832054600a909252918290205491516323b872dd60e01b8152336004820152931660248401526044830152906323b872dd906064016020604051808303816000875af115801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906121c2565b506010546001600160a01b03166000908152600a602052604081208190555b6010546001600160a01b0316600090815260086020526040902054811015610a8e576010546001600160a01b03166000908152600860205260408120805483908110610a3057610a30612333565b6000918252602080832090910154601080546001600160a01b0390811685526006845260408086209382168087529385528086208690559154168452600b835280842091845291528120555080610a8681612349565b9150506109e2565b50600f80546001600160a01b0319169055601080546001600160a01b039081166000908152600c60209081526040808320839055805183815280830180835295549094168352600890915290209051610ae79290611fa6565b5060408051600080825260208083018085526010546001600160a01b03168352600d9091529290209051610b1b929061200b565b50601080546001600160a01b03166000908152600e6020526040902080546001600160a01b03199081169091558154169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610b8d5760405162461bcd60e51b815260040161057f9061218d565b610b976000611a67565b565b6001546001600160a01b03163314610bc35760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b600f80546001600160a01b0319166001600160a01b038316179055600254600354600091610c1e91611ab9565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c5191815260200190565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd55760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161057f565b6105fd8282611c30565b60086020528160005260406000208181548110610cfb57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610d415760405162461bcd60e51b815260040161057f9061218d565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610dac57610dac61210a565b1480610dce5750600160045460ff166002811115610dcc57610dcc61210a565b145b610e2f5760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b606482015260840161057f565b6001600160a01b0381166000908152600660209081526040808320338452909152902054821115610eae5760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b606482015260840161057f565b6001600160a01b0381166000908152600b6020908152604080832033845290915290205415610f2d5760405162461bcd60e51b815260206004820152602560248201527f596f75206472657720796f757220636172642c20796f752063616e277420726560448201526466756e642160d81b606482015260840161057f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e91906121c2565b506001600160a01b0381166000908152600660209081526040808320338452909152902054610fce908390612364565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a909152205461100a908390612364565b6001600160a01b0382166000908152600a602090815260408083209390935560068152828220338352905220546105fd576105fd8133611da7565b6001546000906001600160a01b031633146110725760405162461bcd60e51b815260040161057f9061218d565b6004805460ff191660021790556010546001600160a01b031615611100576040805162461bcd60e51b81526020600482015260248101919091527f4265666f72652067616d65206973206e6f74206f766572207965742c206f776e60448201527f6572206861766520746f207061792072657761726420746f2077696e6e657221606482015260840161057f565b61110982611f0f565b6111645760405162461bcd60e51b815260206004820152602660248201527f416c6c207061727469636970616e7473206e6565647320746f2064726177206160448201526520636172642160d01b606482015260840161057f565b6000805b6001600160a01b0384166000908152600d602052604090205481101561134c576001600160a01b0384166000908152600d602052604090208054839190839081106111b5576111b5612333565b90600052602060002001541115611270576001600160a01b0384166000908152600d602052604090208054829081106111f0576111f0612333565b9060005260206000200154915060086000856001600160a01b03166001600160a01b03168152602001908152602001600020818154811061123357611233612333565b60009182526020808320909101546001600160a01b038781168452600e909252604090922080546001600160a01b0319169190921617905561133a565b6001600160a01b0384166000908152600d6020526040902080548391908390811061129d5761129d612333565b9060005260206000200154141561133a5760006112bb60028461237b565b905080611329576001600160a01b03851660009081526008602052604090208054839081106112ec576112ec612333565b60009182526020808320909101546001600160a01b038881168452600e909252604090922080546001600160a01b03191691909216179055611338565b8060011415611338575061133a565b505b8061134481612349565b915050611168565b5050601080546001600160a01b0319166001600160a01b038481169182179092556000908152600e60205260409020541690505b919050565b6001546001600160a01b031633146113af5760405162461bcd60e51b815260040161057f9061218d565b600160045460ff1660028111156113c8576113c861210a565b146114155760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d65207374617465207965742100604482015260640161057f565b600480546000919060ff1916600183610b5c565b60008060095481101561148057826001600160a01b03166009828154811061145357611453612333565b6000918252602090912001546001600160a01b031614156114775750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa1580156114e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b91906123c1565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612411565b919760ff909216965090945050505050565b600082116115d75760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e203000000000000000604482015260640161057f565b6115e081611429565b6116285760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6001600160a01b0381166000908152600860205260409020546005116116b65760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e0000000000000000606482015260840161057f565b600060045460ff1660028111156116cf576116cf61210a565b1461171c5760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c6520000000000000604482015260640161057f565b6004546001600160a01b038281166101009092041614156117b8576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b291906121c2565b50611831565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f91906121c2565b505b6001600160a01b038116600090815260066020908152604080832033845290915290205461186090839061238f565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600890915220546118b5576001600160a01b0381166000908152600a602052604090208290556118f3565b6001600160a01b0381166000908152600a60205260409020546118d990839061238f565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b0316600081815260086020908152604080832080546001810182559084528284200180546001600160a01b03191633908117909155938352600b82528083209383529290529081205550565b6001546001600160a01b031633146119705760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b0381166119d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b6119de81611a67565b50565b6001600160a01b0380821660009081526006602090815260408220928516825291909152600080611a1184611486565b9092509050611a2181600a6122de565b6001600160a01b038086166000908152600660209081526040808320938a1683529290522054611a529084906122ea565b611a5c919061231f565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611b29929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b5693929190612434565b6020604051808303816000875af1158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9991906121c2565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611bf390600161238f565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120610675565b600060045460ff166002811115611c4957611c4961210a565b14611c8e5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60008111611cd15760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b604482015260640161057f565b60118190556000611ce3600e8361237b565b905080611cee575060015b600f546001600160a01b03166000908152600860209081526040808320600c90925282205481548110611d2357611d23612333565b6000918252602080832090910154600f80546001600160a01b039081168552600b84526040808620938216808752938552808620889055825482168652600d85528086208054600181810183559188528688200189905592549091168552600c9093529183208054919450919290611d9c90849061238f565b909155505050505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611e2f576001600160a01b03848116600090815260086020526040902080549185169183908110611dfa57611dfa612333565b6000918252602090912001546001600160a01b03161415611e1d57809150611e2f565b80611e2781612349565b915050611dab565b50805b6001600160a01b038416600090815260086020526040902054611e5790600190612364565b811015611f09576001600160a01b0384166000908152600860205260409020611e8182600161238f565b81548110611e9157611e91612333565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611ece57611ece612333565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611f0181612349565b915050611e32565b50505050565b6001600160a01b038116600090815260086020526040812054819015611480576001600160a01b0383166000908152600860205260408120805483908110611f5957611f59612333565b60009182526020808320909101546001600160a01b038781168452600b835260408085209190921680855292529091205490915015611f9c575060019392505050565b5060009392505050565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611fc6565b50612007929150612046565b5090565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182559160200191906001019061202b565b5b808211156120075760008155600101612047565b80356001600160a01b038116811461138057600080fd5b6000806040838503121561208557600080fd5b61208e8361205b565b946020939093013593505050565b6000602082840312156120ae57600080fd5b5035919050565b6000602082840312156120c757600080fd5b6120d08261205b565b9392505050565b600080604083850312156120ea57600080fd5b6120f38361205b565b91506121016020840161205b565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061214257634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561215b57600080fd5b50508035926020909101359150565b6000806040838503121561217d57600080fd5b823591506121016020840161205b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156121d457600080fd5b815180151581146120d057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561223557816000190482111561221b5761221b6121e4565b8085161561222857918102915b93841c93908002906121ff565b509250929050565b60008261224c57506001611a61565b8161225957506000611a61565b816001811461226f576002811461227957612295565b6001915050611a61565b60ff84111561228a5761228a6121e4565b50506001821b611a61565b5060208310610133831016604e8410600b84101617156122b8575081810a611a61565b6122c283836121fa565b80600019048211156122d6576122d66121e4565b029392505050565b60006120d0838361223d565b6000816000190483118215151615612304576123046121e4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261232e5761232e612309565b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561235d5761235d6121e4565b5060010190565b600082821015612376576123766121e4565b500390565b60008261238a5761238a612309565b500690565b600082198211156123a2576123a26121e4565b500190565b805169ffffffffffffffffffff8116811461138057600080fd5b600080600080600060a086880312156123d957600080fd5b6123e2866123a7565b9450602086015193506040860151925060608601519150612405608087016123a7565b90509295509295909350565b60006020828403121561242357600080fd5b815160ff811681146120d057600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156124765785810183015185820160800152820161245a565b81811115612488576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220a55600b326c55055bf5ae066b99420e8f5556d5b741430f89f32f211ae41833f64736f6c634300080a0033",
  "bytecodeSha1": "a7443b72b3fb3cf2faa2121a4a3cb56ce0c2d001",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CardGame",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "108": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "109": [
            9749,
            9777,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {
        "CardGame.betMoney": {
          "99": [
            7239,
            7250,
            true
          ],
          "100": [
            7298,
            7320,
            true
          ],
          "101": [
            7507,
            7536,
            true
          ],
          "102": [
            7803,
            7828,
            false
          ]
        },
        "CardGame.endGame": {
          "85": [
            11824,
            11867,
            true
          ],
          "86": [
            11932,
            11961,
            true
          ]
        },
        "CardGame.fulfillRandomness": {
          "103": [
            9724,
            9753,
            true
          ],
          "104": [
            9797,
            9812,
            true
          ],
          "105": [
            9928,
            9943,
            false
          ]
        },
        "CardGame.getWinner": {
          "91": [
            10703,
            10730,
            true
          ],
          "92": [
            10851,
            10874,
            true
          ],
          "93": [
            11251,
            11279,
            false
          ],
          "94": [
            11405,
            11434,
            false
          ],
          "95": [
            11499,
            11509,
            false
          ],
          "96": [
            11597,
            11607,
            false
          ]
        },
        "CardGame.playerIsAllowed": {
          "107": [
            3756,
            3794,
            false
          ]
        },
        "CardGame.removeFromPlayers": {
          "106": [
            5820,
            5847,
            false
          ]
        },
        "CardGame.repayBetToken": {
          "87": [
            6198,
            6227,
            true
          ],
          "88": [
            6231,
            6262,
            true
          ],
          "89": [
            6363,
            6407,
            true
          ],
          "90": [
            6499,
            6541,
            true
          ]
        },
        "CardGame.startGame": {
          "97": [
            7023,
            7054,
            true
          ]
        },
        "CardGame.tokenIsAllowed": {
          "98": [
            3421,
            3451,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "64": [
            2131,
            2148
          ],
          "65": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "61": [
            1926,
            1999
          ],
          "62": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "25": [
            9741,
            9813
          ],
          "26": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "66": [
            7888,
            7975
          ],
          "68": [
            8718,
            8757
          ],
          "70": [
            8763,
            8802
          ]
        }
      },
      "4": {
        "VRFRequestIDBase.makeRequestId": {
          "69": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "67": [
            980,
            1058
          ]
        }
      },
      "5": {},
      "7": {
        "CardGame.allowToken": {
          "27": [
            3226,
            3252
          ]
        },
        "CardGame.betMoney": {
          "50": [
            7231,
            7280
          ],
          "51": [
            7290,
            7350
          ],
          "52": [
            7360,
            7489
          ],
          "53": [
            7499,
            7567
          ],
          "54": [
            7844,
            7901
          ],
          "55": [
            8405,
            8468
          ],
          "56": [
            8557,
            8660
          ],
          "57": [
            8717,
            8743
          ],
          "58": [
            8774,
            8819
          ],
          "59": [
            8839,
            8871
          ],
          "60": [
            8881,
            8922
          ]
        },
        "CardGame.drawCards": {
          "23": [
            9017,
            9043
          ],
          "24": [
            9115,
            9150
          ]
        },
        "CardGame.endGame": {
          "6": [
            11803,
            11914
          ],
          "7": [
            11924,
            11991
          ],
          "8": [
            12001,
            12124
          ],
          "9": [
            12191,
            12331
          ],
          "10": [
            12433,
            12460
          ],
          "11": [
            12697,
            12737
          ],
          "12": [
            12751,
            12795
          ],
          "13": [
            12605,
            12612
          ],
          "14": [
            12815,
            12845
          ],
          "15": [
            12855,
            12887
          ],
          "16": [
            12897,
            12938
          ],
          "17": [
            12948,
            12993
          ],
          "18": [
            13003,
            13037
          ],
          "19": [
            13047,
            13073
          ],
          "20": [
            13083,
            13113
          ]
        },
        "CardGame.fulfillRandomness": {
          "71": [
            9716,
            9779
          ],
          "72": [
            9789,
            9833
          ],
          "73": [
            9843,
            9867
          ],
          "74": [
            9959,
            9973
          ],
          "75": [
            10102,
            10159
          ],
          "76": [
            10169,
            10216
          ],
          "77": [
            10226,
            10263
          ]
        },
        "CardGame.getPlayerSingleTokenValue": {
          "3": [
            5461,
            5530
          ]
        },
        "CardGame.getTokenValue": {
          "49": [
            4551,
            4584
          ]
        },
        "CardGame.getUserSingleTokenValue": {
          "63": [
            4955,
            5019
          ]
        },
        "CardGame.getWinner": {
          "35": [
            10472,
            10514
          ],
          "36": [
            10682,
            10820
          ],
          "37": [
            10830,
            10938
          ],
          "38": [
            11299,
            11327
          ],
          "39": [
            11345,
            11380
          ],
          "40": [
            11533,
            11568
          ],
          "41": [
            11631,
            11639
          ],
          "42": [
            11228,
            11231
          ],
          "43": [
            11691,
            11713
          ],
          "44": [
            11723,
            11744
          ]
        },
        "CardGame.issueTokens": {
          "4": [
            3059,
            3103
          ],
          "5": [
            2899,
            2906
          ]
        },
        "CardGame.playerIsAllowed": {
          "83": [
            3814,
            3825
          ],
          "84": [
            3864,
            3876
          ]
        },
        "CardGame.removeFromPlayers": {
          "78": [
            5867,
            5876
          ],
          "79": [
            5894,
            5899
          ],
          "80": [
            5797,
            5800
          ],
          "81": [
            6008,
            6051
          ],
          "82": [
            5989,
            5992
          ]
        },
        "CardGame.repayBetToken": {
          "28": [
            6177,
            6332
          ],
          "29": [
            6342,
            6468
          ],
          "30": [
            6478,
            6604
          ],
          "31": [
            6614,
            6658
          ],
          "32": [
            6668,
            6771
          ],
          "33": [
            6781,
            6826
          ],
          "34": [
            6894,
            6931
          ]
        },
        "CardGame.sendMSCToken": {
          "2": [
            2686,
            2724
          ]
        },
        "CardGame.setPriceFeedContract": {
          "22": [
            4026,
            4062
          ]
        },
        "CardGame.startGame": {
          "45": [
            7002,
            7111
          ],
          "46": [
            7122,
            7150
          ]
        },
        "CardGame.tokenIsAllowed": {
          "47": [
            3471,
            3482
          ],
          "48": [
            3510,
            3522
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "Openzeppelin/openzeppelin-contracts@4.2.0/Context",
    "Openzeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "Openzeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102065760003560e01c80638ae43b541161011a578063bd9c47e3116100ad578063ddca3f431161007c578063ddca3f43146104ba578063f1c5d6c2146104c3578063f1d76a5f146104eb578063f2fde38b146104fe578063fe05cc9c1461051157600080fd5b8063bd9c47e314610446578063cd5ea4f81461046f578063d65ab5f21461048f578063dd5b84671461049757600080fd5b80639c753122116100e95780639c753122146103fa578063b53472ef1461040d578063b81baa5914610420578063b90c899d1461043357600080fd5b80638ae43b54146103a95780638b42eb7c146103c35780638da5cb5b146103d657806394985ddd146103e757600080fd5b806345d7c3b91161019d57806366ce6dab1161016c57806366ce6dab146103435780636cbc2ded1461036e578063715018a614610376578063877dd39d1461037e57806387cd6ad21461039157600080fd5b806345d7c3b9146102f45780635e5f2e261461030757806361728f391461031a57806366a1df651461032357600080fd5b80632ad95786116101d95780632ad957861461028457806336013189146102ad5780633fdb144b146102b65780633ff54c71146102e157600080fd5b806305f3bbd91461020b5780630b26083c1461023157806324398a85146102465780632521cc4614610259575b600080fd5b61021e610219366004612072565b610524565b6040519081526020015b60405180910390f35b61024461023f36600461209c565b610555565b005b61021e6102543660046120b5565b610601565b60105461026c906001600160a01b031681565b6040516001600160a01b039091168152602001610228565b61026c6102923660046120b5565b600e602052600090815260409020546001600160a01b031681565b61021e60115481565b61021e6102c43660046120d7565b600b60209081526000928352604080842090915290825290205481565b6102446102ef3660046120b5565b61067d565b600f5461026c906001600160a01b031681565b61026c61031536600461209c565b6107a3565b61021e60025481565b61021e6103313660046120b5565b600a6020526000908152604090205481565b61021e6103513660046120d7565b600660209081526000928352604080842090915290825290205481565b6102446107cd565b610244610b63565b61024461038c3660046120d7565b610b99565b60045461026c9061010090046001600160a01b031681565b6004546103b69060ff1681565b6040516102289190612120565b6102446103d13660046120b5565b610bf1565b6001546001600160a01b031661026c565b6102446103f5366004612148565b610c5d565b61026c610408366004612072565b610cdf565b61024461041b3660046120b5565b610d17565b61024461042e36600461216a565b610d93565b61026c6104413660046120b5565b611045565b61026c6104543660046120b5565b6007602052600090815260409020546001600160a01b031681565b61021e61047d3660046120b5565b600c6020526000908152604090205481565b610244611385565b6104aa6104a53660046120b5565b611429565b6040519015158152602001610228565b61021e60035481565b6104d66104d13660046120b5565b611486565b60408051928352602083019190915201610228565b6102446104f936600461216a565b611587565b61024461050c3660046120b5565b611946565b60055461026c906001600160a01b031681565b600d602052816000526040600020818154811061054057600080fd5b90600052602060002001600091509150505481565b6001546001600160a01b031633146105885760405162461bcd60e51b815260040161057f9061218d565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd91906121c2565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061062c84611486565b909250905061063c81600a6122de565b6001600160a01b038516600090815260066020908152604080832033845290915290205461066b9084906122ea565b610675919061231f565b949350505050565b6001546001600160a01b031633146106a75760405162461bcd60e51b815260040161057f9061218d565b60005b6001600160a01b0382166000908152600860205260409020548110156105fd576001600160a01b03821660009081526008602052604081208054839081106106f4576106f4612333565b60009182526020822001546001600160a01b0316915061071482856119e1565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906121c2565b505050808061079b90612349565b9150506106aa565b600981815481106107b357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107f75760405162461bcd60e51b815260040161057f9061218d565b600260045460ff1660028111156108105761081061210a565b146108555760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60105461086a906001600160a01b0316611429565b6108b25760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6010546001600160a01b039081166000908152600e60205260409020541661092e5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b606482015260840161057f565b6010546001600160a01b039081166000818152600e6020908152604080832054600a909252918290205491516323b872dd60e01b8152336004820152931660248401526044830152906323b872dd906064016020604051808303816000875af115801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906121c2565b506010546001600160a01b03166000908152600a602052604081208190555b6010546001600160a01b0316600090815260086020526040902054811015610a8e576010546001600160a01b03166000908152600860205260408120805483908110610a3057610a30612333565b6000918252602080832090910154601080546001600160a01b0390811685526006845260408086209382168087529385528086208690559154168452600b835280842091845291528120555080610a8681612349565b9150506109e2565b50600f80546001600160a01b0319169055601080546001600160a01b039081166000908152600c60209081526040808320839055805183815280830180835295549094168352600890915290209051610ae79290611fa6565b5060408051600080825260208083018085526010546001600160a01b03168352600d9091529290209051610b1b929061200b565b50601080546001600160a01b03166000908152600e6020526040902080546001600160a01b03199081169091558154169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610b8d5760405162461bcd60e51b815260040161057f9061218d565b610b976000611a67565b565b6001546001600160a01b03163314610bc35760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b600f80546001600160a01b0319166001600160a01b038316179055600254600354600091610c1e91611ab9565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c5191815260200190565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd55760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161057f565b6105fd8282611c30565b60086020528160005260406000208181548110610cfb57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610d415760405162461bcd60e51b815260040161057f9061218d565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610dac57610dac61210a565b1480610dce5750600160045460ff166002811115610dcc57610dcc61210a565b145b610e2f5760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b606482015260840161057f565b6001600160a01b0381166000908152600660209081526040808320338452909152902054821115610eae5760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b606482015260840161057f565b6001600160a01b0381166000908152600b6020908152604080832033845290915290205415610f2d5760405162461bcd60e51b815260206004820152602560248201527f596f75206472657720796f757220636172642c20796f752063616e277420726560448201526466756e642160d81b606482015260840161057f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e91906121c2565b506001600160a01b0381166000908152600660209081526040808320338452909152902054610fce908390612364565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a909152205461100a908390612364565b6001600160a01b0382166000908152600a602090815260408083209390935560068152828220338352905220546105fd576105fd8133611da7565b6001546000906001600160a01b031633146110725760405162461bcd60e51b815260040161057f9061218d565b6004805460ff191660021790556010546001600160a01b031615611100576040805162461bcd60e51b81526020600482015260248101919091527f4265666f72652067616d65206973206e6f74206f766572207965742c206f776e60448201527f6572206861766520746f207061792072657761726420746f2077696e6e657221606482015260840161057f565b61110982611f0f565b6111645760405162461bcd60e51b815260206004820152602660248201527f416c6c207061727469636970616e7473206e6565647320746f2064726177206160448201526520636172642160d01b606482015260840161057f565b6000805b6001600160a01b0384166000908152600d602052604090205481101561134c576001600160a01b0384166000908152600d602052604090208054839190839081106111b5576111b5612333565b90600052602060002001541115611270576001600160a01b0384166000908152600d602052604090208054829081106111f0576111f0612333565b9060005260206000200154915060086000856001600160a01b03166001600160a01b03168152602001908152602001600020818154811061123357611233612333565b60009182526020808320909101546001600160a01b038781168452600e909252604090922080546001600160a01b0319169190921617905561133a565b6001600160a01b0384166000908152600d6020526040902080548391908390811061129d5761129d612333565b9060005260206000200154141561133a5760006112bb60028461237b565b905080611329576001600160a01b03851660009081526008602052604090208054839081106112ec576112ec612333565b60009182526020808320909101546001600160a01b038881168452600e909252604090922080546001600160a01b03191691909216179055611338565b8060011415611338575061133a565b505b8061134481612349565b915050611168565b5050601080546001600160a01b0319166001600160a01b038481169182179092556000908152600e60205260409020541690505b919050565b6001546001600160a01b031633146113af5760405162461bcd60e51b815260040161057f9061218d565b600160045460ff1660028111156113c8576113c861210a565b146114155760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d65207374617465207965742100604482015260640161057f565b600480546000919060ff1916600183610b5c565b60008060095481101561148057826001600160a01b03166009828154811061145357611453612333565b6000918252602090912001546001600160a01b031614156114775750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa1580156114e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b91906123c1565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612411565b919760ff909216965090945050505050565b600082116115d75760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e203000000000000000604482015260640161057f565b6115e081611429565b6116285760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6001600160a01b0381166000908152600860205260409020546005116116b65760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e0000000000000000606482015260840161057f565b600060045460ff1660028111156116cf576116cf61210a565b1461171c5760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c6520000000000000604482015260640161057f565b6004546001600160a01b038281166101009092041614156117b8576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b291906121c2565b50611831565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f91906121c2565b505b6001600160a01b038116600090815260066020908152604080832033845290915290205461186090839061238f565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600890915220546118b5576001600160a01b0381166000908152600a602052604090208290556118f3565b6001600160a01b0381166000908152600a60205260409020546118d990839061238f565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b0316600081815260086020908152604080832080546001810182559084528284200180546001600160a01b03191633908117909155938352600b82528083209383529290529081205550565b6001546001600160a01b031633146119705760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b0381166119d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b6119de81611a67565b50565b6001600160a01b0380821660009081526006602090815260408220928516825291909152600080611a1184611486565b9092509050611a2181600a6122de565b6001600160a01b038086166000908152600660209081526040808320938a1683529290522054611a529084906122ea565b611a5c919061231f565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611b29929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b5693929190612434565b6020604051808303816000875af1158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9991906121c2565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611bf390600161238f565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120610675565b600060045460ff166002811115611c4957611c4961210a565b14611c8e5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60008111611cd15760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b604482015260640161057f565b60118190556000611ce3600e8361237b565b905080611cee575060015b600f546001600160a01b03166000908152600860209081526040808320600c90925282205481548110611d2357611d23612333565b6000918252602080832090910154600f80546001600160a01b039081168552600b84526040808620938216808752938552808620889055825482168652600d85528086208054600181810183559188528688200189905592549091168552600c9093529183208054919450919290611d9c90849061238f565b909155505050505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611e2f576001600160a01b03848116600090815260086020526040902080549185169183908110611dfa57611dfa612333565b6000918252602090912001546001600160a01b03161415611e1d57809150611e2f565b80611e2781612349565b915050611dab565b50805b6001600160a01b038416600090815260086020526040902054611e5790600190612364565b811015611f09576001600160a01b0384166000908152600860205260409020611e8182600161238f565b81548110611e9157611e91612333565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611ece57611ece612333565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611f0181612349565b915050611e32565b50505050565b6001600160a01b038116600090815260086020526040812054819015611480576001600160a01b0383166000908152600860205260408120805483908110611f5957611f59612333565b60009182526020808320909101546001600160a01b038781168452600b835260408085209190921680855292529091205490915015611f9c575060019392505050565b5060009392505050565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611fc6565b50612007929150612046565b5090565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182559160200191906001019061202b565b5b808211156120075760008155600101612047565b80356001600160a01b038116811461138057600080fd5b6000806040838503121561208557600080fd5b61208e8361205b565b946020939093013593505050565b6000602082840312156120ae57600080fd5b5035919050565b6000602082840312156120c757600080fd5b6120d08261205b565b9392505050565b600080604083850312156120ea57600080fd5b6120f38361205b565b91506121016020840161205b565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061214257634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561215b57600080fd5b50508035926020909101359150565b6000806040838503121561217d57600080fd5b823591506121016020840161205b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156121d457600080fd5b815180151581146120d057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561223557816000190482111561221b5761221b6121e4565b8085161561222857918102915b93841c93908002906121ff565b509250929050565b60008261224c57506001611a61565b8161225957506000611a61565b816001811461226f576002811461227957612295565b6001915050611a61565b60ff84111561228a5761228a6121e4565b50506001821b611a61565b5060208310610133831016604e8410600b84101617156122b8575081810a611a61565b6122c283836121fa565b80600019048211156122d6576122d66121e4565b029392505050565b60006120d0838361223d565b6000816000190483118215151615612304576123046121e4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261232e5761232e612309565b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561235d5761235d6121e4565b5060010190565b600082821015612376576123766121e4565b500390565b60008261238a5761238a612309565b500690565b600082198211156123a2576123a26121e4565b500190565b805169ffffffffffffffffffff8116811461138057600080fd5b600080600080600060a086880312156123d957600080fd5b6123e2866123a7565b9450602086015193506040860151925060608601519150612405608087016123a7565b90509295509295909350565b60006020828403121561242357600080fd5b815160ff811681146120d057600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156124765785810183015185820160800152820161245a565b81811115612488576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220a55600b326c55055bf5ae066b99420e8f5556d5b741430f89f32f211ae41833f64736f6c634300080a0033",
  "deployedSourceMap": "444:12678:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:48;;;;;;:::i;:::-;;:::i;:::-;;;597:25:8;;;585:2;570:18;1930:48:7;;;;;;;;2620:153;;;;;;:::i;:::-;;:::i;:::-;;5079:458;;;;;;:::i;:::-;;:::i;2339:41::-;;;;;-1:-1:-1;;;;;2339:41:7;;;;;;-1:-1:-1;;;;;1173:32:8;;;1155:51;;1143:2;1128:18;2339:41:7;1009:203:8;2084:41:7;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2084:41:7;;;2386:25;;;;;;1729:72;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2779:378;;;;;;:::i;:::-;;:::i;2288:45::-;;;;;-1:-1:-1;;;;;2288:45:7;;;1520:30;;;;;;:::i;:::-;;:::i;496:22::-;;;;;;1628:43;;;;;;:::i;:::-;;;;;;;;;;;;;;1223:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11757:1363;;;:::i;1605:92:0:-;;;:::i;3913:156:7:-;;;;;;:::i;:::-;;:::i;718:30::-;;;;;;;;-1:-1:-1;;;;;718:30:7;;;684:28;;;;;;;;;;;;;;;;:::i;8965:537::-;;;;;;:::i;:::-;;:::i;973:85:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;973:85;;9639:225:3;;;;;;:::i;:::-;;:::i;1470:44:7:-;;;;;;:::i;:::-;;:::i;3163:96::-;;;;;;:::i;:::-;;:::i;6104:844::-;;;;;;:::i;:::-;;:::i;10392:1359::-;;;;;;:::i;:::-;;:::i;1339:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1339:50:7;;;1840:48;;;;;;:::i;:::-;;;;;;;;;;;;;;6954:203;;;:::i;3265:274::-;;;;;;:::i;:::-;;:::i;:::-;;;2819:14:8;;2812:22;2794:41;;2782:2;2767:18;3265:274:7;2654:187:8;524:18:7;;;;;;4075:516;;;;;;:::i;:::-;;:::i;:::-;;;;3020:25:8;;;3076:2;3061:18;;3054:34;;;;2993:18;4075:516:7;2846:248:8;7163:1796:7;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;754:22:7:-;;;;;-1:-1:-1;;;;;754:22:7;;;1930:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2620:153::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;2686:8:7::1;::::0;:38:::1;::::0;-1:-1:-1;;;2686:38:7;;2704:10:::1;2686:38;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;-1:-1:-1;;;;;2686:8:7;;::::1;::::0;:17:::1;::::0;3830:18:8;;2686:38:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2620:153:::0;:::o;5079:458::-;-1:-1:-1;;;;;5202:21:7;;5175:7;5202:21;;;:13;:21;;;;;;;5224:10;5202:33;;;;5285:13;5300:16;5320:21;5334:6;5320:13;:21::i;:::-;5284:57;;-1:-1:-1;5284:57:7;-1:-1:-1;5516:12:7;5284:57;5516:2;:12;:::i;:::-;-1:-1:-1;;;;;5470:21:7;;;;;;:13;:21;;;;;;;;5492:10;5470:33;;;;;;;;:41;;5506:5;;5470:41;:::i;:::-;5469:60;;;;:::i;:::-;5461:69;5079:458;-1:-1:-1;;;;5079:458:7:o;2779:378::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2848:13:7::1;2843:308;-1:-1:-1::0;;;;;2875:15:7;::::1;;::::0;;;:7:::1;:15;::::0;;;;:22;2867:30;::::1;2843:308;;;-1:-1:-1::0;;;;;2942:15:7;::::1;2922:17;2942:15:::0;;;:7:::1;:15;::::0;;;;:22;;2958:5;;2942:22;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2942:22:7::1;::::0;-1:-1:-1;3003:42:7::1;2942:22:::0;3038:6;3003:23:::1;:42::i;:::-;3059:8;::::0;:44:::1;::::0;-1:-1:-1;;;3059:44:7;;-1:-1:-1;;;;;3875:32:8;;;3059:44:7::1;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;2978:67:7;;-1:-1:-1;3059:8:7;::::1;::::0;:17:::1;::::0;3830:18:8;;3059:44:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2908:243;;2899:7;;;;;:::i;:::-;;;;2843:308;;1520:30:::0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1520:30:7;;-1:-1:-1;1520:30:7;:::o;11757:1363::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;11838:29:7::1;11824:10;::::0;::::1;;:43;::::0;::::1;;;;;;:::i;:::-;;11803:111;;;::::0;-1:-1:-1;;;11803:111:7;;6654:2:8;11803:111:7::1;::::0;::::1;6636:21:8::0;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;11803:111:7::1;6452:345:8::0;11803:111:7::1;11947:13;::::0;11932:29:::1;::::0;-1:-1:-1;;;;;11947:13:7::1;11932:14;:29::i;:::-;11924:67;;;::::0;-1:-1:-1;;;11924:67:7;;7004:2:8;11924:67:7::1;::::0;::::1;6986:21:8::0;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;11924:67:7::1;6802:349:8::0;11924:67:7::1;12029:13;::::0;-1:-1:-1;;;;;12029:13:7;;::::1;12055:1;12022:21:::0;;;:6:::1;:21;::::0;;;;;::::1;12001:123;;;::::0;-1:-1:-1;;;12001:123:7;;7358:2:8;12001:123:7::1;::::0;::::1;7340:21:8::0;7397:2;7377:18;;;7370:30;7436:34;7416:18;;;7409:62;-1:-1:-1;;;7487:18:8;;;7480:39;7536:19;;12001:123:7::1;7156:405:8::0;12001:123:7::1;12198:13;::::0;-1:-1:-1;;;;;12198:13:7;;::::1;;12263:21:::0;;;:6:::1;:21;::::0;;;;;;;;12298:8:::1;:23:::0;;;;;;;;12191:140;;-1:-1:-1;;;12191:140:7;;12239:10:::1;12191:140;::::0;::::1;7806:34:8::0;12263:21:7;::::1;7856:18:8::0;;;7849:43;7908:18;;;7901:34;12198:13:7;12191:34:::1;::::0;7741:18:8;;12191:140:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12442:13:7::1;::::0;-1:-1:-1;;;;;12442:13:7::1;12459:1;12433:23:::0;;;:8:::1;:23;::::0;;;;:27;;;12505:301:::1;12570:13;::::0;-1:-1:-1;;;;;12570:13:7::1;12562:22;::::0;;;:7:::1;:22;::::0;;;;:29;12554:37;::::1;12505:301;;;12662:13;::::0;-1:-1:-1;;;;;12662:13:7::1;12637:14;12654:22:::0;;;:7:::1;:22;::::0;;;;:29;;12677:5;;12654:29;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;12711:13:::1;::::0;;-1:-1:-1;;;;;12711:13:7;;::::1;12697:28:::0;;:13:::1;:28:::0;;;;;;12654:29;;::::1;12697:36:::0;;;;;;;;;:40;;;12769:13;;::::1;12751:32:::0;;:17:::1;:32:::0;;;;;:40;;;;;;;:44;-1:-1:-1;12605:7:7;::::1;::::0;::::1;:::i;:::-;;;;12505:301;;;-1:-1:-1::0;12815:17:7::1;:30:::0;;-1:-1:-1;;;;;;12815:30:7::1;::::0;;12869:13:::1;::::0;;-1:-1:-1;;;;;12869:13:7;;::::1;-1:-1:-1::0;12855:28:7;;;:13:::1;:28;::::0;;;;;;;:32;;;12922:16;;;;;;;::::1;::::0;;;12905:13;;;;::::1;12897:22:::0;;:7:::1;:22:::0;;;;;:41;;::::1;::::0;12922:16;12897:41:::1;:::i;:::-;-1:-1:-1::0;12977:16:7::1;::::0;;12991:1:::1;12977:16:::0;;;::::1;::::0;;::::1;::::0;;;12960:13:::1;::::0;-1:-1:-1;;;;;12960:13:7::1;12948:26:::0;;:11:::1;:26:::0;;;;;;:45;;::::1;::::0;12977:16;12948:45:::1;:::i;:::-;-1:-1:-1::0;13010:13:7::1;::::0;;-1:-1:-1;;;;;13010:13:7::1;13035:1;13003:21:::0;;;:6:::1;:21;::::0;;;;:34;;-1:-1:-1;;;;;;13003:34:7;;::::1;::::0;;;13047:26;;::::1;::::0;;13083:10:::1;:30:::0;;13010:13;;13083:10;-1:-1:-1;;13083:30:7::1;13010:13:::0;;13083:30:::1;;;;;;11757:1363::o:0;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3913:156:7:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4026:23:7;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;4026:36:7::1;::::0;;;::::1;;::::0;;3913:156::o;8965:537::-;9017:17;:26;;-1:-1:-1;;;;;;9017:26:7;-1:-1:-1;;;;;9017:26:7;;;;;9092:7;;9101:3;;-1:-1:-1;;9074:31:7;;:17;:31::i;:::-;9054:51;;9120:30;9140:9;9120:30;;;;597:25:8;;585:2;570:18;;451:177;9120:30:7;;;;;;;;9007:495;8965:537;:::o;9639:225:3:-;9749:10;-1:-1:-1;;;;;9763:14:3;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:3;;8280:2:8;9741:72:3;;;8262:21:8;8319:2;8299:18;;;8292:30;8358:33;8338:18;;;8331:61;8409:18;;9741:72:3;8078:355:8;9741:72:3;9819:40;9837:9;9848:10;9819:17;:40::i;1470:44:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1470:44:7;;-1:-1:-1;1470:44:7;;-1:-1:-1;1470:44:7:o;3163:96::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3226:13:7::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3226:26:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;3226:26:7::1;-1:-1:-1::0;;;;;3226:26:7;;;::::1;::::0;;;::::1;::::0;;3163:96::o;6104:844::-;6212:15;6198:10;;;;:29;;;;;;;;:::i;:::-;;:64;;;-1:-1:-1;6245:17:7;6231:10;;;;:31;;;;;;;;:::i;:::-;;6198:64;6177:155;;;;-1:-1:-1;;;6177:155:7;;8640:2:8;6177:155:7;;;8622:21:8;8679:2;8659:18;;;8652:30;8718:34;8698:18;;;8691:62;-1:-1:-1;;;8769:18:8;;;8762:42;8821:19;;6177:155:7;8438:408:8;6177:155:7;-1:-1:-1;;;;;6363:21:7;;;;;;:13;:21;;;;;;;;6385:10;6363:33;;;;;;;;:44;-1:-1:-1;6363:44:7;6342:126;;;;-1:-1:-1;;;6342:126:7;;9053:2:8;6342:126:7;;;9035:21:8;9092:2;9072:18;;;9065:30;9131:34;9111:18;;;9104:62;-1:-1:-1;;;9182:18:8;;;9175:33;9225:19;;6342:126:7;8851:399:8;6342:126:7;-1:-1:-1;;;;;6499:25:7;;;;;;:17;:25;;;;;;;;6525:10;6499:37;;;;;;;;:42;6478:126;;;;-1:-1:-1;;;6478:126:7;;9457:2:8;6478:126:7;;;9439:21:8;9496:2;9476:18;;;9469:30;9535:34;9515:18;;;9508:62;-1:-1:-1;;;9586:18:8;;;9579:35;9631:19;;6478:126:7;9255:401:8;6478:126:7;6614:44;;-1:-1:-1;;;6614:44:7;;6638:10;6614:44;;;3857:51:8;3924:18;;;3917:34;;;-1:-1:-1;;;;;6614:23:7;;;;;3830:18:8;;6614:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6716:21:7;;;;;;:13;:21;;;;;;;;6738:10;6716:33;;;;;;;;:55;;6764:7;;6716:55;:::i;:::-;-1:-1:-1;;;;;6668:21:7;;;;;;:13;:21;;;;;;;;6690:10;6668:33;;;;;;;:103;;;;6800:16;;;:8;:16;;;;;:26;;6819:7;;6800:26;:::i;:::-;-1:-1:-1;;;;;6781:16:7;;;;;;:8;:16;;;;;;;;:45;;;;6840:13;:21;;;;;6862:10;6840:33;;;;;;6836:106;;6894:37;6912:6;6920:10;6894:17;:37::i;10392:1359::-;1045:6:0;;10453:7:7;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;10472:10:7::1;:42:::0;;-1:-1:-1;;10472:42:7::1;10485:29;10472:42;::::0;;10703:13:::1;::::0;-1:-1:-1;;;;;10703:13:7::1;:27:::0;10682:138:::1;;;::::0;;-1:-1:-1;;;10682:138:7;;9993:2:8;10682:138:7::1;::::0;::::1;9975:21:8::0;10012:18;;;10005:30;;;;10071:34;10051:18;;;10044:62;10142:34;10122:18;;;10115:62;10194:19;;10682:138:7::1;9791:428:8::0;10682:138:7::1;10851:23;10867:6;10851:15;:23::i;:::-;10830:108;;;::::0;-1:-1:-1;;;10830:108:7;;10426:2:8;10830:108:7::1;::::0;::::1;10408:21:8::0;10465:2;10445:18;;;10438:30;10504:34;10484:18;;;10477:62;-1:-1:-1;;;10555:18:8;;;10548:36;10601:19;;10830:108:7::1;10224:402:8::0;10830:108:7::1;11150:11;11181:9:::0;11176:506:::1;-1:-1:-1::0;;;;;11200:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:26;11196:30;::::1;11176:506;;;-1:-1:-1::0;;;;;11251:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11276:3;;11251:19;11271:1;;11251:22;::::1;;;;;:::i;:::-;;;;;;;;;:28;11247:425;;;-1:-1:-1::0;;;;;11305:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11325:1;;11305:22;::::1;;;;;:::i;:::-;;;;;;;;;11299:28;;11362:7;:15;11370:6;-1:-1:-1::0;;;;;11362:15:7::1;-1:-1:-1::0;;;;;11362:15:7::1;;;;;;;;;;;;11378:1;11362:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;11345:14:7;;::::1;::::0;;:6:::1;:14:::0;;;;;;;:35;;-1:-1:-1;;;;;;11345:35:7::1;11362:18:::0;;;::::1;11345:35;::::0;;11247:425:::1;;;-1:-1:-1::0;;;;;11405:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11431:3;;11405:19;11425:1;;11405:22;::::1;;;;;:::i;:::-;;;;;;;;;:29;11401:271;;;11454:13;11470:7;11476:1;11470:3:::0;:7:::1;:::i;:::-;11454:23:::0;-1:-1:-1;11499:10:7;11495:163:::1;;-1:-1:-1::0;;;;;11550:15:7;::::1;;::::0;;;:7:::1;:15;::::0;;;;:18;;11566:1;;11550:18;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;11533:14:7;;::::1;::::0;;:6:::1;:14:::0;;;;;;;:35;;-1:-1:-1;;;;;;11533:35:7::1;11550:18:::0;;;::::1;11533:35;::::0;;11495:163:::1;;;11597:5;11606:1;11597:10;11593:65;;;11631:8;;;11593:65;11436:236;11401:271;11228:3:::0;::::1;::::0;::::1;:::i;:::-;;;;11176:506;;;-1:-1:-1::0;;11691:13:7::1;:22:::0;;-1:-1:-1;;;;;;11691:22:7::1;-1:-1:-1::0;;;;;11691:22:7;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;11730:14:7;;;:6:::1;:14;::::0;;;;;::::1;::::0;-1:-1:-1;1255:1:0::1;10392:1359:7::0;;;:::o;6954:203::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;7037:17:7::1;7023:10;::::0;::::1;;:31;::::0;::::1;;;;;;:::i;:::-;;7002:109;;;::::0;-1:-1:-1;;;7002:109:7;;10950:2:8;7002:109:7::1;::::0;::::1;10932:21:8::0;10989:2;10969:18;;;10962:30;11028:33;11008:18;;;11001:61;11079:18;;7002:109:7::1;10748:355:8::0;7002:109:7::1;7122:10;:28:::0;;7135:15:::1;::::0;7122:10;-1:-1:-1;;7122:28:7::1;::::0;7135:15;7122:28:::1;::::0;3265:274;3321:4;;3369:13;:20;3361:28;;3337:196;;;3445:6;-1:-1:-1;;;;;3421:30:7;:13;3435:5;3421:20;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3421:20:7;:30;3417:80;;;-1:-1:-1;3478:4:7;;3265:274;-1:-1:-1;;3265:274:7:o;3417:80::-;-1:-1:-1;3517:5:7;;3265:274;-1:-1:-1;;3265:274:7:o;3337:196::-;;3265:274;;;:::o;4075:516::-;-1:-1:-1;;;;;4218:23:7;;;4159:7;4218:23;;;:15;:23;;;;;;;4456:27;;-1:-1:-1;;;4456:27:7;;;;4159:7;;;;4218:23;;;;;4159:7;;4218:23;;4456:25;;:27;;;;;;;;;;;;;;;4218:23;4456:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4431:52;;;;;;4493:16;4520:9;-1:-1:-1;;;;;4520:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4567:5;;4512:29;;;;;-1:-1:-1;4567:5:7;;-1:-1:-1;;;;;4075:516:7:o;7163:1796::-;7249:1;7239:7;:11;7231:49;;;;-1:-1:-1;;;7231:49:7;;12383:2:8;7231:49:7;;;12365:21:8;12422:2;12402:18;;;12395:30;12461:27;12441:18;;;12434:55;12506:18;;7231:49:7;12181:349:8;7231:49:7;7298:22;7313:6;7298:14;:22::i;:::-;7290:60;;;;-1:-1:-1;;;7290:60:7;;7004:2:8;7290:60:7;;;6986:21:8;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;7290:60:7;6802:349:8;7290:60:7;-1:-1:-1;;;;;7381:15:7;;;;;;:7;:15;;;;;:22;7406:1;-1:-1:-1;7360:129:7;;;;-1:-1:-1;;;7360:129:7;;12737:2:8;7360:129:7;;;12719:21:8;12776:2;12756:18;;;12749:30;12815:34;12795:18;;;12788:62;12886:26;12866:18;;;12859:54;12930:19;;7360:129:7;12535:420:8;7360:129:7;7521:15;7507:10;;;;:29;;;;;;;;:::i;:::-;;7499:68;;;;-1:-1:-1;;;7499:68:7;;13162:2:8;7499:68:7;;;13144:21:8;13201:2;13181:18;;;13174:30;13240:28;13220:18;;;13213:56;13286:18;;7499:68:7;12960:350:8;7499:68:7;7813:15;;-1:-1:-1;;;;;7803:25:7;;;7813:15;;;;;7803:25;7799:749;;;7844:8;;:57;;-1:-1:-1;;;7844:57:7;;7866:10;7844:57;;;7806:34:8;7886:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;7844:8:7;;;;:21;;7741:18:8;;7844:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7799:749;;;8405:63;;-1:-1:-1;;;8405:63:7;;8433:10;8405:63;;;7806:34:8;8453:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;8405:27:7;;;;;7741:18:8;;8405:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7799:749;-1:-1:-1;;;;;8605:21:7;;;;;;:13;:21;;;;;;;;8627:10;8605:33;;;;;;;;:55;;8653:7;;8605:55;:::i;:::-;-1:-1:-1;;;;;8557:21:7;;;;;;:13;:21;;;;;;;;8579:10;8557:33;;;;;;;:103;;;;8674:15;;;:7;:15;;;;:22;8670:160;;-1:-1:-1;;;;;8717:16:7;;;;;;:8;:16;;;;;:26;;;8670:160;;;-1:-1:-1;;;;;8793:16:7;;;;;;:8;:16;;;;;;:26;;8812:7;;8793:26;:::i;:::-;-1:-1:-1;;;;;8774:16:7;;;;;;:8;:16;;;;;:45;8670:160;-1:-1:-1;;;;;8839:15:7;;;;;:7;:15;;;;;;;;:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8839:32:7;8860:10;8839:32;;;;;;8881:25;;;:17;:25;;;;;:37;;;;;;;;;:41;-1:-1:-1;7163:1796:7:o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;13517:2:8;1926:73:0::1;::::0;::::1;13499:21:8::0;13556:2;13536:18;;;13529:30;13595:34;13575:18;;;13568:62;-1:-1:-1;;;13646:18:8;;;13639:36;13692:19;;1926:73:0::1;13315:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;4686:340:7:-;-1:-1:-1;;;;;4811:21:7;;;4784:7;4811:21;;;:13;:21;;;;;;;:28;;;;;;;;;4889:13;4904:16;4924:21;4938:6;4924:13;:21::i;:::-;4888:57;;-1:-1:-1;4888:57:7;-1:-1:-1;5005:12:7;4888:57;5005:2;:12;:::i;:::-;-1:-1:-1;;;;;4964:21:7;;;;;;;:13;:21;;;;;;;;:28;;;;;;;;;;:36;;4995:5;;4964:36;:::i;:::-;4963:55;;;;:::i;:::-;4955:64;;;;4686:340;;;;;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;7752:1055:3:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:3;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;3020:25:8;;;3076:2;3061:18;;3054:34;3008:2;2993:18;;2846:248;7931:43:3;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:3;8290:16;;;;;;;;;;;;1005:51:4;;;;;15322:25:8;;;15363:18;;;15356:34;;;8283:4:3;15406:18:8;;;15399:60;15475:18;;;;15468:34;;;1005:51:4;;;;;;;;;;15294:19:8;;;;1005:51:4;;;995:62;;;;;;;;;8737:16:3;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:4;;;;;15670:19:8;;;15705:12;;;15698:28;;;1600:41:4;;;;;;;;;15742:12:8;;;;1600:41:4;;;1590:52;;;;;8770:32:3;1443:204:4;9600:786:7;9738:15;9724:10;;;;:29;;;;;;;;:::i;:::-;;9716:63;;;;-1:-1:-1;;;9716:63:7;;6654:2:8;9716:63:7;;;6636:21:8;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;9716:63:7;6452:345:8;9716:63:7;9811:1;9797:11;:15;9789:44;;;;-1:-1:-1;;;9789:44:7;;14948:2:8;9789:44:7;;;14930:21:8;14987:2;14967:18;;;14960:30;-1:-1:-1;;;15006:18:8;;;14999:46;15062:18;;9789:44:7;14746:340:8;9789:44:7;9843:10;:24;;;9877:18;9898:16;9912:2;9856:11;9898:16;:::i;:::-;9877:37;-1:-1:-1;9928:15:7;9924:60;;-1:-1:-1;9972:1:7;9924:60;10018:17;;-1:-1:-1;;;;;10018:17:7;9993:14;10010:26;;;:7;:26;;;;;;;;10050:13;:32;;;;;;10010:82;;;;;;;;:::i;:::-;;;;;;;;;;;;;10120:17;;;-1:-1:-1;;;;;10120:17:7;;;10102:36;;:17;:36;;;;;;10010:82;;;10102:44;;;;;;;;;:57;;;10181:17;;;;10169:30;;:11;:30;;;;;:47;;10010:82;10169:47;;;;;;;;;;;;;;;10240:17;;;;;10226:32;;:13;:32;;;;;;:37;;10010:82;;-1:-1:-1;10010:82:7;;;10226:37;;10010:82;;10226:37;:::i;:::-;;;;-1:-1:-1;;;;;;9600:786:7:o;5649:449::-;5726:13;;5749:175;-1:-1:-1;;;;;5773:15:7;;;;;;:7;:15;;;;;:22;5769:26;;5749:175;;;-1:-1:-1;;;;;5820:15:7;;;;;;;:7;:15;;;;;:18;;:27;;;;5836:1;;5820:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5820:18:7;:27;5816:98;;;5875:1;5867:9;;5894:5;;5816:98;5797:3;;;;:::i;:::-;;;;5749:175;;;-1:-1:-1;5950:5:7;5933:129;-1:-1:-1;;;;;5961:15:7;;;;;;:7;:15;;;;;:22;:26;;5986:1;;5961:26;:::i;:::-;5957:1;:30;5933:129;;;-1:-1:-1;;;;;6029:15:7;;;;;;:7;:15;;;;;6045:5;:1;6049;6045:5;:::i;:::-;6029:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6008:15:7;;;;;:7;:15;;;;;;;:18;;6029:22;;;;;6008:15;6024:1;;6008:18;;;;;;:::i;:::-;;;;;;;;;;:43;;-1:-1:-1;;;;;;6008:43:7;-1:-1:-1;;;;;6008:43:7;;;;;;;;;;5989:3;;;;:::i;:::-;;;;5933:129;;;;5716:382;5649:449;;:::o;3545:362::-;-1:-1:-1;;;;;3652:15:7;;3604:4;3652:15;;;:7;:15;;;;;:22;3604:4;;3644:30;3620:281;;-1:-1:-1;;;;;3716:15:7;;3699:14;3716:15;;;:7;:15;;;;;:22;;3732:5;;3716:22;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3756:25:7;;;;;:17;:25;;;;;;3716:22;;;;3756:33;;;;;;;;;3716:22;;-1:-1:-1;3756:38:7;3752:139;;-1:-1:-1;3821:4:7;;3545:362;-1:-1:-1;;;3545:362:7:o;3752:139::-;-1:-1:-1;3871:5:7;;3545:362;-1:-1:-1;;;3545:362:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:8:o;633:180::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;-1:-1:-1;784:23:8;;633:180;-1:-1:-1;633:180:8:o;818:186::-;877:6;930:2;918:9;909:7;905:23;901:32;898:52;;;946:1;943;936:12;898:52;969:29;988:9;969:29;:::i;:::-;959:39;818:186;-1:-1:-1;;;818:186:8:o;1217:260::-;1285:6;1293;1346:2;1334:9;1325:7;1321:23;1317:32;1314:52;;;1362:1;1359;1352:12;1314:52;1385:29;1404:9;1385:29;:::i;:::-;1375:39;;1433:38;1467:2;1456:9;1452:18;1433:38;:::i;:::-;1423:48;;1217:260;;;;;:::o;1664:127::-;1725:10;1720:3;1716:20;1713:1;1706:31;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1796:341;1941:2;1926:18;;1974:1;1963:13;;1953:144;;2019:10;2014:3;2010:20;2007:1;2000:31;2054:4;2051:1;2044:15;2082:4;2079:1;2072:15;1953:144;2106:25;;;1796:341;:::o;2142:248::-;2210:6;2218;2271:2;2259:9;2250:7;2246:23;2242:32;2239:52;;;2287:1;2284;2277:12;2239:52;-1:-1:-1;;2310:23:8;;;2380:2;2365:18;;;2352:32;;-1:-1:-1;2142:248:8:o;2395:254::-;2463:6;2471;2524:2;2512:9;2503:7;2499:23;2495:32;2492:52;;;2540:1;2537;2530:12;2492:52;2576:9;2563:23;2553:33;;2605:38;2639:2;2628:9;2624:18;2605:38;:::i;3322:356::-;3524:2;3506:21;;;3543:18;;;3536:30;3602:34;3597:2;3582:18;;3575:62;3669:2;3654:18;;3322:356::o;3962:277::-;4029:6;4082:2;4070:9;4061:7;4057:23;4053:32;4050:52;;;4098:1;4095;4088:12;4050:52;4130:9;4124:16;4183:5;4176:13;4169:21;4162:5;4159:32;4149:60;;4205:1;4202;4195:12;4244:127;4305:10;4300:3;4296:20;4293:1;4286:31;4336:4;4333:1;4326:15;4360:4;4357:1;4350:15;4376:422;4465:1;4508:5;4465:1;4522:270;4543:7;4533:8;4530:21;4522:270;;;4602:4;4598:1;4594:6;4590:17;4584:4;4581:27;4578:53;;;4611:18;;:::i;:::-;4661:7;4651:8;4647:22;4644:55;;;4681:16;;;;4644:55;4760:22;;;;4720:15;;;;4522:270;;;4526:3;4376:422;;;;;:::o;4803:806::-;4852:5;4882:8;4872:80;;-1:-1:-1;4923:1:8;4937:5;;4872:80;4971:4;4961:76;;-1:-1:-1;5008:1:8;5022:5;;4961:76;5053:4;5071:1;5066:59;;;;5139:1;5134:130;;;;5046:218;;5066:59;5096:1;5087:10;;5110:5;;;5134:130;5171:3;5161:8;5158:17;5155:43;;;5178:18;;:::i;:::-;-1:-1:-1;;5234:1:8;5220:16;;5249:5;;5046:218;;5348:2;5338:8;5335:16;5329:3;5323:4;5320:13;5316:36;5310:2;5300:8;5297:16;5292:2;5286:4;5283:12;5279:35;5276:77;5273:159;;;-1:-1:-1;5385:19:8;;;5417:5;;5273:159;5464:34;5489:8;5483:4;5464:34;:::i;:::-;5534:6;5530:1;5526:6;5522:19;5513:7;5510:32;5507:58;;;5545:18;;:::i;:::-;5583:20;;4803:806;-1:-1:-1;;;4803:806:8:o;5614:131::-;5674:5;5703:36;5730:8;5724:4;5703:36;:::i;5750:168::-;5790:7;5856:1;5852;5848:6;5844:14;5841:1;5838:21;5833:1;5826:9;5819:17;5815:45;5812:71;;;5863:18;;:::i;:::-;-1:-1:-1;5903:9:8;;5750:168::o;5923:127::-;5984:10;5979:3;5975:20;5972:1;5965:31;6015:4;6012:1;6005:15;6039:4;6036:1;6029:15;6055:120;6095:1;6121;6111:35;;6126:18;;:::i;:::-;-1:-1:-1;6160:9:8;;6055:120::o;6180:127::-;6241:10;6236:3;6232:20;6229:1;6222:31;6272:4;6269:1;6262:15;6296:4;6293:1;6286:15;6312:135;6351:3;-1:-1:-1;;6372:17:8;;6369:43;;;6392:18;;:::i;:::-;-1:-1:-1;6439:1:8;6428:13;;6312:135::o;9661:125::-;9701:4;9729:1;9726;9723:8;9720:34;;;9734:18;;:::i;:::-;-1:-1:-1;9771:9:8;;9661:125::o;10631:112::-;10663:1;10689;10679:35;;10694:18;;:::i;:::-;-1:-1:-1;10728:9:8;;10631:112::o;11108:128::-;11148:3;11179:1;11175:6;11172:1;11169:13;11166:39;;;11185:18;;:::i;:::-;-1:-1:-1;11221:9:8;;11108:128::o;11241:179::-;11319:13;;11372:22;11361:34;;11351:45;;11341:73;;11410:1;11407;11400:12;11425:473;11528:6;11536;11544;11552;11560;11613:3;11601:9;11592:7;11588:23;11584:33;11581:53;;;11630:1;11627;11620:12;11581:53;11653:39;11682:9;11653:39;:::i;:::-;11643:49;;11732:2;11721:9;11717:18;11711:25;11701:35;;11776:2;11765:9;11761:18;11755:25;11745:35;;11820:2;11809:9;11805:18;11799:25;11789:35;;11843:49;11887:3;11876:9;11872:19;11843:49;:::i;:::-;11833:59;;11425:473;;;;;;;;:::o;11903:273::-;11971:6;12024:2;12012:9;12003:7;11999:23;11995:32;11992:52;;;12040:1;12037;12030:12;11992:52;12072:9;12066:16;12122:4;12115:5;12111:16;12104:5;12101:27;12091:55;;12142:1;12139;12132:12;13975:766;14207:1;14203;14198:3;14194:11;14190:19;14182:6;14178:32;14167:9;14160:51;14141:4;14230:2;14268:6;14263:2;14252:9;14248:18;14241:34;14311:2;14306;14295:9;14291:18;14284:30;14343:6;14337:13;14386:6;14381:2;14370:9;14366:18;14359:34;14411:1;14421:141;14435:6;14432:1;14429:13;14421:141;;;14531:14;;;14527:23;;14521:30;14496:17;;;14515:3;14492:27;14485:67;14450:10;;14421:141;;;14580:6;14577:1;14574:13;14571:92;;;14651:1;14645:3;14636:6;14625:9;14621:22;14617:32;14610:43;14571:92;-1:-1:-1;14724:2:8;14703:15;-1:-1:-1;;14699:29:8;14684:45;;;;14731:3;14680:55;;13975:766;-1:-1:-1;;;;;13975:766:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    444,
    13122
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE43B54 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBD9C47E3 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xF1D76A5F EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xFE05CC9C EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD9C47E3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xCD5EA4F8 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xD65AB5F2 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C753122 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9C753122 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xB53472EF EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xB81BAA59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xB90C899D EQ PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE43B54 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x8B42EB7C EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D7C3B9 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x66CE6DAB GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x66CE6DAB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x6CBC2DED EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x87CD6AD2 EQ PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D7C3B9 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x66A1DF65 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AD95786 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2AD95786 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x3FDB144B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x3FF54C71 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F3BBD9 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xB26083C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x24398A85 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2521CC46 EQ PUSH2 0x259 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x244 PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x26C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x26C PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x244 PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x1385 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE PUSH1 0x0 DUP1 PUSH2 0x62C DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x63C DUP2 PUSH1 0xA PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x714 DUP3 DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x79B SWAP1 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x810 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x86A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374696C6C20646F65736E2774206B6E6F7720776869636820706C6179657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x34B9903BB4B73732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP3 AND DUP1 DUP8 MSTORE SWAP4 DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 SLOAD AND DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP1 DUP5 KECCAK256 SWAP2 DUP5 MSTORE SWAP2 MSTORE DUP2 KECCAK256 SSTORE POP DUP1 PUSH2 0xA86 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E2 JUMP JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD DUP4 DUP2 MSTORE DUP1 DUP4 ADD DUP1 DUP4 MSTORE SWAP6 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xAE7 SWAP3 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 DUP6 MSTORE PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xB1B SWAP3 SWAP1 PUSH2 0x200B JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH2 0xB97 PUSH1 0x0 PUSH2 0x1A67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xC1E SWAP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0xC51 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x5FD DUP3 DUP3 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDAC JUMPI PUSH2 0xDAC PUSH2 0x210A JUMP JUMPDEST EQ DUP1 PUSH2 0xDCE JUMPI POP PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCC PUSH2 0x210A JUMP JUMPDEST EQ JUMPDEST PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E2774206765742074686520726566756E642061667465722067 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616D65207374617274656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206469646E27742062657420746F6B656E206F662074686520616D6F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E7421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206472657720796F757220636172642C20796F752063616E2774207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x66756E6421 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xFCE SWAP1 DUP4 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP4 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x5FD JUMPI PUSH2 0x5FD DUP2 CALLER PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1100 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4265666F72652067616D65206973206E6F74206F766572207965742C206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206861766520746F207061792072657761726420746F2077696E6E657221 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x1109 DUP3 PUSH2 0x1F0F JUMP JUMPDEST PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C207061727469636970616E7473206E6565647320746F20647261772061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x206361726421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x134C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x11F0 JUMPI PUSH2 0x11F0 PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x133A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 PUSH2 0x12BB PUSH1 0x2 DUP5 PUSH2 0x237B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12EC JUMPI PUSH2 0x12EC PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x1338 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1338 JUMPI POP PUSH2 0x133A JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1344 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1168 JUMP JUMPDEST POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C8 JUMPI PUSH2 0x13C8 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774207374617274206E65772067616D65207374617465207965742100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1480 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1453 JUMPI PUSH2 0x1453 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1551 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x15D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120626574206D757374206265206D6F7265207468616E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 GT PUSH2 0x16B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792C20746869732067616D6520697320616C72656164792066756C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E20506C656173652077616974206E6578742067616D652E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CF PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x171C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420626574206D6F6E6579207768696C6520000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x178E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B2 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 DUP4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x18B5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18D9 SWAP1 DUP4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x19DE DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 PUSH2 0x1A11 DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1A21 DUP2 PUSH1 0xA PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1A52 SWAP1 DUP5 SWAP1 PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x1A5C SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B99 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x1BF3 SWAP1 PUSH1 0x1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C49 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x1C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB4B5B9BDD0B599BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1CE3 PUSH1 0xE DUP4 PUSH2 0x237B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1CEE JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1D23 JUMPI PUSH2 0x1D23 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP3 AND DUP1 DUP8 MSTORE SWAP4 DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP9 SWAP1 SSTORE DUP3 SLOAD DUP3 AND DUP7 MSTORE PUSH1 0xD DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE DUP7 DUP9 KECCAK256 ADD DUP10 SWAP1 SSTORE SWAP3 SLOAD SWAP1 SWAP2 AND DUP6 MSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0x1D9C SWAP1 DUP5 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1DFA JUMPI PUSH2 0x1DFA PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1E1D JUMPI DUP1 SWAP2 POP PUSH2 0x1E2F JUMP JUMPDEST DUP1 PUSH2 0x1E27 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DAB JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E57 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2364 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1E81 DUP3 PUSH1 0x1 PUSH2 0x238F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1ECE JUMPI PUSH2 0x1ECE PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1F01 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E32 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 ISZERO PUSH2 0x1480 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1F59 JUMPI PUSH2 0x1F59 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F9C JUMPI POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1FFB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1FFB JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST POP PUSH2 0x2007 SWAP3 SWAP2 POP PUSH2 0x2046 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1FFB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1FFB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x202B JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2007 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2047 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208E DUP4 PUSH2 0x205B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D0 DUP3 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F3 DUP4 PUSH2 0x205B JUMP JUMPDEST SWAP2 POP PUSH2 0x2101 PUSH1 0x20 DUP5 ADD PUSH2 0x205B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x2142 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2101 PUSH1 0x20 DUP5 ADD PUSH2 0x205B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2235 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221B PUSH2 0x21E4 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2228 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x21FF JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x224C JUMPI POP PUSH1 0x1 PUSH2 0x1A61 JUMP JUMPDEST DUP2 PUSH2 0x2259 JUMPI POP PUSH1 0x0 PUSH2 0x1A61 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x226F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2279 JUMPI PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x228A PUSH2 0x21E4 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1A61 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x22B8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x22C2 DUP4 DUP4 PUSH2 0x21FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 PUSH2 0x21E4 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D0 DUP4 DUP4 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2304 PUSH2 0x21E4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x232E JUMPI PUSH2 0x232E PUSH2 0x2309 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x21E4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2376 PUSH2 0x21E4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x238A JUMPI PUSH2 0x238A PUSH2 0x2309 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23A2 JUMPI PUSH2 0x23A2 PUSH2 0x21E4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E2 DUP7 PUSH2 0x23A7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2405 PUSH1 0x80 DUP8 ADD PUSH2 0x23A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2476 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x245A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 JUMP STOP 0xB3 0x26 0xC5 POP SSTORE 0xBF GAS 0xE0 PUSH7 0xB99420E8F5556D JUMPDEST PUSH21 0x1430F89F32F211AE41833F64736F6C634300080A00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8AE43B54"
    },
    "38": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBD9C47E3"
    },
    "49": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "60": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "71": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BA"
    },
    "75": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C3"
    },
    "86": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1D76A5F"
    },
    "93": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4EB"
    },
    "97": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4FE"
    },
    "108": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFE05CC9C"
    },
    "115": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "116": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x511"
    },
    "119": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "120": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBD9C47E3"
    },
    "131": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x446"
    },
    "135": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCD5EA4F8"
    },
    "142": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x46F"
    },
    "146": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD65AB5F2"
    },
    "153": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x48F"
    },
    "157": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD5B8467"
    },
    "164": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "165": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x497"
    },
    "168": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "169": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9C753122"
    },
    "180": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9C753122"
    },
    "191": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FA"
    },
    "195": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB53472EF"
    },
    "202": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x40D"
    },
    "206": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB81BAA59"
    },
    "213": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x420"
    },
    "217": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB90C899D"
    },
    "224": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "225": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x433"
    },
    "228": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "229": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "232": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "233": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8AE43B54"
    },
    "240": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A9"
    },
    "244": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8B42EB7C"
    },
    "251": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C3"
    },
    "255": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "262": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D6"
    },
    "266": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "267": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "268": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "274": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E7"
    },
    "277": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "278": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "281": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "282": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x45D7C3B9"
    },
    "289": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "295": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66CE6DAB"
    },
    "300": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "301": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66CE6DAB"
    },
    "311": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "312": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x343"
    },
    "315": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "317": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6CBC2DED"
    },
    "322": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "323": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36E"
    },
    "326": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "327": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "328": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "333": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "334": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x376"
    },
    "337": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "338": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "339": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x877DD39D"
    },
    "344": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "345": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37E"
    },
    "348": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "349": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "350": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x87CD6AD2"
    },
    "355": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "356": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x391"
    },
    "359": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "360": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "363": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "364": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "365": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "366": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x45D7C3B9"
    },
    "371": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "372": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F4"
    },
    "375": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "376": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5E5F2E26"
    },
    "382": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "383": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x307"
    },
    "386": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "387": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "388": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x61728F39"
    },
    "393": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "394": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31A"
    },
    "397": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "398": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "399": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x66A1DF65"
    },
    "404": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "405": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x323"
    },
    "408": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "409": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "412": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "413": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "414": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "415": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2AD95786"
    },
    "420": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "GT",
      "path": "7"
    },
    "421": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "425": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "426": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2AD95786"
    },
    "431": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "432": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x284"
    },
    "435": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "436": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "437": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x36013189"
    },
    "442": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "443": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AD"
    },
    "446": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "447": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "448": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3FDB144B"
    },
    "453": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "454": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B6"
    },
    "457": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "458": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "459": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3FF54C71"
    },
    "464": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "465": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E1"
    },
    "468": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "469": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "472": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "473": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "474": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "475": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5F3BBD9"
    },
    "480": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "481": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "485": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "486": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB26083C"
    },
    "491": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "492": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x231"
    },
    "495": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "496": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "497": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x24398A85"
    },
    "502": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "503": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x246"
    },
    "506": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "507": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "508": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2521CC46"
    },
    "513": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "EQ",
      "path": "7"
    },
    "514": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x259"
    },
    "517": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "518": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "519": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        444,
        13122
      ],
      "op": "REVERT",
      "path": "7"
    },
    "523": {
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "524": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "527": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x219"
    },
    "530": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "531": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "533": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2072"
    },
    "536": {
      "fn": null,
      "jump": "i",
      "offset": [
        1930,
        1978
      ],
      "op": "JUMP",
      "path": "7"
    },
    "537": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "538": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x524"
    },
    "541": {
      "fn": null,
      "jump": "i",
      "offset": [
        1930,
        1978
      ],
      "op": "JUMP",
      "path": "7"
    },
    "542": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "543": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "545": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "546": {
      "op": "SWAP1"
    },
    "547": {
      "op": "DUP2"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "551": {
      "op": "ADD"
    },
    "552": {
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "553": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "555": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "556": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "DUP1",
      "path": "7"
    },
    "557": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "558": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "SUB",
      "path": "7"
    },
    "559": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "560": {
      "fn": null,
      "offset": [
        1930,
        1978
      ],
      "op": "RETURN",
      "path": "7"
    },
    "561": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "562": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "565": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23F"
    },
    "568": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "569": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "571": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x209C"
    },
    "574": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMP",
      "path": "7"
    },
    "575": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "576": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x555"
    },
    "579": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "STOP",
      "path": "7"
    },
    "582": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "583": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "586": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x254"
    },
    "589": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "590": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "592": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "595": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMP",
      "path": "7"
    },
    "596": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "597": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x601"
    },
    "600": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMP",
      "path": "7"
    },
    "601": {
      "offset": [
        2339,
        2380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "602": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x10"
    },
    "604": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "605": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "608": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "offset": [
        2339,
        2380
      ],
      "op": "AND",
      "path": "7"
    },
    "618": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "DUP2",
      "path": "7"
    },
    "619": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "JUMP",
      "path": "7"
    },
    "620": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "621": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "623": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2339,
        2380
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "op": "SWAP1"
    },
    "633": {
      "op": "SWAP2"
    },
    "634": {
      "op": "AND"
    },
    "635": {
      "op": "DUP2"
    },
    "636": {
      "op": "MSTORE"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "639": {
      "op": "ADD"
    },
    "640": {
      "offset": [
        2339,
        2380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "643": {
      "op": "JUMP"
    },
    "644": {
      "offset": [
        2084,
        2125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "645": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "648": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x292"
    },
    "651": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "652": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "654": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "657": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        2084,
        2125
      ],
      "op": "JUMP",
      "path": "7"
    },
    "658": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "659": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "661": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "663": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "664": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "666": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "667": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "668": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "669": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "671": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "672": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "673": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "op": "SUB"
    },
    "682": {
      "offset": [
        2084,
        2125
      ],
      "op": "AND",
      "path": "7"
    },
    "683": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "684": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2084,
        2125
      ],
      "op": "JUMP",
      "path": "7"
    },
    "685": {
      "offset": [
        2386,
        2411
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "686": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2386,
        2411
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "689": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2386,
        2411
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x11"
    },
    "691": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2386,
        2411
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "692": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2386,
        2411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "693": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        2386,
        2411
      ],
      "op": "JUMP",
      "path": "7"
    },
    "694": {
      "offset": [
        1729,
        1801
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "695": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "698": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C4"
    },
    "701": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "702": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "704": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D7"
    },
    "707": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        1729,
        1801
      ],
      "op": "JUMP",
      "path": "7"
    },
    "708": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "709": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "711": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "713": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "714": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP2",
      "path": "7"
    },
    "715": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "716": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "718": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "719": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP4",
      "path": "7"
    },
    "720": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "721": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "723": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP1",
      "path": "7"
    },
    "724": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP5",
      "path": "7"
    },
    "725": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "726": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "727": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "728": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "729": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "730": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP3",
      "path": "7"
    },
    "731": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "732": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "733": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "734": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "735": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "DUP2",
      "path": "7"
    },
    "736": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        1729,
        1801
      ],
      "op": "JUMP",
      "path": "7"
    },
    "737": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "738": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "741": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF"
    },
    "744": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "745": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "747": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "750": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2779,
        3157
      ],
      "op": "JUMP",
      "path": "7"
    },
    "751": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "752": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67D"
    },
    "755": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2779,
        3157
      ],
      "op": "JUMP",
      "path": "7"
    },
    "756": {
      "offset": [
        2288,
        2333
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "757": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF"
    },
    "759": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "760": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "763": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "offset": [
        2288,
        2333
      ],
      "op": "AND",
      "path": "7"
    },
    "773": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "DUP2",
      "path": "7"
    },
    "774": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2288,
        2333
      ],
      "op": "JUMP",
      "path": "7"
    },
    "775": {
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "776": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "779": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x315"
    },
    "782": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "783": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "785": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x209C"
    },
    "788": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "789": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "790": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A3"
    },
    "793": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "794": {
      "offset": [
        496,
        518
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "795": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "798": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "800": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "801": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "DUP2",
      "path": "7"
    },
    "802": {
      "fn": "CardGame.issueTokens",
      "offset": [
        496,
        518
      ],
      "op": "JUMP",
      "path": "7"
    },
    "803": {
      "offset": [
        1628,
        1671
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "804": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "807": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x331"
    },
    "810": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "811": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "813": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "816": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "817": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "818": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "820": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "822": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "823": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "825": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "826": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "DUP2",
      "path": "7"
    },
    "827": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "828": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "830": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "831": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "832": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "833": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "DUP2",
      "path": "7"
    },
    "834": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1628,
        1671
      ],
      "op": "JUMP",
      "path": "7"
    },
    "835": {
      "offset": [
        1223,
        1291
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "836": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "839": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x351"
    },
    "842": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "843": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "845": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D7"
    },
    "848": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMP",
      "path": "7"
    },
    "849": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "850": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "852": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "854": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "855": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP2",
      "path": "7"
    },
    "856": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "857": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "859": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "860": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP4",
      "path": "7"
    },
    "861": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "862": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "864": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP1",
      "path": "7"
    },
    "865": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP5",
      "path": "7"
    },
    "866": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "867": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "868": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "869": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "870": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "871": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP3",
      "path": "7"
    },
    "872": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "873": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "874": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "875": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "876": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "DUP2",
      "path": "7"
    },
    "877": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1223,
        1291
      ],
      "op": "JUMP",
      "path": "7"
    },
    "878": {
      "fn": "CardGame.endGame",
      "offset": [
        11757,
        13120
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "879": {
      "fn": "CardGame.endGame",
      "offset": [
        11757,
        13120
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "882": {
      "fn": "CardGame.endGame",
      "offset": [
        11757,
        13120
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7CD"
    },
    "885": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        11757,
        13120
      ],
      "op": "JUMP",
      "path": "7"
    },
    "886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "890": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB63"
    },
    "893": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "894": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "895": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "898": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38C"
    },
    "901": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "902": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "904": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D7"
    },
    "907": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMP",
      "path": "7"
    },
    "908": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "909": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB99"
    },
    "912": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMP",
      "path": "7"
    },
    "913": {
      "offset": [
        718,
        748
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "914": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "916": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "917": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "920": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "921": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "924": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "925": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "DIV",
      "path": "7"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "offset": [
        718,
        748
      ],
      "op": "AND",
      "path": "7"
    },
    "935": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "DUP2",
      "path": "7"
    },
    "936": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        718,
        748
      ],
      "op": "JUMP",
      "path": "7"
    },
    "937": {
      "offset": [
        684,
        712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "938": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "940": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "941": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B6"
    },
    "944": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "945": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "947": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "AND",
      "path": "7"
    },
    "948": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "DUP2",
      "path": "7"
    },
    "949": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "JUMP",
      "path": "7"
    },
    "950": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "951": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "953": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "954": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "957": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "958": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "959": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        684,
        712
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2120"
    },
    "962": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "i",
      "offset": [
        684,
        712
      ],
      "op": "JUMP",
      "path": "7"
    },
    "963": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "964": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "967": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D1"
    },
    "970": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "971": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "973": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "976": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMP",
      "path": "7"
    },
    "977": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "978": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBF1"
    },
    "981": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMP",
      "path": "7"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "983": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "985": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C"
    },
    "998": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "999": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1000": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244"
    },
    "1003": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1007": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1009": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2148"
    },
    "1012": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1013": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1014": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5D"
    },
    "1017": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1018": {
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1019": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "1022": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x408"
    },
    "1025": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1026": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1028": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2072"
    },
    "1031": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1032": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1033": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCDF"
    },
    "1036": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1037": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1038": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "1041": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41B"
    },
    "1044": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1045": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1047": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1050": {
      "fn": "CardGame.allowToken",
      "jump": "i",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1051": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1052": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD17"
    },
    "1055": {
      "fn": "CardGame.allowToken",
      "jump": "i",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1056": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1057": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "1060": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42E"
    },
    "1063": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1064": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1066": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x216A"
    },
    "1069": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6104,
        6948
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1070": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1071": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD93"
    },
    "1074": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6104,
        6948
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1075": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1076": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "1079": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x441"
    },
    "1082": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1083": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1085": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1088": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1089": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1090": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1045"
    },
    "1093": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1094": {
      "offset": [
        1339,
        1389
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1095": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "1098": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x454"
    },
    "1101": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1102": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1104": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1107": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1108": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1109": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1111": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1113": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1114": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1116": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1117": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1118": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1119": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1121": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1122": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1123": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "offset": [
        1339,
        1389
      ],
      "op": "AND",
      "path": "7"
    },
    "1133": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1134": {
      "fn": "CardGame.getWinner",
      "offset": [
        1339,
        1389
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1135": {
      "offset": [
        1840,
        1888
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1136": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "1139": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x47D"
    },
    "1142": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1143": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1145": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1148": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        1840,
        1888
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1149": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1150": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "1152": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1154": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1155": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1157": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1158": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1159": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1160": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1162": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1163": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1164": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1165": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1166": {
      "fn": "CardGame.getWinner",
      "offset": [
        1840,
        1888
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1167": {
      "fn": "CardGame.startGame",
      "offset": [
        6954,
        7157
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1168": {
      "fn": "CardGame.startGame",
      "offset": [
        6954,
        7157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "1171": {
      "fn": "CardGame.startGame",
      "offset": [
        6954,
        7157
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1385"
    },
    "1174": {
      "fn": "CardGame.startGame",
      "jump": "i",
      "offset": [
        6954,
        7157
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1175": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1176": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AA"
    },
    "1179": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A5"
    },
    "1182": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1183": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1185": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1188": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1189": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1190": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1429"
    },
    "1193": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1194": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1195": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1197": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1198": {
      "op": "SWAP1"
    },
    "1199": {
      "op": "ISZERO"
    },
    "1200": {
      "op": "ISZERO"
    },
    "1201": {
      "op": "DUP2"
    },
    "1202": {
      "op": "MSTORE"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "1209": {
      "op": "JUMP"
    },
    "1210": {
      "offset": [
        524,
        542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1211": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "1214": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1216": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1217": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1218": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        524,
        542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1219": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1220": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D6"
    },
    "1223": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D1"
    },
    "1226": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1227": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1229": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B5"
    },
    "1232": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1233": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1234": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1486"
    },
    "1237": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1238": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1239": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1241": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1242": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1243": {
      "op": "SWAP3"
    },
    "1244": {
      "op": "DUP4"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1248": {
      "op": "DUP4"
    },
    "1249": {
      "op": "ADD"
    },
    "1250": {
      "op": "SWAP2"
    },
    "1251": {
      "op": "SWAP1"
    },
    "1252": {
      "op": "SWAP2"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "1258": {
      "op": "JUMP"
    },
    "1259": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1260": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "1263": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F9"
    },
    "1266": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1267": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1269": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x216A"
    },
    "1272": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1273": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1274": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1587"
    },
    "1277": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "1282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50C"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20B5"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1946"
    },
    "1296": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1297": {
      "offset": [
        754,
        776
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26C"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "offset": [
        754,
        776
      ],
      "op": "AND",
      "path": "7"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        754,
        776
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1316": {
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "1319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "LT",
      "path": "7"
    },
    "1336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x540"
    },
    "1339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "ADD",
      "path": "7"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "POP",
      "path": "7"
    },
    "1359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "POP",
      "path": "7"
    },
    "1361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "POP",
      "path": "7"
    },
    "1362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1930,
        1978
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1364": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1930,
        1978
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1365": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1366": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1368": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1378": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 1
    },
    "1379": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1380": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x588"
    },
    "1383": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1384": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1386": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1395": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1396": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1398": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1399": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "1402": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1403": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "1406": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1407": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1410": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1411": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1412": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1413": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1414": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1415": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1416": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1417": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x5"
    },
    "1419": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1420": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1422": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1423": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1432": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1433": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2704,
        2714
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1434": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1436": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1437": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ADD",
      "path": "7"
    },
    "1438": {
      "op": "MSTORE"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1441": {
      "op": "DUP2"
    },
    "1442": {
      "op": "ADD"
    },
    "1443": {
      "op": "DUP4"
    },
    "1444": {
      "op": "SWAP1"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1455": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1456": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "AND",
      "path": "7"
    },
    "1457": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1458": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2703
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "1463": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1469": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1471": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1472": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1473": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1474": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "SUB",
      "path": "7"
    },
    "1475": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1476": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1478": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1479": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "GAS",
      "path": "7"
    },
    "1480": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "CALL",
      "path": "7"
    },
    "1481": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1482": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1483": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1484": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D9"
    },
    "1487": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1488": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1489": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1491": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1492": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1493": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1494": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1496": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1497": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1498": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1499": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1500": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1501": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1502": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1504": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1505": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1506": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1508": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "NOT",
      "path": "7"
    },
    "1509": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1511": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1512": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ADD",
      "path": "7"
    },
    "1513": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "AND",
      "path": "7"
    },
    "1514": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1515": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ADD",
      "path": "7"
    },
    "1516": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1517": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1519": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1520": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1521": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1522": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "ADD",
      "path": "7"
    },
    "1523": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1524": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FD"
    },
    "1527": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1528": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1529": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "1532": {
      "fn": "CardGame.sendMSCToken",
      "jump": "i",
      "offset": [
        2686,
        2724
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1533": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1534": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2686,
        2724
      ],
      "op": "POP",
      "path": "7"
    },
    "1535": {
      "fn": "CardGame.sendMSCToken",
      "offset": [
        2620,
        2773
      ],
      "op": "POP",
      "path": "7"
    },
    "1536": {
      "fn": "CardGame.sendMSCToken",
      "jump": "o",
      "offset": [
        2620,
        2773
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1537": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1547": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "AND",
      "path": "7"
    },
    "1548": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5175,
        5182
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1550": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1551": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1552": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1553": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1555": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1557": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1558": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1559": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1560": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1562": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1563": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5223
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1564": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5224,
        5234
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1565": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5235
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1566": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5235
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1567": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5235
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1568": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5202,
        5235
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1569": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5285,
        5298
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1571": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5300,
        5316
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1572": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5320,
        5341
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x62C"
    },
    "1575": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5334,
        5340
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1576": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5320,
        5333
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1486"
    },
    "1579": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5320,
        5341
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1580": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5320,
        5341
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1581": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5284,
        5341
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1582": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5284,
        5341
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5284,
        5341
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5516,
        5528
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 3,
      "value": "0x63C"
    },
    "1589": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5284,
        5341
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1590": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5516,
        5518
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1592": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5516,
        5528
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22DE"
    },
    "1595": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5516,
        5528
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1596": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5516,
        5528
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1606": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "AND",
      "path": "7"
    },
    "1607": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1609": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1610": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1611": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1612": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1614": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1616": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1617": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1618": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1619": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1621": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1622": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1623": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5491
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1624": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5492,
        5502
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1625": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1626": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1627": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1628": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1629": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1630": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1631": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1632": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5503
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1633": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5511
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66B"
    },
    "1636": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5511
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1637": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5506,
        5511
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1638": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5506,
        5511
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1639": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5511
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22EA"
    },
    "1642": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5470,
        5511
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1643": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5470,
        5511
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1644": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5469,
        5529
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x675"
    },
    "1647": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5469,
        5529
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1648": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5469,
        5529
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1649": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5469,
        5529
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x231F"
    },
    "1652": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "i",
      "offset": [
        5469,
        5529
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1653": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5469,
        5529
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1654": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5461,
        5530
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1655": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "offset": [
        5079,
        5537
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1656": {
      "op": "POP"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "fn": "CardGame.getPlayerSingleTokenValue",
      "jump": "o",
      "offset": [
        5079,
        5537
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1661": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2779,
        3157
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1662": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1664": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1674": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1675": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1676": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1679": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1680": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1682": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1691": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1692": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1694": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1695": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "1698": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1699": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "1702": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1703": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2848,
        2861
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1706": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1716": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "AND",
      "path": "7"
    },
    "1717": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1719": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1720": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1721": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1722": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2882
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1724": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1726": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1727": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1729": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1730": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2890
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1731": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2875,
        2897
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1732": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2867,
        2897
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1733": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2867,
        2897
      ],
      "op": "LT",
      "path": "7"
    },
    "1734": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1735": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FD"
    },
    "1738": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1748": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "AND",
      "path": "7"
    },
    "1749": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2922,
        2939
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1751": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1752": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1753": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1754": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2949
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1756": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1758": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1759": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1761": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1762": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2957
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1763": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1764": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1765": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2958,
        2963
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1766": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2958,
        2963
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1767": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1768": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "LT",
      "path": "7"
    },
    "1769": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F4"
    },
    "1772": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1773": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F4"
    },
    "1776": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "1779": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2942,
        2964
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1780": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1781": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1783": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1784": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1785": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1786": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1788": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1789": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1790": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "ADD",
      "path": "7"
    },
    "1791": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "AND",
      "path": "7"
    },
    "1801": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1802": {
      "op": "POP"
    },
    "1803": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3003,
        3045
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x714"
    },
    "1806": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2942,
        2964
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1807": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3038,
        3044
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1808": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3003,
        3026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19E1"
    },
    "1811": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        3003,
        3045
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1812": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3003,
        3045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1813": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3067
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x5"
    },
    "1815": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3067
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1816": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1818": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1819": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1828": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "op": "DUP6"
    },
    "1838": {
      "op": "DUP2"
    },
    "1839": {
      "op": "AND"
    },
    "1840": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1842": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1843": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ADD",
      "path": "7"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1847": {
      "op": "DUP3"
    },
    "1848": {
      "op": "ADD"
    },
    "1849": {
      "op": "DUP5"
    },
    "1850": {
      "op": "SWAP1"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2978,
        3045
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1853": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2978,
        3045
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3067
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1856": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3067
      ],
      "op": "AND",
      "path": "7"
    },
    "1857": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3067
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1858": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3076
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "1863": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3076
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1869": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1871": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1872": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1873": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1874": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "SUB",
      "path": "7"
    },
    "1875": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1876": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1878": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1879": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "GAS",
      "path": "7"
    },
    "1880": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "CALL",
      "path": "7"
    },
    "1881": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1882": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1883": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1884": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x769"
    },
    "1887": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1888": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1889": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1891": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1892": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1893": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1894": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1896": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1897": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1898": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1899": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1900": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1901": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1902": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1904": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1905": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1906": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1908": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "NOT",
      "path": "7"
    },
    "1909": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1911": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1912": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ADD",
      "path": "7"
    },
    "1913": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "AND",
      "path": "7"
    },
    "1914": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1915": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ADD",
      "path": "7"
    },
    "1916": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1917": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1919": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1920": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1921": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1922": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "ADD",
      "path": "7"
    },
    "1923": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1924": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78D"
    },
    "1927": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1928": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1929": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "1932": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        3059,
        3103
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1933": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1934": {
      "fn": "CardGame.issueTokens",
      "offset": [
        3059,
        3103
      ],
      "op": "POP",
      "path": "7"
    },
    "1935": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2908,
        3151
      ],
      "op": "POP",
      "path": "7"
    },
    "1936": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2908,
        3151
      ],
      "op": "POP",
      "path": "7"
    },
    "1937": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 5
    },
    "1938": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1939": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79B"
    },
    "1942": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1943": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2349"
    },
    "1946": {
      "fn": "CardGame.issueTokens",
      "jump": "i",
      "offset": [
        2899,
        2906
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1947": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1948": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1949": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "POP",
      "path": "7"
    },
    "1950": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2899,
        2906
      ],
      "op": "POP",
      "path": "7"
    },
    "1951": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6AA"
    },
    "1954": {
      "fn": "CardGame.issueTokens",
      "offset": [
        2843,
        3151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1955": {
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1956": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1958": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1959": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1960": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1961": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1962": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "LT",
      "path": "7"
    },
    "1963": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B3"
    },
    "1966": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1967": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1969": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1970": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1971": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1972": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1974": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1975": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1976": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1977": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1979": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1980": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1981": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1982": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "ADD",
      "path": "7"
    },
    "1983": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "op": "SUB"
    },
    "1992": {
      "offset": [
        1520,
        1550
      ],
      "op": "AND",
      "path": "7"
    },
    "1993": {
      "fn": "CardGame.issueTokens",
      "offset": [
        1520,
        1550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "offset": [
        1520,
        1550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1996": {
      "fn": "CardGame.issueTokens",
      "jump": "o",
      "offset": [
        1520,
        1550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1997": {
      "fn": "CardGame.endGame",
      "offset": [
        11757,
        13120
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1998": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2000": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "op": "SUB"
    },
    "2009": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2010": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2011": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2012": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F7"
    },
    "2015": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2016": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2027": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2028": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2030": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2031": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "2034": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2035": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "2038": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2039": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2040": {
      "fn": "CardGame.endGame",
      "offset": [
        11838,
        11867
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x2"
    },
    "2042": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2044": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11834
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2045": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2047": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11834
      ],
      "op": "AND",
      "path": "7"
    },
    "2048": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2050": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2051": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "GT",
      "path": "7"
    },
    "2052": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2053": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x810"
    },
    "2056": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2057": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x810"
    },
    "2060": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "2063": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        11824,
        11867
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2064": {
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2065": {
      "branch": 85,
      "fn": "CardGame.endGame",
      "offset": [
        11824,
        11867
      ],
      "op": "EQ",
      "path": "7"
    },
    "2066": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x855"
    },
    "2069": {
      "branch": 85,
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2070": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2072": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2081": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2084": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2086": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2087": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "ADD",
      "path": "7"
    },
    "2088": {
      "op": "MSTORE"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "MSTORE"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "2132": {
      "op": "JUMP"
    },
    "2133": {
      "fn": "CardGame.endGame",
      "offset": [
        11803,
        11914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2134": {
      "fn": "CardGame.endGame",
      "offset": [
        11947,
        11960
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x10"
    },
    "2136": {
      "fn": "CardGame.endGame",
      "offset": [
        11947,
        11960
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2137": {
      "fn": "CardGame.endGame",
      "offset": [
        11932,
        11961
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86A"
    },
    "2140": {
      "fn": "CardGame.endGame",
      "offset": [
        11932,
        11961
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "fn": "CardGame.endGame",
      "offset": [
        11947,
        11960
      ],
      "op": "AND",
      "path": "7"
    },
    "2150": {
      "fn": "CardGame.endGame",
      "offset": [
        11932,
        11946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1429"
    },
    "2153": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        11932,
        11961
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2154": {
      "branch": 86,
      "fn": "CardGame.endGame",
      "offset": [
        11932,
        11961
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2155": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8B2"
    },
    "2158": {
      "branch": 86,
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2159": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2161": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2170": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2175": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2176": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "ADD",
      "path": "7"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH25",
      "value": "0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2213": {
      "op": "SHL"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2216": {
      "op": "DUP3"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "op": "MSTORE"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "2225": {
      "op": "JUMP"
    },
    "2226": {
      "fn": "CardGame.endGame",
      "offset": [
        11924,
        11991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2227": {
      "fn": "CardGame.endGame",
      "offset": [
        12029,
        12042
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x10"
    },
    "2229": {
      "fn": "CardGame.endGame",
      "offset": [
        12029,
        12042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "CardGame.endGame",
      "offset": [
        12029,
        12042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2239": {
      "fn": "CardGame.endGame",
      "offset": [
        12029,
        12042
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2240": {
      "fn": "CardGame.endGame",
      "offset": [
        12029,
        12042
      ],
      "op": "AND",
      "path": "7"
    },
    "2241": {
      "fn": "CardGame.endGame",
      "offset": [
        12055,
        12056
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2243": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2244": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2245": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2246": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12028
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2248": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2250": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2251": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2253": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2254": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2255": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2256": {
      "fn": "CardGame.endGame",
      "offset": [
        12022,
        12043
      ],
      "op": "AND",
      "path": "7"
    },
    "2257": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x92E"
    },
    "2260": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2261": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2263": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2272": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2275": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2277": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2278": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "ADD",
      "path": "7"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH32",
      "value": "0x5374696C6C20646F65736E2774206B6E6F7720776869636820706C6179657220"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2322": {
      "op": "DUP3"
    },
    "2323": {
      "op": "ADD"
    },
    "2324": {
      "op": "MSTORE"
    },
    "2325": {
      "op": "PUSH9",
      "value": "0x34B9903BB4B73732B9"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "MSTORE"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2345": {
      "op": "ADD"
    },
    "2346": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "2349": {
      "op": "JUMP"
    },
    "2350": {
      "fn": "CardGame.endGame",
      "offset": [
        12001,
        12124
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2351": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x10"
    },
    "2353": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2363": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2364": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "AND",
      "path": "7"
    },
    "2365": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2367": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2368": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2369": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2370": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12269
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2372": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2374": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2375": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2376": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2377": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2379": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2380": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2381": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2382": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2383": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2385": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2386": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2387": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2388": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2389": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2390": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2391": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2392": {
      "fn": "CardGame.endGame",
      "offset": [
        12298,
        12321
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2393": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2394": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2395": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2404": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2405": {
      "fn": "CardGame.endGame",
      "offset": [
        12239,
        12249
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2406": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2408": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2409": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ADD",
      "path": "7"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2412": {
      "fn": "CardGame.endGame",
      "offset": [
        12263,
        12284
      ],
      "op": "AND",
      "path": "7"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2415": {
      "op": "DUP5"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2420": {
      "op": "DUP4"
    },
    "2421": {
      "op": "ADD"
    },
    "2422": {
      "op": "MSTORE"
    },
    "2423": {
      "fn": "CardGame.endGame",
      "offset": [
        12198,
        12211
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2424": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12225
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "2429": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12225
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2435": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2437": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2438": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2439": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2440": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "SUB",
      "path": "7"
    },
    "2441": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2442": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2444": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2445": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "GAS",
      "path": "7"
    },
    "2446": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "CALL",
      "path": "7"
    },
    "2447": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2448": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2449": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2450": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x99F"
    },
    "2453": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2454": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2455": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2457": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2458": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2459": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2460": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2462": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2463": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2464": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "POP",
      "path": "7"
    },
    "2465": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "POP",
      "path": "7"
    },
    "2466": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "POP",
      "path": "7"
    },
    "2467": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "POP",
      "path": "7"
    },
    "2468": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2470": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2471": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2472": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2474": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "NOT",
      "path": "7"
    },
    "2475": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2477": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2478": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ADD",
      "path": "7"
    },
    "2479": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "AND",
      "path": "7"
    },
    "2480": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2481": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ADD",
      "path": "7"
    },
    "2482": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2483": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2485": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2486": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "POP",
      "path": "7"
    },
    "2487": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2488": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "ADD",
      "path": "7"
    },
    "2489": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2490": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C3"
    },
    "2493": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2494": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2495": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "2498": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        12191,
        12331
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2499": {
      "fn": "CardGame.endGame",
      "offset": [
        12191,
        12331
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2500": {
      "op": "POP"
    },
    "2501": {
      "fn": "CardGame.endGame",
      "offset": [
        12442,
        12455
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x10"
    },
    "2503": {
      "fn": "CardGame.endGame",
      "offset": [
        12442,
        12455
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "fn": "CardGame.endGame",
      "offset": [
        12442,
        12455
      ],
      "op": "AND",
      "path": "7"
    },
    "2513": {
      "fn": "CardGame.endGame",
      "offset": [
        12459,
        12460
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2515": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2516": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2517": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2518": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12441
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2520": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2522": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2523": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2525": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2526": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12456
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2527": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12460
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2528": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12460
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2529": {
      "fn": "CardGame.endGame",
      "offset": [
        12433,
        12460
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2530": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2531": {
      "fn": "CardGame.endGame",
      "offset": [
        12570,
        12583
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x10"
    },
    "2533": {
      "fn": "CardGame.endGame",
      "offset": [
        12570,
        12583
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "CardGame.endGame",
      "offset": [
        12570,
        12583
      ],
      "op": "AND",
      "path": "7"
    },
    "2543": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2545": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2546": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2547": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2548": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12569
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2550": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2552": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2553": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2555": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2556": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12584
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2557": {
      "fn": "CardGame.endGame",
      "offset": [
        12562,
        12591
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2558": {
      "fn": "CardGame.endGame",
      "offset": [
        12554,
        12591
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2559": {
      "fn": "CardGame.endGame",
      "offset": [
        12554,
        12591
      ],
      "op": "LT",
      "path": "7"
    },
    "2560": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2561": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA8E"
    },
    "2564": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2565": {
      "fn": "CardGame.endGame",
      "offset": [
        12662,
        12675
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x10"
    },
    "2567": {
      "fn": "CardGame.endGame",
      "offset": [
        12662,
        12675
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "CardGame.endGame",
      "offset": [
        12662,
        12675
      ],
      "op": "AND",
      "path": "7"
    },
    "2577": {
      "fn": "CardGame.endGame",
      "offset": [
        12637,
        12651
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2579": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2580": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2581": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2582": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2584": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2586": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2587": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2589": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2590": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12676
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2591": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2592": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2593": {
      "fn": "CardGame.endGame",
      "offset": [
        12677,
        12682
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2594": {
      "fn": "CardGame.endGame",
      "offset": [
        12677,
        12682
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2595": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2596": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "LT",
      "path": "7"
    },
    "2597": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA30"
    },
    "2600": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2601": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA30"
    },
    "2604": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "2607": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        12654,
        12683
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2608": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2609": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2611": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2612": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2613": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2614": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2616": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2617": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2618": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2619": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2620": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2621": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "ADD",
      "path": "7"
    },
    "2622": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2623": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x10"
    },
    "2625": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2626": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2633": {
      "op": "SHL"
    },
    "2634": {
      "op": "SUB"
    },
    "2635": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2636": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2637": {
      "fn": "CardGame.endGame",
      "offset": [
        12711,
        12724
      ],
      "op": "AND",
      "path": "7"
    },
    "2638": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2639": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2640": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2642": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2643": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2644": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2646": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2647": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2648": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12725
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2649": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2650": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2651": {
      "fn": "CardGame.endGame",
      "offset": [
        12654,
        12683
      ],
      "op": "AND",
      "path": "7"
    },
    "2652": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2653": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2654": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2655": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2656": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2657": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2658": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2659": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2660": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12733
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2661": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12737
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2662": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12737
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2663": {
      "fn": "CardGame.endGame",
      "offset": [
        12697,
        12737
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2664": {
      "fn": "CardGame.endGame",
      "offset": [
        12769,
        12782
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 12
    },
    "2665": {
      "fn": "CardGame.endGame",
      "offset": [
        12769,
        12782
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2666": {
      "fn": "CardGame.endGame",
      "offset": [
        12769,
        12782
      ],
      "op": "AND",
      "path": "7"
    },
    "2667": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2668": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2669": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12768
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2671": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2672": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2673": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2674": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2675": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12783
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2676": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2677": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2678": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2679": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2680": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2681": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2682": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12791
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2683": {
      "fn": "CardGame.endGame",
      "offset": [
        12751,
        12795
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 13
    },
    "2686": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA86"
    },
    "2689": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2690": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2349"
    },
    "2693": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        12605,
        12612
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2694": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2695": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2696": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "POP",
      "path": "7"
    },
    "2697": {
      "fn": "CardGame.endGame",
      "offset": [
        12605,
        12612
      ],
      "op": "POP",
      "path": "7"
    },
    "2698": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9E2"
    },
    "2701": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2702": {
      "fn": "CardGame.endGame",
      "offset": [
        12505,
        12806
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12832
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0xF"
    },
    "2706": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12845
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2707": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12845
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2714": {
      "op": "SHL"
    },
    "2715": {
      "op": "SUB"
    },
    "2716": {
      "op": "NOT"
    },
    "2717": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12845
      ],
      "op": "AND",
      "path": "7"
    },
    "2718": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12845
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2719": {
      "fn": "CardGame.endGame",
      "offset": [
        12815,
        12845
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2720": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 15,
      "value": "0x10"
    },
    "2722": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2723": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "op": "SUB"
    },
    "2732": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2733": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2734": {
      "fn": "CardGame.endGame",
      "offset": [
        12869,
        12882
      ],
      "op": "AND",
      "path": "7"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2737": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2738": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2739": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2740": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12868
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2742": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2744": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2745": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2746": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2747": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2749": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2750": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2751": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12883
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2752": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12887
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2753": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12887
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2754": {
      "fn": "CardGame.endGame",
      "offset": [
        12855,
        12887
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2755": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 16
    },
    "2756": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2757": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2758": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2759": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2760": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2761": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2762": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "ADD",
      "path": "7"
    },
    "2763": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2764": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2765": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2766": {
      "fn": "CardGame.endGame",
      "offset": [
        12905,
        12918
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2767": {
      "fn": "CardGame.endGame",
      "offset": [
        12905,
        12918
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2768": {
      "fn": "CardGame.endGame",
      "offset": [
        12905,
        12918
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2769": {
      "fn": "CardGame.endGame",
      "offset": [
        12905,
        12918
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2770": {
      "fn": "CardGame.endGame",
      "offset": [
        12905,
        12918
      ],
      "op": "AND",
      "path": "7"
    },
    "2771": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2772": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2773": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2775": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2776": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2777": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2778": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2779": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12919
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2780": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2781": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2782": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE7"
    },
    "2785": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2786": {
      "fn": "CardGame.endGame",
      "offset": [
        12922,
        12938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2787": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA6"
    },
    "2790": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        12897,
        12938
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2791": {
      "fn": "CardGame.endGame",
      "offset": [
        12897,
        12938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x40"
    },
    "2795": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2796": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2797": {
      "fn": "CardGame.endGame",
      "offset": [
        12991,
        12992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2799": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2800": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2801": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2802": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2804": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2805": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2806": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "ADD",
      "path": "7"
    },
    "2807": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2808": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2809": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2810": {
      "fn": "CardGame.endGame",
      "offset": [
        12960,
        12973
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x10"
    },
    "2812": {
      "fn": "CardGame.endGame",
      "offset": [
        12960,
        12973
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "CardGame.endGame",
      "offset": [
        12960,
        12973
      ],
      "op": "AND",
      "path": "7"
    },
    "2822": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2823": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2824": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12959
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "2826": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2827": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2828": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2829": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2830": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2831": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12974
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2832": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2833": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2834": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB1B"
    },
    "2837": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2838": {
      "fn": "CardGame.endGame",
      "offset": [
        12977,
        12993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2839": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x200B"
    },
    "2842": {
      "fn": "CardGame.endGame",
      "jump": "i",
      "offset": [
        12948,
        12993
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2843": {
      "fn": "CardGame.endGame",
      "offset": [
        12948,
        12993
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x10"
    },
    "2847": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2848": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "SUB"
    },
    "2857": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "AND",
      "path": "7"
    },
    "2858": {
      "fn": "CardGame.endGame",
      "offset": [
        13035,
        13036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2860": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2861": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2862": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2863": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13009
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "2865": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2867": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2868": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2870": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2871": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13024
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2872": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2873": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "op": "SUB"
    },
    "2882": {
      "op": "NOT"
    },
    "2883": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2884": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2885": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "AND",
      "path": "7"
    },
    "2886": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2887": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2888": {
      "fn": "CardGame.endGame",
      "offset": [
        13003,
        13037
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2889": {
      "fn": "CardGame.endGame",
      "offset": [
        13047,
        13073
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 19
    },
    "2890": {
      "fn": "CardGame.endGame",
      "offset": [
        13047,
        13073
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2891": {
      "fn": "CardGame.endGame",
      "offset": [
        13047,
        13073
      ],
      "op": "AND",
      "path": "7"
    },
    "2892": {
      "fn": "CardGame.endGame",
      "offset": [
        13047,
        13073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2893": {
      "fn": "CardGame.endGame",
      "offset": [
        13047,
        13073
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2894": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13093
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x4"
    },
    "2896": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2897": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2898": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2900": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2901": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2904": {
      "op": "NOT"
    },
    "2905": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "AND",
      "path": "7"
    },
    "2906": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2907": {
      "fn": "CardGame.endGame",
      "offset": [
        13010,
        13023
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2908": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2909": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "MUL",
      "path": "7"
    },
    "2910": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "OR",
      "path": "7"
    },
    "2911": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2912": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2913": {
      "fn": "CardGame.endGame",
      "offset": [
        13083,
        13113
      ],
      "op": "POP",
      "path": "7"
    },
    "2914": {
      "fn": "CardGame.endGame",
      "jump": "o",
      "offset": [
        11757,
        13120
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2915": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2916": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2918": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2928": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2929": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2930": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8D"
    },
    "2933": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2934": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2936": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2945": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2946": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2948": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2949": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "2952": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2953": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "2956": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2957": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0xB97"
    },
    "2961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A67"
    },
    "2966": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2967": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2968": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2969": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2970": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2972": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2982": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2983": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2984": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC3"
    },
    "2987": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2988": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2990": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2999": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3000": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3002": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3003": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "3006": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3007": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "3010": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3011": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "op": "SUB"
    },
    "3020": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 22
    },
    "3021": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3022": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "AND",
      "path": "7"
    },
    "3023": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3025": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3026": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3027": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3028": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3030": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3032": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3033": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3035": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3036": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4049
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3037": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3038": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3045": {
      "op": "SHL"
    },
    "3046": {
      "op": "SUB"
    },
    "3047": {
      "op": "NOT"
    },
    "3048": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "AND",
      "path": "7"
    },
    "3049": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3050": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3051": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3052": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "AND",
      "path": "7"
    },
    "3053": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "OR",
      "path": "7"
    },
    "3054": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3055": {
      "fn": "CardGame.setPriceFeedContract",
      "offset": [
        4026,
        4062
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3056": {
      "fn": "CardGame.setPriceFeedContract",
      "jump": "o",
      "offset": [
        3913,
        4069
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3057": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3058": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9034
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0xF"
    },
    "3060": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3061": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "op": "SUB"
    },
    "3070": {
      "op": "NOT"
    },
    "3071": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "AND",
      "path": "7"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "op": "SUB"
    },
    "3080": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3081": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "AND",
      "path": "7"
    },
    "3082": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "OR",
      "path": "7"
    },
    "3083": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3084": {
      "fn": "CardGame.drawCards",
      "offset": [
        9017,
        9043
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3085": {
      "fn": "CardGame.drawCards",
      "offset": [
        9092,
        9099
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3087": {
      "fn": "CardGame.drawCards",
      "offset": [
        9092,
        9099
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3088": {
      "fn": "CardGame.drawCards",
      "offset": [
        9101,
        9104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3090": {
      "fn": "CardGame.drawCards",
      "offset": [
        9101,
        9104
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "SWAP2"
    },
    "3094": {
      "fn": "CardGame.drawCards",
      "offset": [
        9074,
        9105
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1E"
    },
    "3097": {
      "fn": "CardGame.drawCards",
      "offset": [
        9074,
        9105
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3098": {
      "fn": "CardGame.drawCards",
      "offset": [
        9074,
        9091
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AB9"
    },
    "3101": {
      "fn": "CardGame.drawCards",
      "jump": "i",
      "offset": [
        9074,
        9105
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3102": {
      "fn": "CardGame.drawCards",
      "offset": [
        9074,
        9105
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3103": {
      "fn": "CardGame.drawCards",
      "offset": [
        9054,
        9105
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3104": {
      "fn": "CardGame.drawCards",
      "offset": [
        9054,
        9105
      ],
      "op": "POP",
      "path": "7"
    },
    "3105": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 24,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "3138": {
      "fn": "CardGame.drawCards",
      "offset": [
        9140,
        9149
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3139": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3141": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3142": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC51"
    },
    "3145": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3150": {
      "op": "ADD"
    },
    "3151": {
      "op": "SWAP1"
    },
    "3152": {
      "op": "JUMP"
    },
    "3153": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3154": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3156": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3157": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3158": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3159": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "SUB",
      "path": "7"
    },
    "3160": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3161": {
      "fn": "CardGame.drawCards",
      "offset": [
        9120,
        9150
      ],
      "op": "LOG1",
      "path": "7"
    },
    "3162": {
      "fn": "CardGame.drawCards",
      "offset": [
        9007,
        9502
      ],
      "op": "POP",
      "path": "7"
    },
    "3163": {
      "fn": "CardGame.drawCards",
      "offset": [
        8965,
        9502
      ],
      "op": "POP",
      "path": "7"
    },
    "3164": {
      "fn": "CardGame.drawCards",
      "jump": "o",
      "offset": [
        8965,
        9502
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3165": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3166": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 25
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "3208": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "3"
    },
    "3209": {
      "branch": 109,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "3"
    },
    "3210": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD5"
    },
    "3213": {
      "branch": 109,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3214": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3216": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3225": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3228": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3230": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3231": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "3"
    },
    "3232": {
      "op": "MSTORE"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57F"
    },
    "3284": {
      "op": "JUMP"
    },
    "3285": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3286": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x5FD"
    },
    "3289": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3290": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3291": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C30"
    },
    "3294": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3295": {
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3296": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3298": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3300": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3301": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3302": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3304": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3305": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3307": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3309": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3310": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3311": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3312": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3313": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3314": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "LT",
      "path": "7"
    },
    "3315": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCFB"
    },
    "3318": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3319": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3321": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3322": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3323": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3324": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3326": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3327": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3328": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3329": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3331": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3332": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3333": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3334": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "ADD",
      "path": "7"
    },
    "3335": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "offset": [
        1470,
        1514
      ],
      "op": "AND",
      "path": "7"
    },
    "3345": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "offset": [
        1470,
        1514
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3348": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1470,
        1514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "jump": "o",
      "offset": [
        1470,
        1514
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3351": {
      "fn": "CardGame.allowToken",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3352": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3354": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3364": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3365": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3366": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD41"
    },
    "3369": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3370": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3372": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3381": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3382": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3384": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3385": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "3388": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3389": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "3392": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3393": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3394": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3239
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x9"
    },
    "3396": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3397": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3398": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3400": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3401": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "ADD",
      "path": "7"
    },
    "3402": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3403": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3406": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3407": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3408": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3409": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3410": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "3443": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "ADD",
      "path": "7"
    },
    "3444": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3445": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "op": "NOT"
    },
    "3455": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "AND",
      "path": "7"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3462": {
      "op": "SHL"
    },
    "3463": {
      "op": "SUB"
    },
    "3464": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3465": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3466": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3467": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "AND",
      "path": "7"
    },
    "3468": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3469": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3470": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3471": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "OR",
      "path": "7"
    },
    "3472": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3473": {
      "fn": "CardGame.allowToken",
      "offset": [
        3226,
        3252
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3474": {
      "fn": "CardGame.allowToken",
      "jump": "o",
      "offset": [
        3163,
        3259
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3475": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6104,
        6948
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3476": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6212,
        6227
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x0"
    },
    "3478": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3480": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6208
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3481": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3483": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6208
      ],
      "op": "AND",
      "path": "7"
    },
    "3484": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3486": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3487": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "GT",
      "path": "7"
    },
    "3488": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3489": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDAC"
    },
    "3492": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3493": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDAC"
    },
    "3496": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "3499": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6198,
        6227
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3500": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3501": {
      "branch": 87,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6227
      ],
      "op": "EQ",
      "path": "7"
    },
    "3502": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3503": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDCE"
    },
    "3506": {
      "branch": 87,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6245,
        6262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3510": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6241
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3512": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6241
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3513": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6241
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3515": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6241
      ],
      "op": "AND",
      "path": "7"
    },
    "3516": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3518": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3519": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "GT",
      "path": "7"
    },
    "3520": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3521": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDCC"
    },
    "3524": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3525": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDCC"
    },
    "3528": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "3531": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3532": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3533": {
      "branch": 88,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6231,
        6262
      ],
      "op": "EQ",
      "path": "7"
    },
    "3534": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6198,
        6262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3535": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2F"
    },
    "3538": {
      "branch": 88,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3539": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3541": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3550": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3553": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3555": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3556": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "ADD",
      "path": "7"
    },
    "3557": {
      "op": "MSTORE"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3562": {
      "op": "DUP3"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "MSTORE"
    },
    "3565": {
      "op": "PUSH32",
      "value": "0x596F752063616E2774206765742074686520726566756E642061667465722067"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3600": {
      "op": "DUP3"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "PUSH12",
      "value": "0x616D65207374617274656421"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3618": {
      "op": "SHL"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3626": {
      "op": "ADD"
    },
    "3627": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "3630": {
      "op": "JUMP"
    },
    "3631": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6177,
        6332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3638": {
      "op": "SHL"
    },
    "3639": {
      "op": "SUB"
    },
    "3640": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 29
    },
    "3641": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "AND",
      "path": "7"
    },
    "3642": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3644": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3645": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3646": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3647": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6376
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3649": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3651": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3652": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3653": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3654": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3656": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3657": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3658": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6384
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3659": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6385,
        6395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3660": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3661": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3662": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3663": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3664": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3665": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3666": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3667": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6396
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3668": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6407
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3669": {
      "op": "GT"
    },
    "3670": {
      "branch": 89,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6363,
        6407
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3671": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEAE"
    },
    "3674": {
      "branch": 89,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3675": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3677": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3686": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3689": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3691": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3692": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "ADD",
      "path": "7"
    },
    "3693": {
      "op": "MSTORE"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3698": {
      "op": "DUP3"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "PUSH32",
      "value": "0x596F75206469646E27742062657420746F6B656E206F662074686520616D6F75"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "MSTORE"
    },
    "3739": {
      "op": "PUSH3",
      "value": "0x6E7421"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3745": {
      "op": "SHL"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3748": {
      "op": "DUP3"
    },
    "3749": {
      "op": "ADD"
    },
    "3750": {
      "op": "MSTORE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "3757": {
      "op": "JUMP"
    },
    "3758": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6342,
        6468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "SUB"
    },
    "3767": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 30
    },
    "3768": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "AND",
      "path": "7"
    },
    "3769": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3771": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3772": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3773": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3774": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "3776": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3778": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3779": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3780": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3781": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3783": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3784": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3785": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6524
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3786": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6525,
        6535
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3787": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3788": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3789": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3790": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3791": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3792": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3793": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3794": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6536
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3795": {
      "branch": 90,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6499,
        6541
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3796": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2D"
    },
    "3799": {
      "branch": 90,
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3800": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3802": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3811": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3816": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3817": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "ADD",
      "path": "7"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "PUSH32",
      "value": "0x596F75206472657720796F757220636172642C20796F752063616E2774207265"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "ADD"
    },
    "3863": {
      "op": "MSTORE"
    },
    "3864": {
      "op": "PUSH5",
      "value": "0x66756E6421"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3875": {
      "op": "DUP3"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "3884": {
      "op": "JUMP"
    },
    "3885": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6478,
        6604
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3886": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x40"
    },
    "3888": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3889": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3896": {
      "op": "SHL"
    },
    "3897": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3898": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3899": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6638,
        6648
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3900": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3902": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3903": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3907": {
      "op": "DUP2"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "DUP4"
    },
    "3910": {
      "op": "SWAP1"
    },
    "3911": {
      "op": "MSTORE"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3918": {
      "op": "SHL"
    },
    "3919": {
      "op": "SUB"
    },
    "3920": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6637
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3921": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6637
      ],
      "op": "AND",
      "path": "7"
    },
    "3922": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3923": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6637
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "3928": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3934": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3936": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3937": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3938": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3939": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "SUB",
      "path": "7"
    },
    "3940": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3941": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3943": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3944": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "GAS",
      "path": "7"
    },
    "3945": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "CALL",
      "path": "7"
    },
    "3946": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3947": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3948": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3949": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF7A"
    },
    "3952": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3953": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3954": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3956": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3957": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3958": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3959": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3961": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3962": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3963": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "3964": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "3965": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "3966": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "3967": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3969": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3970": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3971": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3973": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "NOT",
      "path": "7"
    },
    "3974": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3976": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3977": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "3978": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "AND",
      "path": "7"
    },
    "3979": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3980": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "3981": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3982": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3984": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3985": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "3986": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3987": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "3988": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3989": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF9E"
    },
    "3992": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3993": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3994": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "3997": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6614,
        6658
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3998": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6614,
        6658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4006": {
      "op": "SHL"
    },
    "4007": {
      "op": "SUB"
    },
    "4008": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 32
    },
    "4009": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "AND",
      "path": "7"
    },
    "4010": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4012": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4013": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4014": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4015": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6729
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4017": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4019": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4020": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4021": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4022": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4024": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4025": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4026": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6737
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4027": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6738,
        6748
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4028": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4029": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4030": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4031": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4032": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4033": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4034": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4035": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6749
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4036": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFCE"
    },
    "4039": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4040": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4041": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6764,
        6771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4042": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2364"
    },
    "4045": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6716,
        6771
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4046": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6716,
        6771
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4056": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "AND",
      "path": "7"
    },
    "4057": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4059": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4060": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4061": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4062": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4064": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4066": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4067": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4068": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4069": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4071": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4072": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4073": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6689
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4074": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6690,
        6700
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4075": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4076": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4077": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4078": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4079": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4080": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4081": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6701
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4082": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6771
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4083": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4084": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6771
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4085": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6668,
        6771
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4086": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 33
    },
    "4087": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4088": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4089": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4091": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4092": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4093": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4094": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4095": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6816
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4096": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100A"
    },
    "4099": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4100": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6819,
        6826
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4101": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6819,
        6826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4102": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2364"
    },
    "4105": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6800,
        6826
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4106": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6800,
        6826
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4113": {
      "op": "SHL"
    },
    "4114": {
      "op": "SUB"
    },
    "4115": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4116": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "AND",
      "path": "7"
    },
    "4117": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4119": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4120": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4121": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4122": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6789
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4124": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4126": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4127": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4128": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4129": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4131": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4132": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4133": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6797
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4134": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6826
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4135": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4136": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6826
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4137": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6781,
        6826
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4138": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6853
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4140": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6861
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4141": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6861
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4142": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6861
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4143": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6861
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4144": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6861
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4145": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6862,
        6872
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4146": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4147": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4148": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4149": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4150": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4151": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6840,
        6873
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4152": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6836,
        6942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FD"
    },
    "4155": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6836,
        6942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4156": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6894,
        6931
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 34,
      "value": "0x5FD"
    },
    "4159": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6912,
        6918
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4160": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6920,
        6930
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4161": {
      "fn": "CardGame.repayBetToken",
      "offset": [
        6894,
        6911
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DA7"
    },
    "4164": {
      "fn": "CardGame.repayBetToken",
      "jump": "i",
      "offset": [
        6894,
        6931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4165": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4166": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4168": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4169": {
      "fn": "CardGame.getWinner",
      "offset": [
        10453,
        10460
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4171": {
      "fn": "CardGame.getWinner",
      "offset": [
        10453,
        10460
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "SUB"
    },
    "4180": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4181": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4182": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4183": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1072"
    },
    "4186": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4187": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4189": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4196": {
      "op": "SHL"
    },
    "4197": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4198": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4199": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4201": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4202": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "4205": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4206": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "4209": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4210": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4211": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10482
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x4"
    },
    "4213": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4214": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4217": {
      "op": "NOT"
    },
    "4218": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "AND",
      "path": "7"
    },
    "4219": {
      "fn": "CardGame.getWinner",
      "offset": [
        10485,
        10514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4221": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "OR",
      "path": "7"
    },
    "4222": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4223": {
      "fn": "CardGame.getWinner",
      "offset": [
        10472,
        10514
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4224": {
      "fn": "CardGame.getWinner",
      "offset": [
        10703,
        10716
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x10"
    },
    "4226": {
      "fn": "CardGame.getWinner",
      "offset": [
        10703,
        10716
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "CardGame.getWinner",
      "offset": [
        10703,
        10716
      ],
      "op": "AND",
      "path": "7"
    },
    "4236": {
      "branch": 91,
      "fn": "CardGame.getWinner",
      "offset": [
        10703,
        10730
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4237": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1100"
    },
    "4240": {
      "branch": 91,
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4241": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4243": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4244": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4253": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4256": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4258": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4259": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "ADD",
      "path": "7"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "ADD"
    },
    "4265": {
      "op": "SWAP2"
    },
    "4266": {
      "op": "SWAP1"
    },
    "4267": {
      "op": "SWAP2"
    },
    "4268": {
      "op": "MSTORE"
    },
    "4269": {
      "op": "PUSH32",
      "value": "0x4265666F72652067616D65206973206E6F74206F766572207965742C206F776E"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4304": {
      "op": "DUP3"
    },
    "4305": {
      "op": "ADD"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH32",
      "value": "0x6572206861766520746F207061792072657761726420746F2077696E6E657221"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4342": {
      "op": "DUP3"
    },
    "4343": {
      "op": "ADD"
    },
    "4344": {
      "op": "MSTORE"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "4351": {
      "op": "JUMP"
    },
    "4352": {
      "fn": "CardGame.getWinner",
      "offset": [
        10682,
        10820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4353": {
      "fn": "CardGame.getWinner",
      "offset": [
        10851,
        10874
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 37,
      "value": "0x1109"
    },
    "4356": {
      "fn": "CardGame.getWinner",
      "offset": [
        10867,
        10873
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4357": {
      "fn": "CardGame.getWinner",
      "offset": [
        10851,
        10866
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0F"
    },
    "4360": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        10851,
        10874
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4361": {
      "branch": 92,
      "fn": "CardGame.getWinner",
      "offset": [
        10851,
        10874
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4362": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1164"
    },
    "4365": {
      "branch": 92,
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4366": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4368": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4375": {
      "op": "SHL"
    },
    "4376": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4377": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4380": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4382": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4383": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "ADD",
      "path": "7"
    },
    "4384": {
      "op": "MSTORE"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4389": {
      "op": "DUP3"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "op": "MSTORE"
    },
    "4392": {
      "op": "PUSH32",
      "value": "0x416C6C207061727469636970616E7473206E6565647320746F20647261772061"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4427": {
      "op": "DUP3"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "PUSH6",
      "value": "0x206361726421"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4442": {
      "op": "DUP3"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "MSTORE"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "4451": {
      "op": "JUMP"
    },
    "4452": {
      "fn": "CardGame.getWinner",
      "offset": [
        10830,
        10938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4453": {
      "fn": "CardGame.getWinner",
      "offset": [
        11150,
        11161
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4455": {
      "fn": "CardGame.getWinner",
      "offset": [
        11181,
        11190
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4456": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "op": "SUB"
    },
    "4465": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4466": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "AND",
      "path": "7"
    },
    "4467": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4469": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4470": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4471": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4472": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11211
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "4474": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4476": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4477": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4479": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4480": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11219
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4481": {
      "fn": "CardGame.getWinner",
      "offset": [
        11200,
        11226
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4482": {
      "fn": "CardGame.getWinner",
      "offset": [
        11196,
        11226
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4483": {
      "fn": "CardGame.getWinner",
      "offset": [
        11196,
        11226
      ],
      "op": "LT",
      "path": "7"
    },
    "4484": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4485": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x134C"
    },
    "4488": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4495": {
      "op": "SHL"
    },
    "4496": {
      "op": "SUB"
    },
    "4497": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4498": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "AND",
      "path": "7"
    },
    "4499": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4501": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4502": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4503": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4504": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "4506": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4508": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4509": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4511": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4512": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4513": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4514": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4515": {
      "fn": "CardGame.getWinner",
      "offset": [
        11276,
        11279
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4516": {
      "fn": "CardGame.getWinner",
      "offset": [
        11276,
        11279
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4517": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11270
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4518": {
      "fn": "CardGame.getWinner",
      "offset": [
        11271,
        11272
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4519": {
      "fn": "CardGame.getWinner",
      "offset": [
        11271,
        11272
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4520": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4521": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "LT",
      "path": "7"
    },
    "4522": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11B5"
    },
    "4525": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4526": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11B5"
    },
    "4529": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "4532": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11251,
        11273
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4533": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4534": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4535": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4537": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4538": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4540": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4542": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4543": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "ADD",
      "path": "7"
    },
    "4544": {
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11273
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4545": {
      "branch": 93,
      "fn": "CardGame.getWinner",
      "offset": [
        11251,
        11279
      ],
      "op": "GT",
      "path": "7"
    },
    "4546": {
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4547": {
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1270"
    },
    "4550": {
      "branch": 93,
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4557": {
      "op": "SHL"
    },
    "4558": {
      "op": "SUB"
    },
    "4559": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 38
    },
    "4560": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "AND",
      "path": "7"
    },
    "4561": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4563": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4564": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4565": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4566": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11316
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "4568": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4570": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4571": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4573": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4574": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11324
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4575": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4576": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4577": {
      "fn": "CardGame.getWinner",
      "offset": [
        11325,
        11326
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4578": {
      "fn": "CardGame.getWinner",
      "offset": [
        11325,
        11326
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4579": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4580": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "LT",
      "path": "7"
    },
    "4581": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F0"
    },
    "4584": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4585": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F0"
    },
    "4588": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "4591": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11305,
        11327
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4592": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4593": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4594": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4596": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4597": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4599": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4601": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4602": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "ADD",
      "path": "7"
    },
    "4603": {
      "fn": "CardGame.getWinner",
      "offset": [
        11305,
        11327
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4604": {
      "fn": "CardGame.getWinner",
      "offset": [
        11299,
        11327
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4605": {
      "fn": "CardGame.getWinner",
      "offset": [
        11299,
        11327
      ],
      "op": "POP",
      "path": "7"
    },
    "4606": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11369
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x8"
    },
    "4608": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4610": {
      "fn": "CardGame.getWinner",
      "offset": [
        11370,
        11376
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "SUB"
    },
    "4619": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "AND",
      "path": "7"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "op": "SUB"
    },
    "4628": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "AND",
      "path": "7"
    },
    "4629": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4630": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4631": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4633": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "ADD",
      "path": "7"
    },
    "4634": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4635": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4636": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4637": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4639": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "ADD",
      "path": "7"
    },
    "4640": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4642": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11377
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4643": {
      "fn": "CardGame.getWinner",
      "offset": [
        11378,
        11379
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4644": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4645": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4646": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4647": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "LT",
      "path": "7"
    },
    "4648": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1233"
    },
    "4651": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4652": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1233"
    },
    "4655": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "4658": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11362,
        11380
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4659": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4660": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4662": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4663": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4664": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4665": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4667": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4668": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4669": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4670": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4671": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4672": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "ADD",
      "path": "7"
    },
    "4673": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4680": {
      "op": "SHL"
    },
    "4681": {
      "op": "SUB"
    },
    "4682": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4683": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4684": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "AND",
      "path": "7"
    },
    "4685": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4686": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4687": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11351
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "4689": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4690": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4691": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4692": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4694": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4695": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4696": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11359
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4697": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4698": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4705": {
      "op": "SHL"
    },
    "4706": {
      "op": "SUB"
    },
    "4707": {
      "op": "NOT"
    },
    "4708": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "AND",
      "path": "7"
    },
    "4709": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4710": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4711": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4712": {
      "fn": "CardGame.getWinner",
      "offset": [
        11362,
        11380
      ],
      "op": "AND",
      "path": "7"
    },
    "4713": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "OR",
      "path": "7"
    },
    "4714": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4715": {
      "fn": "CardGame.getWinner",
      "offset": [
        11345,
        11380
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4716": {
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x133A"
    },
    "4719": {
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4720": {
      "fn": "CardGame.getWinner",
      "offset": [
        11247,
        11672
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4727": {
      "op": "SHL"
    },
    "4728": {
      "op": "SUB"
    },
    "4729": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4730": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "AND",
      "path": "7"
    },
    "4731": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4733": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4734": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4735": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4736": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "4738": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4740": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4741": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4743": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4744": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4745": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4746": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4747": {
      "fn": "CardGame.getWinner",
      "offset": [
        11431,
        11434
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4748": {
      "fn": "CardGame.getWinner",
      "offset": [
        11431,
        11434
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4749": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11424
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4750": {
      "fn": "CardGame.getWinner",
      "offset": [
        11425,
        11426
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4751": {
      "fn": "CardGame.getWinner",
      "offset": [
        11425,
        11426
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4752": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4753": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "LT",
      "path": "7"
    },
    "4754": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x129D"
    },
    "4757": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4758": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x129D"
    },
    "4761": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "4764": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11405,
        11427
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4765": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4766": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4767": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4769": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4770": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4772": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4774": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4775": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "ADD",
      "path": "7"
    },
    "4776": {
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11427
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4777": {
      "branch": 94,
      "fn": "CardGame.getWinner",
      "offset": [
        11405,
        11434
      ],
      "op": "EQ",
      "path": "7"
    },
    "4778": {
      "fn": "CardGame.getWinner",
      "offset": [
        11401,
        11672
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4779": {
      "fn": "CardGame.getWinner",
      "offset": [
        11401,
        11672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x133A"
    },
    "4782": {
      "branch": 94,
      "fn": "CardGame.getWinner",
      "offset": [
        11401,
        11672
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4783": {
      "fn": "CardGame.getWinner",
      "offset": [
        11454,
        11467
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4785": {
      "fn": "CardGame.getWinner",
      "offset": [
        11470,
        11477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12BB"
    },
    "4788": {
      "fn": "CardGame.getWinner",
      "offset": [
        11476,
        11477
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4790": {
      "fn": "CardGame.getWinner",
      "offset": [
        11470,
        11473
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4791": {
      "fn": "CardGame.getWinner",
      "offset": [
        11470,
        11477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x237B"
    },
    "4794": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11470,
        11477
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4795": {
      "fn": "CardGame.getWinner",
      "offset": [
        11470,
        11477
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4796": {
      "fn": "CardGame.getWinner",
      "offset": [
        11454,
        11477
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4797": {
      "op": "POP"
    },
    "4798": {
      "branch": 95,
      "fn": "CardGame.getWinner",
      "offset": [
        11499,
        11509
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4799": {
      "fn": "CardGame.getWinner",
      "offset": [
        11495,
        11658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1329"
    },
    "4802": {
      "branch": 95,
      "fn": "CardGame.getWinner",
      "offset": [
        11495,
        11658
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4809": {
      "op": "SHL"
    },
    "4810": {
      "op": "SUB"
    },
    "4811": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 40
    },
    "4812": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "AND",
      "path": "7"
    },
    "4813": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4815": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4816": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4817": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4818": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11557
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4820": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4822": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4823": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4825": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4826": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11565
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4827": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4828": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4829": {
      "fn": "CardGame.getWinner",
      "offset": [
        11566,
        11567
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4830": {
      "fn": "CardGame.getWinner",
      "offset": [
        11566,
        11567
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4831": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4832": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "LT",
      "path": "7"
    },
    "4833": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12EC"
    },
    "4836": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4837": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12EC"
    },
    "4840": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "4843": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11550,
        11568
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4844": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4845": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4847": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4848": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4849": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4850": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4852": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4853": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4854": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4855": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4856": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4857": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "ADD",
      "path": "7"
    },
    "4858": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4865": {
      "op": "SHL"
    },
    "4866": {
      "op": "SUB"
    },
    "4867": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4868": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4869": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "AND",
      "path": "7"
    },
    "4870": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4871": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4872": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11539
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "4874": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4875": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4876": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4877": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4879": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4880": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4881": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11547
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4882": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4883": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4890": {
      "op": "SHL"
    },
    "4891": {
      "op": "SUB"
    },
    "4892": {
      "op": "NOT"
    },
    "4893": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "AND",
      "path": "7"
    },
    "4894": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4895": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4896": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4897": {
      "fn": "CardGame.getWinner",
      "offset": [
        11550,
        11568
      ],
      "op": "AND",
      "path": "7"
    },
    "4898": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "OR",
      "path": "7"
    },
    "4899": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4900": {
      "fn": "CardGame.getWinner",
      "offset": [
        11533,
        11568
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4901": {
      "fn": "CardGame.getWinner",
      "offset": [
        11495,
        11658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1338"
    },
    "4904": {
      "fn": "CardGame.getWinner",
      "offset": [
        11495,
        11658
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4905": {
      "fn": "CardGame.getWinner",
      "offset": [
        11495,
        11658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4906": {
      "fn": "CardGame.getWinner",
      "offset": [
        11597,
        11602
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4907": {
      "fn": "CardGame.getWinner",
      "offset": [
        11606,
        11607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4909": {
      "branch": 96,
      "fn": "CardGame.getWinner",
      "offset": [
        11597,
        11607
      ],
      "op": "EQ",
      "path": "7"
    },
    "4910": {
      "fn": "CardGame.getWinner",
      "offset": [
        11593,
        11658
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4911": {
      "fn": "CardGame.getWinner",
      "offset": [
        11593,
        11658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1338"
    },
    "4914": {
      "branch": 96,
      "fn": "CardGame.getWinner",
      "offset": [
        11593,
        11658
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4915": {
      "fn": "CardGame.getWinner",
      "offset": [
        11631,
        11639
      ],
      "op": "POP",
      "path": "7",
      "statement": 41
    },
    "4916": {
      "fn": "CardGame.getWinner",
      "offset": [
        11631,
        11639
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x133A"
    },
    "4919": {
      "fn": "CardGame.getWinner",
      "offset": [
        11631,
        11639
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4920": {
      "fn": "CardGame.getWinner",
      "offset": [
        11593,
        11658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4921": {
      "fn": "CardGame.getWinner",
      "offset": [
        11436,
        11672
      ],
      "op": "POP",
      "path": "7"
    },
    "4922": {
      "fn": "CardGame.getWinner",
      "offset": [
        11401,
        11672
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4923": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 42
    },
    "4924": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1344"
    },
    "4927": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4928": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2349"
    },
    "4931": {
      "fn": "CardGame.getWinner",
      "jump": "i",
      "offset": [
        11228,
        11231
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4932": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4933": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4934": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "POP",
      "path": "7"
    },
    "4935": {
      "fn": "CardGame.getWinner",
      "offset": [
        11228,
        11231
      ],
      "op": "POP",
      "path": "7"
    },
    "4936": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1168"
    },
    "4939": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4940": {
      "fn": "CardGame.getWinner",
      "offset": [
        11176,
        11682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11704
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x10"
    },
    "4945": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4946": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4953": {
      "op": "SHL"
    },
    "4954": {
      "op": "SUB"
    },
    "4955": {
      "op": "NOT"
    },
    "4956": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "AND",
      "path": "7"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "op": "SUB"
    },
    "4965": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4966": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4967": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "AND",
      "path": "7"
    },
    "4968": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4969": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4970": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "OR",
      "path": "7"
    },
    "4971": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4972": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4973": {
      "fn": "CardGame.getWinner",
      "offset": [
        11691,
        11713
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4976": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 44
    },
    "4977": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4978": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4979": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11736
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "4981": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4983": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4984": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4986": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4987": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4988": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4989": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "AND",
      "path": "7"
    },
    "4990": {
      "fn": "CardGame.getWinner",
      "offset": [
        11730,
        11744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "offset": [
        1255,
        1256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4993": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4994": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4995": {
      "fn": "CardGame.getWinner",
      "offset": [
        10392,
        11751
      ],
      "op": "POP",
      "path": "7"
    },
    "4996": {
      "fn": "CardGame.getWinner",
      "jump": "o",
      "offset": [
        10392,
        11751
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4997": {
      "fn": "CardGame.startGame",
      "offset": [
        6954,
        7157
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4998": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5000": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5007": {
      "op": "SHL"
    },
    "5008": {
      "op": "SUB"
    },
    "5009": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5010": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5011": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5012": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AF"
    },
    "5015": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5016": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5027": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5028": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5030": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5031": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "5034": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5035": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "5038": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5039": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5040": {
      "fn": "CardGame.startGame",
      "offset": [
        7037,
        7054
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 45,
      "value": "0x1"
    },
    "5042": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7033
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5044": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7033
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5045": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7033
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "5047": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7033
      ],
      "op": "AND",
      "path": "7"
    },
    "5048": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "5050": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5051": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "GT",
      "path": "7"
    },
    "5052": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5053": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C8"
    },
    "5056": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5057": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C8"
    },
    "5060": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "5063": {
      "fn": "CardGame.startGame",
      "jump": "i",
      "offset": [
        7023,
        7054
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5064": {
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5065": {
      "branch": 97,
      "fn": "CardGame.startGame",
      "offset": [
        7023,
        7054
      ],
      "op": "EQ",
      "path": "7"
    },
    "5066": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1415"
    },
    "5069": {
      "branch": 97,
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5070": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5072": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5081": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5084": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5086": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5087": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "ADD",
      "path": "7"
    },
    "5088": {
      "op": "MSTORE"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5093": {
      "op": "DUP3"
    },
    "5094": {
      "op": "ADD"
    },
    "5095": {
      "op": "MSTORE"
    },
    "5096": {
      "op": "PUSH32",
      "value": "0x43616E2774207374617274206E65772067616D65207374617465207965742100"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5131": {
      "op": "DUP3"
    },
    "5132": {
      "op": "ADD"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "5140": {
      "op": "JUMP"
    },
    "5141": {
      "fn": "CardGame.startGame",
      "offset": [
        7002,
        7111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5142": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7132
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 46,
      "value": "0x4"
    },
    "5144": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5145": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5146": {
      "fn": "CardGame.startGame",
      "offset": [
        7135,
        7150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5148": {
      "fn": "CardGame.startGame",
      "offset": [
        7135,
        7150
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5149": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7132
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5152": {
      "op": "NOT"
    },
    "5153": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "AND",
      "path": "7"
    },
    "5154": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5156": {
      "fn": "CardGame.startGame",
      "offset": [
        7135,
        7150
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5157": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB5C"
    },
    "5160": {
      "fn": "CardGame.startGame",
      "offset": [
        7122,
        7150
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5161": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5162": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3321,
        3325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5164": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3321,
        3325
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5165": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3369,
        3382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "5167": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3369,
        3389
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5168": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3361,
        3389
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5169": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3361,
        3389
      ],
      "op": "LT",
      "path": "7"
    },
    "5170": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3337,
        3533
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5171": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3337,
        3533
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1480"
    },
    "5174": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3337,
        3533
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5175": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3445,
        3451
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "op": "SUB"
    },
    "5184": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3451
      ],
      "op": "AND",
      "path": "7"
    },
    "5185": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "5187": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3435,
        3440
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5188": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5189": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5190": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5191": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "LT",
      "path": "7"
    },
    "5192": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1453"
    },
    "5195": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5196": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1453"
    },
    "5199": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "5202": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "i",
      "offset": [
        3421,
        3441
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5203": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5204": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5206": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5207": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5208": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5209": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5211": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5212": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5213": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5214": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "ADD",
      "path": "7"
    },
    "5215": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "op": "SUB"
    },
    "5224": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3441
      ],
      "op": "AND",
      "path": "7"
    },
    "5225": {
      "branch": 98,
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3421,
        3451
      ],
      "op": "EQ",
      "path": "7"
    },
    "5226": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3417,
        3497
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5227": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3417,
        3497
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1477"
    },
    "5230": {
      "branch": 98,
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3417,
        3497
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3478,
        3482
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 47,
      "value": "0x1"
    },
    "5234": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3478,
        3482
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5235": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5236": {
      "op": "POP"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5239": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3417,
        3497
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3517,
        3522
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 48,
      "value": "0x0"
    },
    "5243": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3517,
        3522
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5244": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5248": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3337,
        3533
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5249": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3337,
        3533
      ],
      "op": "POP",
      "path": "7"
    },
    "5250": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5251": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5252": {
      "fn": "CardGame.tokenIsAllowed",
      "offset": [
        3265,
        3539
      ],
      "op": "POP",
      "path": "7"
    },
    "5253": {
      "fn": "CardGame.tokenIsAllowed",
      "jump": "o",
      "offset": [
        3265,
        3539
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5254": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5261": {
      "op": "SHL"
    },
    "5262": {
      "op": "SUB"
    },
    "5263": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5264": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5265": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "AND",
      "path": "7"
    },
    "5266": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5268": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5269": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5270": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5271": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "5273": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5275": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5276": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5278": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5279": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5280": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5281": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5282": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5283": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5284": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5291": {
      "op": "SHL"
    },
    "5292": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5293": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5294": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5295": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5296": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5297": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5298": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5299": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5300": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5301": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "AND",
      "path": "7"
    },
    "5302": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5303": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5304": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5305": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5306": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4159,
        4166
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5307": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5308": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5309": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4481
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "5314": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4481
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5315": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5317": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5318": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5319": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ADD",
      "path": "7"
    },
    "5320": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5321": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "5323": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5324": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5325": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5326": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5327": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5328": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5329": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SUB",
      "path": "7"
    },
    "5330": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ADD",
      "path": "7"
    },
    "5331": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5332": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4218,
        4241
      ],
      "op": "DUP7",
      "path": "7"
    },
    "5333": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "GAS",
      "path": "7"
    },
    "5334": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "5335": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5336": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5337": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5338": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14E7"
    },
    "5341": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5342": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5343": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5345": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5346": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "5347": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5348": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5350": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "REVERT",
      "path": "7"
    },
    "5351": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5352": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5353": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5354": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5355": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5356": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5358": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5359": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5360": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5362": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "NOT",
      "path": "7"
    },
    "5363": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5365": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5366": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ADD",
      "path": "7"
    },
    "5367": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "AND",
      "path": "7"
    },
    "5368": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5369": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ADD",
      "path": "7"
    },
    "5370": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5371": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5373": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5374": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5375": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5376": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "ADD",
      "path": "7"
    },
    "5377": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5378": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150B"
    },
    "5381": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5382": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5383": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23C1"
    },
    "5386": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        4456,
        4483
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5387": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4456,
        4483
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5388": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5389": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5390": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5391": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5392": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5393": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4431,
        4483
      ],
      "op": "POP",
      "path": "7"
    },
    "5394": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4493,
        4509
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5396": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4529
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "op": "SUB"
    },
    "5405": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4538
      ],
      "op": "AND",
      "path": "7"
    },
    "5406": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4538
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "5411": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5413": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5414": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5415": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "5420": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "AND",
      "path": "7"
    },
    "5421": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "5423": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "SHL",
      "path": "7"
    },
    "5424": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5425": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5426": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5428": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ADD",
      "path": "7"
    },
    "5429": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5431": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5433": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5434": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5435": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5436": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "SUB",
      "path": "7"
    },
    "5437": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5438": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP7",
      "path": "7"
    },
    "5439": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "GAS",
      "path": "7"
    },
    "5440": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "5441": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5442": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5443": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5444": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1551"
    },
    "5447": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5448": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5449": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5451": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5452": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "5453": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5454": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5456": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "REVERT",
      "path": "7"
    },
    "5457": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5458": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "POP",
      "path": "7"
    },
    "5459": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "POP",
      "path": "7"
    },
    "5460": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "POP",
      "path": "7"
    },
    "5461": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "POP",
      "path": "7"
    },
    "5462": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5464": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5465": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5466": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5468": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "NOT",
      "path": "7"
    },
    "5469": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5471": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5472": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ADD",
      "path": "7"
    },
    "5473": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "AND",
      "path": "7"
    },
    "5474": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5475": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ADD",
      "path": "7"
    },
    "5476": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5477": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5479": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5480": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "POP",
      "path": "7"
    },
    "5481": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5482": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "ADD",
      "path": "7"
    },
    "5483": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5484": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1575"
    },
    "5487": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5488": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5489": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2411"
    },
    "5492": {
      "fn": "CardGame.getTokenValue",
      "jump": "i",
      "offset": [
        4520,
        4540
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5493": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4520,
        4540
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5494": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4567,
        4572
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 49
    },
    "5495": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4567,
        4572
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "5496": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4512,
        4541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "5498": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4512,
        4541
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5499": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4512,
        4541
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5500": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4512,
        4541
      ],
      "op": "AND",
      "path": "7"
    },
    "5501": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4512,
        4541
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "5502": {
      "op": "POP"
    },
    "5503": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4567,
        4572
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5504": {
      "fn": "CardGame.getTokenValue",
      "offset": [
        4567,
        4572
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5505": {
      "op": "POP"
    },
    "5506": {
      "op": "POP"
    },
    "5507": {
      "op": "POP"
    },
    "5508": {
      "op": "POP"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "fn": "CardGame.getTokenValue",
      "jump": "o",
      "offset": [
        4075,
        4591
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5511": {
      "fn": "CardGame.betMoney",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5512": {
      "fn": "CardGame.betMoney",
      "offset": [
        7249,
        7250
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 50,
      "value": "0x0"
    },
    "5514": {
      "fn": "CardGame.betMoney",
      "offset": [
        7239,
        7246
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5515": {
      "branch": 99,
      "fn": "CardGame.betMoney",
      "offset": [
        7239,
        7250
      ],
      "op": "GT",
      "path": "7"
    },
    "5516": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D7"
    },
    "5519": {
      "branch": 99,
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5520": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5522": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5529": {
      "op": "SHL"
    },
    "5530": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5531": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5534": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5536": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5537": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "ADD",
      "path": "7"
    },
    "5538": {
      "op": "MSTORE"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "ADD"
    },
    "5545": {
      "op": "MSTORE"
    },
    "5546": {
      "op": "PUSH32",
      "value": "0x4120626574206D757374206265206D6F7265207468616E203000000000000000"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5581": {
      "op": "DUP3"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "MSTORE"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5586": {
      "op": "ADD"
    },
    "5587": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "5590": {
      "op": "JUMP"
    },
    "5591": {
      "fn": "CardGame.betMoney",
      "offset": [
        7231,
        7280
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5592": {
      "fn": "CardGame.betMoney",
      "offset": [
        7298,
        7320
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 51,
      "value": "0x15E0"
    },
    "5595": {
      "fn": "CardGame.betMoney",
      "offset": [
        7313,
        7319
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5596": {
      "fn": "CardGame.betMoney",
      "offset": [
        7298,
        7312
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1429"
    },
    "5599": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7298,
        7320
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5600": {
      "branch": 100,
      "fn": "CardGame.betMoney",
      "offset": [
        7298,
        7320
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5601": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1628"
    },
    "5604": {
      "branch": 100,
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5605": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5607": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5616": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5619": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5621": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5622": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "ADD",
      "path": "7"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5628": {
      "op": "DUP3"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "MSTORE"
    },
    "5631": {
      "op": "PUSH25",
      "value": "0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "5659": {
      "op": "SHL"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5662": {
      "op": "DUP3"
    },
    "5663": {
      "op": "ADD"
    },
    "5664": {
      "op": "MSTORE"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5667": {
      "op": "ADD"
    },
    "5668": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "5671": {
      "op": "JUMP"
    },
    "5672": {
      "fn": "CardGame.betMoney",
      "offset": [
        7290,
        7350
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5679": {
      "op": "SHL"
    },
    "5680": {
      "op": "SUB"
    },
    "5681": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 52
    },
    "5682": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "AND",
      "path": "7"
    },
    "5683": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5685": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5686": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5687": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5688": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7388
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "5690": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5692": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5693": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5695": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5696": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7396
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5697": {
      "fn": "CardGame.betMoney",
      "offset": [
        7381,
        7403
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5698": {
      "fn": "CardGame.betMoney",
      "offset": [
        7406,
        7407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "5700": {
      "op": "GT"
    },
    "5701": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16B6"
    },
    "5704": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5705": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5707": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5716": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5719": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5721": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5722": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "ADD",
      "path": "7"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5728": {
      "op": "DUP3"
    },
    "5729": {
      "op": "ADD"
    },
    "5730": {
      "op": "MSTORE"
    },
    "5731": {
      "op": "PUSH32",
      "value": "0x536F7272792C20746869732067616D6520697320616C72656164792066756C6C"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5766": {
      "op": "DUP3"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "op": "MSTORE"
    },
    "5769": {
      "op": "PUSH32",
      "value": "0x2E20506C656173652077616974206E6578742067616D652E0000000000000000"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5804": {
      "op": "DUP3"
    },
    "5805": {
      "op": "ADD"
    },
    "5806": {
      "op": "MSTORE"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5809": {
      "op": "ADD"
    },
    "5810": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "5813": {
      "op": "JUMP"
    },
    "5814": {
      "fn": "CardGame.betMoney",
      "offset": [
        7360,
        7489
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5815": {
      "fn": "CardGame.betMoney",
      "offset": [
        7521,
        7536
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 53,
      "value": "0x0"
    },
    "5817": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7517
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5819": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7517
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5820": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7517
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "5822": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7517
      ],
      "op": "AND",
      "path": "7"
    },
    "5823": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "5825": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5826": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "GT",
      "path": "7"
    },
    "5827": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5828": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16CF"
    },
    "5831": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5832": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16CF"
    },
    "5835": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "5838": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7507,
        7536
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5839": {
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5840": {
      "branch": 101,
      "fn": "CardGame.betMoney",
      "offset": [
        7507,
        7536
      ],
      "op": "EQ",
      "path": "7"
    },
    "5841": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x171C"
    },
    "5844": {
      "branch": 101,
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5845": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5847": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5854": {
      "op": "SHL"
    },
    "5855": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5856": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5859": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5861": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5862": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "ADD",
      "path": "7"
    },
    "5863": {
      "op": "MSTORE"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5868": {
      "op": "DUP3"
    },
    "5869": {
      "op": "ADD"
    },
    "5870": {
      "op": "MSTORE"
    },
    "5871": {
      "op": "PUSH32",
      "value": "0x596F752063616E277420626574206D6F6E6579207768696C6520000000000000"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "MSTORE"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5911": {
      "op": "ADD"
    },
    "5912": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "5915": {
      "op": "JUMP"
    },
    "5916": {
      "fn": "CardGame.betMoney",
      "offset": [
        7499,
        7567
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5917": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5919": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5926": {
      "op": "SHL"
    },
    "5927": {
      "op": "SUB"
    },
    "5928": {
      "fn": "CardGame.betMoney",
      "offset": [
        7803,
        7828
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5929": {
      "fn": "CardGame.betMoney",
      "offset": [
        7803,
        7828
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5930": {
      "fn": "CardGame.betMoney",
      "offset": [
        7803,
        7828
      ],
      "op": "AND",
      "path": "7"
    },
    "5931": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "5934": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5935": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5936": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "DIV",
      "path": "7"
    },
    "5937": {
      "fn": "CardGame.betMoney",
      "offset": [
        7813,
        7828
      ],
      "op": "AND",
      "path": "7"
    },
    "5938": {
      "branch": 102,
      "fn": "CardGame.betMoney",
      "offset": [
        7803,
        7828
      ],
      "op": "EQ",
      "path": "7"
    },
    "5939": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5940": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17B8"
    },
    "5943": {
      "branch": 102,
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5944": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 54,
      "value": "0x5"
    },
    "5946": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5947": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5949": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5950": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5957": {
      "op": "SHL"
    },
    "5958": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5959": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5960": {
      "fn": "CardGame.betMoney",
      "offset": [
        7866,
        7876
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5961": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5963": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5964": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ADD",
      "path": "7"
    },
    "5965": {
      "op": "MSTORE"
    },
    "5966": {
      "fn": "CardGame.betMoney",
      "offset": [
        7886,
        7890
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5969": {
      "op": "DUP3"
    },
    "5970": {
      "op": "ADD"
    },
    "5971": {
      "op": "MSTORE"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5974": {
      "op": "DUP2"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "DUP5"
    },
    "5977": {
      "op": "SWAP1"
    },
    "5978": {
      "op": "MSTORE"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5985": {
      "op": "SHL"
    },
    "5986": {
      "op": "SUB"
    },
    "5987": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5988": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5989": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "AND",
      "path": "7"
    },
    "5990": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7852
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5991": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7865
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "5996": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5999": {
      "op": "ADD"
    },
    "6000": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6002": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6004": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6005": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6006": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6007": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "SUB",
      "path": "7"
    },
    "6008": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6009": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6011": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP8",
      "path": "7"
    },
    "6012": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "GAS",
      "path": "7"
    },
    "6013": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "CALL",
      "path": "7"
    },
    "6014": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6015": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6016": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6017": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178E"
    },
    "6020": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6021": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6022": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6024": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6025": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "6026": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6027": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6029": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "REVERT",
      "path": "7"
    },
    "6030": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6031": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6032": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6033": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6034": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6035": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6037": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6038": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6039": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6041": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "NOT",
      "path": "7"
    },
    "6042": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6044": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6045": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ADD",
      "path": "7"
    },
    "6046": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "AND",
      "path": "7"
    },
    "6047": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6048": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ADD",
      "path": "7"
    },
    "6049": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6050": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6052": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6053": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6054": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6055": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "ADD",
      "path": "7"
    },
    "6056": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6057": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17B2"
    },
    "6060": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6061": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6062": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "6065": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        7844,
        7901
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6066": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6067": {
      "fn": "CardGame.betMoney",
      "offset": [
        7844,
        7901
      ],
      "op": "POP",
      "path": "7"
    },
    "6068": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1831"
    },
    "6071": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6072": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6073": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 55,
      "value": "0x40"
    },
    "6075": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6076": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6083": {
      "op": "SHL"
    },
    "6084": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6085": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6086": {
      "fn": "CardGame.betMoney",
      "offset": [
        8433,
        8443
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6087": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6089": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6090": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ADD",
      "path": "7"
    },
    "6091": {
      "op": "MSTORE"
    },
    "6092": {
      "fn": "CardGame.betMoney",
      "offset": [
        8453,
        8457
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6095": {
      "op": "DUP3"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "MSTORE"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "op": "DUP4"
    },
    "6103": {
      "op": "SWAP1"
    },
    "6104": {
      "op": "MSTORE"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "op": "SUB"
    },
    "6113": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8432
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6114": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8432
      ],
      "op": "AND",
      "path": "7"
    },
    "6115": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8432
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6116": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8432
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "6121": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8432
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6127": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6129": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6130": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6131": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6132": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "SUB",
      "path": "7"
    },
    "6133": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6134": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6136": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP8",
      "path": "7"
    },
    "6137": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "GAS",
      "path": "7"
    },
    "6138": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "CALL",
      "path": "7"
    },
    "6139": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6140": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6141": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6142": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180B"
    },
    "6145": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6146": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6147": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6149": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6150": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "6151": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6152": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6154": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "REVERT",
      "path": "7"
    },
    "6155": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6156": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6157": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6158": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6159": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6160": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6162": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6163": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6164": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6166": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "NOT",
      "path": "7"
    },
    "6167": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6169": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6170": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ADD",
      "path": "7"
    },
    "6171": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "AND",
      "path": "7"
    },
    "6172": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6173": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ADD",
      "path": "7"
    },
    "6174": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6175": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6177": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6178": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6179": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6180": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "ADD",
      "path": "7"
    },
    "6181": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6182": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x182F"
    },
    "6185": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6186": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6187": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C2"
    },
    "6190": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        8405,
        8468
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6191": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6192": {
      "fn": "CardGame.betMoney",
      "offset": [
        8405,
        8468
      ],
      "op": "POP",
      "path": "7"
    },
    "6193": {
      "fn": "CardGame.betMoney",
      "offset": [
        7799,
        8548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6200": {
      "op": "SHL"
    },
    "6201": {
      "op": "SUB"
    },
    "6202": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 56
    },
    "6203": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "AND",
      "path": "7"
    },
    "6204": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6206": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6207": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6208": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6209": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8618
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6211": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6213": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6214": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6215": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6216": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6218": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6219": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6220": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8626
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6221": {
      "fn": "CardGame.betMoney",
      "offset": [
        8627,
        8637
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6222": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6223": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6224": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6225": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6226": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6227": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6228": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6229": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8638
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6230": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8660
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1860"
    },
    "6233": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8660
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6234": {
      "fn": "CardGame.betMoney",
      "offset": [
        8653,
        8660
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6235": {
      "fn": "CardGame.betMoney",
      "offset": [
        8653,
        8660
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6236": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8660
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238F"
    },
    "6239": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        8605,
        8660
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6240": {
      "fn": "CardGame.betMoney",
      "offset": [
        8605,
        8660
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6247": {
      "op": "SHL"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6250": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "AND",
      "path": "7"
    },
    "6251": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6253": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6254": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6255": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6256": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6258": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6260": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6261": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6262": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6263": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6265": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6266": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6267": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8578
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6268": {
      "fn": "CardGame.betMoney",
      "offset": [
        8579,
        8589
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6269": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6270": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6271": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6272": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6273": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6274": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6275": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8590
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6276": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8660
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "6277": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8660
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6278": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8660
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "6279": {
      "fn": "CardGame.betMoney",
      "offset": [
        8557,
        8660
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6280": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6281": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6282": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6283": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "6285": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6286": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6287": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6288": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8689
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6289": {
      "fn": "CardGame.betMoney",
      "offset": [
        8674,
        8696
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6290": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B5"
    },
    "6293": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6300": {
      "op": "SHL"
    },
    "6301": {
      "op": "SUB"
    },
    "6302": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 57
    },
    "6303": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "AND",
      "path": "7"
    },
    "6304": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6306": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6307": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6308": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6309": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6311": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6313": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6314": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6316": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6317": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8733
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6318": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8743
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6319": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8743
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6320": {
      "fn": "CardGame.betMoney",
      "offset": [
        8717,
        8743
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6321": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18F3"
    },
    "6324": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6325": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6332": {
      "op": "SHL"
    },
    "6333": {
      "op": "SUB"
    },
    "6334": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 58
    },
    "6335": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "AND",
      "path": "7"
    },
    "6336": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6338": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6339": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6340": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6341": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6343": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6345": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6346": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6348": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6349": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6350": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8809
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6351": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18D9"
    },
    "6354": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6355": {
      "fn": "CardGame.betMoney",
      "offset": [
        8812,
        8819
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6356": {
      "fn": "CardGame.betMoney",
      "offset": [
        8812,
        8819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6357": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238F"
    },
    "6360": {
      "fn": "CardGame.betMoney",
      "jump": "i",
      "offset": [
        8793,
        8819
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6361": {
      "fn": "CardGame.betMoney",
      "offset": [
        8793,
        8819
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6368": {
      "op": "SHL"
    },
    "6369": {
      "op": "SUB"
    },
    "6370": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6371": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "AND",
      "path": "7"
    },
    "6372": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6374": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6375": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6376": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6377": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6379": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6381": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6382": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6384": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6385": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8790
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6386": {
      "fn": "CardGame.betMoney",
      "offset": [
        8774,
        8819
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6387": {
      "fn": "CardGame.betMoney",
      "offset": [
        8670,
        8830
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6394": {
      "op": "SHL"
    },
    "6395": {
      "op": "SUB"
    },
    "6396": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "AND",
      "path": "7",
      "statement": 59
    },
    "6397": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6399": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6400": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6401": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6402": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8846
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "6404": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6406": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6407": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6408": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6409": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6411": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6412": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6413": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8854
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6414": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6415": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6416": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6418": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6419": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "ADD",
      "path": "7"
    },
    "6420": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6421": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6422": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6423": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6424": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6425": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6426": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6427": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6428": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "ADD",
      "path": "7"
    },
    "6429": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6430": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6437": {
      "op": "SHL"
    },
    "6438": {
      "op": "SUB"
    },
    "6439": {
      "op": "NOT"
    },
    "6440": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "AND",
      "path": "7"
    },
    "6441": {
      "fn": "CardGame.betMoney",
      "offset": [
        8860,
        8870
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6442": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6443": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6444": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "OR",
      "path": "7"
    },
    "6445": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6446": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6447": {
      "fn": "CardGame.betMoney",
      "offset": [
        8839,
        8871
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6448": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 60
    },
    "6449": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6450": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6451": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8898
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "6453": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6454": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6455": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6456": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6457": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8906
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6458": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "6459": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6460": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6461": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6462": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6463": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6464": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6465": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6466": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8918
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6467": {
      "fn": "CardGame.betMoney",
      "offset": [
        8881,
        8922
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "fn": "CardGame.betMoney",
      "jump": "o",
      "offset": [
        7163,
        8959
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6471": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6473": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6480": {
      "op": "SHL"
    },
    "6481": {
      "op": "SUB"
    },
    "6482": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "6483": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6484": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "6485": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1970"
    },
    "6488": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6489": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6491": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6498": {
      "op": "SHL"
    },
    "6499": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6500": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6501": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6503": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "6504": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "6507": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6508": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "6511": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6512": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6519": {
      "op": "SHL"
    },
    "6520": {
      "op": "SUB"
    },
    "6521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 61
    },
    "6522": {
      "branch": 108,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "6523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D5"
    },
    "6526": {
      "branch": 108,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6536": {
      "op": "SHL"
    },
    "6537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "6545": {
      "op": "MSTORE"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6550": {
      "op": "DUP3"
    },
    "6551": {
      "op": "ADD"
    },
    "6552": {
      "op": "MSTORE"
    },
    "6553": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6588": {
      "op": "DUP3"
    },
    "6589": {
      "op": "ADD"
    },
    "6590": {
      "op": "MSTORE"
    },
    "6591": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6600": {
      "op": "SHL"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6603": {
      "op": "DUP3"
    },
    "6604": {
      "op": "ADD"
    },
    "6605": {
      "op": "MSTORE"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "6612": {
      "op": "JUMP"
    },
    "6613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6614": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x19DE"
    },
    "6617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A67"
    },
    "6621": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "6624": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6625": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6632": {
      "op": "SHL"
    },
    "6633": {
      "op": "SUB"
    },
    "6634": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6635": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6636": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "AND",
      "path": "7"
    },
    "6637": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4784,
        4791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6639": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6640": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6641": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6642": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4824
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6644": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6646": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6647": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6648": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6649": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6651": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6652": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4832
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6653": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6654": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6655": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "AND",
      "path": "7"
    },
    "6656": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6657": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6658": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6659": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6660": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6661": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4811,
        4839
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6662": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4889,
        4902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6664": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4904,
        4920
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6665": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4924,
        4945
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A11"
    },
    "6668": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4938,
        4944
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6669": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4924,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1486"
    },
    "6672": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4924,
        4945
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6673": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4924,
        4945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6674": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4888,
        4945
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6675": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4888,
        4945
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6676": {
      "op": "POP"
    },
    "6677": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4888,
        4945
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6678": {
      "op": "POP"
    },
    "6679": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        5005,
        5017
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 63,
      "value": "0x1A21"
    },
    "6682": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4888,
        4945
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6683": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        5005,
        5007
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6685": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        5005,
        5017
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22DE"
    },
    "6688": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        5005,
        5017
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6689": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        5005,
        5017
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "op": "SUB"
    },
    "6698": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6699": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP7",
      "path": "7"
    },
    "6700": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "AND",
      "path": "7"
    },
    "6701": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6703": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6704": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6705": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6706": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6708": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6710": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6711": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6712": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6713": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6715": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6716": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6717": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4985
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6718": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "6719": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "DUP11",
      "path": "7"
    },
    "6720": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "AND",
      "path": "7"
    },
    "6721": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6722": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6723": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6724": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6725": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6726": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6727": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        4992
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6728": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        5000
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A52"
    },
    "6731": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        5000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6732": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4995,
        5000
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6733": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4995,
        5000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6734": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        5000
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22EA"
    },
    "6737": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4964,
        5000
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6738": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4964,
        5000
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6739": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4963,
        5018
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5C"
    },
    "6742": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4963,
        5018
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6743": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4963,
        5018
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6744": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4963,
        5018
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x231F"
    },
    "6747": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4963,
        5018
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6748": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4963,
        5018
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6749": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4955,
        5019
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6750": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4955,
        5019
      ],
      "op": "POP",
      "path": "7"
    },
    "6751": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4955,
        5019
      ],
      "op": "POP",
      "path": "7"
    },
    "6752": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4955,
        5019
      ],
      "op": "POP",
      "path": "7"
    },
    "6753": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6754": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6755": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6756": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "POP",
      "path": "7"
    },
    "6757": {
      "fn": "CardGame.getUserSingleTokenValue",
      "offset": [
        4686,
        5026
      ],
      "op": "POP",
      "path": "7"
    },
    "6758": {
      "fn": "CardGame.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        4686,
        5026
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6759": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6760": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6762": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6763": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6770": {
      "op": "SHL"
    },
    "6771": {
      "op": "SUB"
    },
    "6772": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 64
    },
    "6773": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6774": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "op": "SUB"
    },
    "6783": {
      "op": "NOT"
    },
    "6784": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6785": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6786": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6787": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6788": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6789": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6790": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6791": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x40"
    },
    "6793": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6794": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6795": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6796": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6797": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6798": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6799": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6800": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6833": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6834": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6836": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6837": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6838": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6839": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6840": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6841": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6842": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6844": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 66,
      "value": "0x0"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "op": "SUB"
    },
    "6885": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "3"
    },
    "6886": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4000AEA0"
    },
    "6891": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "6924": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6925": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6926": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6928": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6930": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6931": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6933": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "3"
    },
    "6934": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B29"
    },
    "6937": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6938": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6939": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6940": {
      "op": "SWAP2"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "MSTORE"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6945": {
      "op": "DUP3"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6950": {
      "op": "ADD"
    },
    "6951": {
      "op": "SWAP1"
    },
    "6952": {
      "op": "JUMP"
    },
    "6953": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6954": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6956": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6957": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6959": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6960": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6961": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "3"
    },
    "6962": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "3"
    },
    "6963": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6964": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6965": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6966": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6968": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6969": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6971": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6972": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6973": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6978": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "3"
    },
    "6979": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "6981": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "3"
    },
    "6982": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6983": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6984": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6986": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "6987": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B56"
    },
    "6990": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6991": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6992": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6993": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6994": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2434"
    },
    "6997": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6998": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6999": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7001": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7003": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7005": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7006": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "3"
    },
    "7007": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7008": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7010": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7011": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "3"
    },
    "7012": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "3"
    },
    "7013": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7014": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7015": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7016": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B75"
    },
    "7019": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7020": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7021": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7023": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7024": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7025": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7029": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7030": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "7031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "7032": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "7033": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "7034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7036": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7037": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7040": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "3"
    },
    "7041": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7043": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7044": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "7045": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "3"
    },
    "7046": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7047": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "7048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7049": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7051": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7052": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "3"
    },
    "7053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "3"
    },
    "7055": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7056": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B99"
    },
    "7059": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7060": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7061": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21C2"
    },
    "7064": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7065": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7066": {
      "op": "POP"
    },
    "7067": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7069": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7070": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7072": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7074": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7075": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7076": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7077": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7079": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7080": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7081": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7082": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7083": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 67
    },
    "7084": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7085": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7086": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7087": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "4"
    },
    "7088": {
      "op": "DUP9"
    },
    "7089": {
      "op": "SWAP1"
    },
    "7090": {
      "op": "MSTORE"
    },
    "7091": {
      "op": "DUP1"
    },
    "7092": {
      "op": "DUP4"
    },
    "7093": {
      "op": "ADD"
    },
    "7094": {
      "op": "DUP6"
    },
    "7095": {
      "op": "SWAP1"
    },
    "7096": {
      "op": "MSTORE"
    },
    "7097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7100": {
      "op": "DUP3"
    },
    "7101": {
      "op": "ADD"
    },
    "7102": {
      "op": "MSTORE"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7105": {
      "op": "DUP1"
    },
    "7106": {
      "op": "DUP3"
    },
    "7107": {
      "op": "ADD"
    },
    "7108": {
      "op": "DUP4"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "MSTORE"
    },
    "7111": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7112": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7113": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7114": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7115": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "4"
    },
    "7116": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7117": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7118": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "4"
    },
    "7119": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7120": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7123": {
      "op": "SWAP1"
    },
    "7124": {
      "op": "SWAP2"
    },
    "7125": {
      "op": "ADD"
    },
    "7126": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7127": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7128": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7129": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7130": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7131": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7132": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7133": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "4"
    },
    "7134": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7135": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7136": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7137": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7138": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 68
    },
    "7139": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7142": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7145": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF3"
    },
    "7148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7151": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x238F"
    },
    "7154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7158": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7163": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7166": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7171": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7173": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7176": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 69
    },
    "7177": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7178": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7179": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7180": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "4"
    },
    "7181": {
      "op": "DUP8"
    },
    "7182": {
      "op": "SWAP1"
    },
    "7183": {
      "op": "MSTORE"
    },
    "7184": {
      "op": "DUP1"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "op": "DUP5"
    },
    "7188": {
      "op": "SWAP1"
    },
    "7189": {
      "op": "MSTORE"
    },
    "7190": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7191": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7192": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7193": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7194": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "4"
    },
    "7195": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7196": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "4"
    },
    "7197": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7198": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7201": {
      "op": "SWAP1"
    },
    "7202": {
      "op": "SWAP2"
    },
    "7203": {
      "op": "ADD"
    },
    "7204": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7205": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7206": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7207": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7208": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7209": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7210": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "4"
    },
    "7211": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7212": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 70,
      "value": "0x675"
    },
    "7215": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7216": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9600,
        10386
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7217": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9738,
        9753
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 71,
      "value": "0x0"
    },
    "7219": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9734
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7221": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9734
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7222": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9734
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "7224": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9734
      ],
      "op": "AND",
      "path": "7"
    },
    "7225": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "7227": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7228": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "GT",
      "path": "7"
    },
    "7229": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7230": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C49"
    },
    "7233": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7234": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C49"
    },
    "7237": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x210A"
    },
    "7240": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        9724,
        9753
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7241": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7242": {
      "branch": 103,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9724,
        9753
      ],
      "op": "EQ",
      "path": "7"
    },
    "7243": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C8E"
    },
    "7246": {
      "branch": 103,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7247": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7249": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7256": {
      "op": "SHL"
    },
    "7257": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7258": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7261": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7263": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7264": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "ADD",
      "path": "7"
    },
    "7265": {
      "op": "MSTORE"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7270": {
      "op": "DUP3"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "MSTORE"
    },
    "7273": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "7297": {
      "op": "SHL"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7300": {
      "op": "DUP3"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "op": "MSTORE"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7305": {
      "op": "ADD"
    },
    "7306": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "7309": {
      "op": "JUMP"
    },
    "7310": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9716,
        9779
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7311": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9811,
        9812
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 72,
      "value": "0x0"
    },
    "7313": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9797,
        9808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7314": {
      "branch": 104,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9797,
        9812
      ],
      "op": "GT",
      "path": "7"
    },
    "7315": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CD1"
    },
    "7318": {
      "branch": 104,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7319": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7321": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7322": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7328": {
      "op": "SHL"
    },
    "7329": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7330": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7333": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7335": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7336": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "ADD",
      "path": "7"
    },
    "7337": {
      "op": "MSTORE"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7342": {
      "op": "DUP3"
    },
    "7343": {
      "op": "ADD"
    },
    "7344": {
      "op": "MSTORE"
    },
    "7345": {
      "op": "PUSH16",
      "value": "0x1C985B991BDB4B5B9BDD0B599BDD5B99"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "7364": {
      "op": "SHL"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7367": {
      "op": "DUP3"
    },
    "7368": {
      "op": "ADD"
    },
    "7369": {
      "op": "MSTORE"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7372": {
      "op": "ADD"
    },
    "7373": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57F"
    },
    "7376": {
      "op": "JUMP"
    },
    "7377": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9789,
        9833
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7378": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9843,
        9853
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 73,
      "value": "0x11"
    },
    "7380": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9843,
        9867
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7381": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9843,
        9867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7382": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9843,
        9867
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7383": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9877,
        9895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7385": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9898,
        9914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE3"
    },
    "7388": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9912,
        9914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "7390": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9856,
        9867
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7391": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9898,
        9914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x237B"
    },
    "7394": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        9898,
        9914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7395": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9898,
        9914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7396": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9877,
        9914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7397": {
      "op": "POP"
    },
    "7398": {
      "branch": 105,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9928,
        9943
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7399": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9924,
        9984
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CEE"
    },
    "7402": {
      "branch": 105,
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9924,
        9984
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7403": {
      "op": "POP"
    },
    "7404": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9972,
        9973
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 74,
      "value": "0x1"
    },
    "7406": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9924,
        9984
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7407": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10018,
        10035
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF"
    },
    "7409": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10018,
        10035
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7416": {
      "op": "SHL"
    },
    "7417": {
      "op": "SUB"
    },
    "7418": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10018,
        10035
      ],
      "op": "AND",
      "path": "7"
    },
    "7419": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        9993,
        10007
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7421": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7422": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7423": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7424": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10017
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7426": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7428": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7429": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7430": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7431": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7433": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7434": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7435": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10036
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7436": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10063
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "7438": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7439": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7440": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7441": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7442": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7443": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10050,
        10082
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7444": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7445": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7446": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7447": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "LT",
      "path": "7"
    },
    "7448": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D23"
    },
    "7451": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7452": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D23"
    },
    "7455": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "7458": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        10010,
        10092
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7459": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7460": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7462": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7463": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7464": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7465": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7467": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7468": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7469": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7470": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7471": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7472": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "ADD",
      "path": "7"
    },
    "7473": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7474": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 75,
      "value": "0xF"
    },
    "7476": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7477": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7484": {
      "op": "SHL"
    },
    "7485": {
      "op": "SUB"
    },
    "7486": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7487": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7488": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10120,
        10137
      ],
      "op": "AND",
      "path": "7"
    },
    "7489": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7490": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7491": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "7493": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7494": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7495": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7497": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7498": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7499": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10138
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7500": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7501": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7502": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "AND",
      "path": "7"
    },
    "7503": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7504": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7505": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7506": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7507": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7508": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7509": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7510": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7511": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10146
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7512": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10159
      ],
      "op": "DUP9",
      "path": "7"
    },
    "7513": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7514": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10102,
        10159
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7515": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10181,
        10198
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 76
    },
    "7516": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10181,
        10198
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7517": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10181,
        10198
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7518": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10181,
        10198
      ],
      "op": "AND",
      "path": "7"
    },
    "7519": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7520": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7521": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "7523": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7524": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7525": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7526": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7527": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10199
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7528": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7529": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7530": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7532": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7533": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7534": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "ADD",
      "path": "7"
    },
    "7535": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7536": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7537": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7538": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP9",
      "path": "7"
    },
    "7539": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7540": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7541": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP9",
      "path": "7"
    },
    "7542": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7543": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "ADD",
      "path": "7"
    },
    "7544": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "DUP10",
      "path": "7"
    },
    "7545": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7546": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10169,
        10216
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7547": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10240,
        10257
      ],
      "op": "SWAP3",
      "path": "7",
      "statement": 77
    },
    "7548": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10240,
        10257
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7549": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10240,
        10257
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7550": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10240,
        10257
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7551": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10240,
        10257
      ],
      "op": "AND",
      "path": "7"
    },
    "7552": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7553": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7554": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "7556": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7557": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7558": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7559": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7560": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7561": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10258
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7562": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7563": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7564": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7565": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "7566": {
      "op": "POP"
    },
    "7567": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7568": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7569": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7570": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D9C"
    },
    "7573": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7574": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7575": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10010,
        10092
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7576": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238F"
    },
    "7579": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        10226,
        10263
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7580": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7581": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7582": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7583": {
      "fn": "CardGame.fulfillRandomness",
      "offset": [
        10226,
        10263
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7584": {
      "op": "POP"
    },
    "7585": {
      "op": "POP"
    },
    "7586": {
      "op": "POP"
    },
    "7587": {
      "op": "POP"
    },
    "7588": {
      "op": "POP"
    },
    "7589": {
      "op": "POP"
    },
    "7590": {
      "fn": "CardGame.fulfillRandomness",
      "jump": "o",
      "offset": [
        9600,
        10386
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7591": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5649,
        6098
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7592": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5726,
        5739
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7594": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5726,
        5739
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7595": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7602": {
      "op": "SHL"
    },
    "7603": {
      "op": "SUB"
    },
    "7604": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7605": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "AND",
      "path": "7"
    },
    "7606": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7608": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7609": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7610": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7611": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7613": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7615": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7616": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7618": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7619": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5788
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7620": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5773,
        5795
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7621": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5769,
        5795
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7622": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5769,
        5795
      ],
      "op": "LT",
      "path": "7"
    },
    "7623": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7624": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2F"
    },
    "7627": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7634": {
      "op": "SHL"
    },
    "7635": {
      "op": "SUB"
    },
    "7636": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7637": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7638": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "AND",
      "path": "7"
    },
    "7639": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7641": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7642": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7643": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7644": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5827
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7646": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7648": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7649": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7651": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7652": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5835
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7653": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7654": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7655": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5847
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7656": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5847
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7657": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5847
      ],
      "op": "AND",
      "path": "7"
    },
    "7658": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5847
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7659": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5836,
        5837
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7660": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5836,
        5837
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7661": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7662": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "LT",
      "path": "7"
    },
    "7663": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DFA"
    },
    "7666": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7667": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DFA"
    },
    "7670": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "7673": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5820,
        5838
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7674": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7675": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7677": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7678": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7679": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7680": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7682": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7683": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7684": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7685": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "ADD",
      "path": "7"
    },
    "7686": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7693": {
      "op": "SHL"
    },
    "7694": {
      "op": "SUB"
    },
    "7695": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5838
      ],
      "op": "AND",
      "path": "7"
    },
    "7696": {
      "branch": 106,
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5820,
        5847
      ],
      "op": "EQ",
      "path": "7"
    },
    "7697": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5816,
        5914
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7698": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5816,
        5914
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E1D"
    },
    "7701": {
      "branch": 106,
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5816,
        5914
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7702": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5875,
        5876
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 78
    },
    "7703": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5867,
        5876
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7704": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5867,
        5876
      ],
      "op": "POP",
      "path": "7"
    },
    "7705": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5894,
        5899
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 79,
      "value": "0x1E2F"
    },
    "7708": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5894,
        5899
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7709": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5816,
        5914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7710": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 80
    },
    "7711": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E27"
    },
    "7714": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7715": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2349"
    },
    "7718": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5797,
        5800
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7719": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7720": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7721": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "POP",
      "path": "7"
    },
    "7722": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5797,
        5800
      ],
      "op": "POP",
      "path": "7"
    },
    "7723": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DAB"
    },
    "7726": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7727": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5749,
        5924
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7728": {
      "op": "POP"
    },
    "7729": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5950,
        5955
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7730": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7737": {
      "op": "SHL"
    },
    "7738": {
      "op": "SUB"
    },
    "7739": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7740": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "AND",
      "path": "7"
    },
    "7741": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7743": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7744": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7745": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7746": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7748": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7750": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7751": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7753": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7754": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5976
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7755": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5983
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7756": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E57"
    },
    "7759": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5987
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7760": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5986,
        5987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7762": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5986,
        5987
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7763": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2364"
    },
    "7766": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5961,
        5987
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7767": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5961,
        5987
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7768": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5957,
        5958
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7769": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5957,
        5987
      ],
      "op": "LT",
      "path": "7"
    },
    "7770": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7771": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F09"
    },
    "7774": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7781": {
      "op": "SHL"
    },
    "7782": {
      "op": "SUB"
    },
    "7783": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 81
    },
    "7784": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "AND",
      "path": "7"
    },
    "7785": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7787": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7788": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7789": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7790": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6036
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7792": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7794": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7795": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7797": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7798": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6044
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7799": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6045,
        6050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E81"
    },
    "7802": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6045,
        6046
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7803": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6049,
        6050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7805": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6045,
        6050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238F"
    },
    "7808": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        6045,
        6050
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7809": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6045,
        6050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7810": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7811": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7812": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7813": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "LT",
      "path": "7"
    },
    "7814": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E91"
    },
    "7817": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7818": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E91"
    },
    "7821": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "7824": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        6029,
        6051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7825": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7826": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7828": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7829": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7830": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7831": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7833": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7834": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7835": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7836": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7837": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7838": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "ADD",
      "path": "7"
    },
    "7839": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7846": {
      "op": "SHL"
    },
    "7847": {
      "op": "SUB"
    },
    "7848": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7849": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7850": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "AND",
      "path": "7"
    },
    "7851": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7852": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7853": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6015
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7855": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7856": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7857": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7858": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7860": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7861": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7862": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7863": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7864": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7865": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7866": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7867": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7868": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "AND",
      "path": "7"
    },
    "7869": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6029,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7870": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6023
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7871": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6024,
        6025
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7872": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6024,
        6025
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7873": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7874": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "LT",
      "path": "7"
    },
    "7875": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ECE"
    },
    "7878": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7879": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ECE"
    },
    "7882": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "7885": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        6008,
        6026
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7886": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7887": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7889": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7890": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7891": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7892": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7894": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7895": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7896": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7897": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6026
      ],
      "op": "ADD",
      "path": "7"
    },
    "7898": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7899": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7906": {
      "op": "SHL"
    },
    "7907": {
      "op": "SUB"
    },
    "7908": {
      "op": "NOT"
    },
    "7909": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "AND",
      "path": "7"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7916": {
      "op": "SHL"
    },
    "7917": {
      "op": "SUB"
    },
    "7918": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7919": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7920": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7921": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "AND",
      "path": "7"
    },
    "7922": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7923": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7924": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7925": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "OR",
      "path": "7"
    },
    "7926": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7927": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        6008,
        6051
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7928": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 82
    },
    "7929": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F01"
    },
    "7932": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7933": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2349"
    },
    "7936": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "i",
      "offset": [
        5989,
        5992
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7937": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7938": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7939": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "POP",
      "path": "7"
    },
    "7940": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5989,
        5992
      ],
      "op": "POP",
      "path": "7"
    },
    "7941": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E32"
    },
    "7944": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7945": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7946": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5933,
        6062
      ],
      "op": "POP",
      "path": "7"
    },
    "7947": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5716,
        6098
      ],
      "op": "POP",
      "path": "7"
    },
    "7948": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5649,
        6098
      ],
      "op": "POP",
      "path": "7"
    },
    "7949": {
      "fn": "CardGame.removeFromPlayers",
      "offset": [
        5649,
        6098
      ],
      "op": "POP",
      "path": "7"
    },
    "7950": {
      "fn": "CardGame.removeFromPlayers",
      "jump": "o",
      "offset": [
        5649,
        6098
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7951": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3545,
        3907
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7958": {
      "op": "SHL"
    },
    "7959": {
      "op": "SUB"
    },
    "7960": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7961": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "AND",
      "path": "7"
    },
    "7962": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3604,
        3608
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7964": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7965": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7966": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7967": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3659
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7969": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7971": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7972": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7974": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7975": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3667
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7976": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3652,
        3674
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7977": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3604,
        3608
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7978": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3604,
        3608
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7979": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3644,
        3674
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7980": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3620,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1480"
    },
    "7983": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3620,
        3901
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7990": {
      "op": "SHL"
    },
    "7991": {
      "op": "SUB"
    },
    "7992": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7993": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "AND",
      "path": "7"
    },
    "7994": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3699,
        3713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7996": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7997": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7998": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7999": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8001": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8003": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8004": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8006": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8007": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3731
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8008": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8009": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8010": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3732,
        3737
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8011": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3732,
        3737
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8012": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8013": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "LT",
      "path": "7"
    },
    "8014": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F59"
    },
    "8017": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8018": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F59"
    },
    "8021": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2333"
    },
    "8024": {
      "fn": "CardGame.playerIsAllowed",
      "jump": "i",
      "offset": [
        3716,
        3738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8025": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8026": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8028": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8029": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8030": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8031": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8033": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8034": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8035": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8036": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8037": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8038": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "ADD",
      "path": "7"
    },
    "8039": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8046": {
      "op": "SHL"
    },
    "8047": {
      "op": "SUB"
    },
    "8048": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP8",
      "path": "7"
    },
    "8049": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8050": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "AND",
      "path": "7"
    },
    "8051": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8052": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8053": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3773
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "8055": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8056": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8057": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8059": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8060": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "DUP6",
      "path": "7"
    },
    "8061": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3781
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8062": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8063": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8064": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8065": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "AND",
      "path": "7"
    },
    "8066": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8067": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "DUP6",
      "path": "7"
    },
    "8068": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8069": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8070": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8071": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8072": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8073": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8074": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3789
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8075": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8076": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3716,
        3738
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8077": {
      "op": "POP"
    },
    "8078": {
      "branch": 107,
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3756,
        3794
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8079": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3752,
        3891
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9C"
    },
    "8082": {
      "branch": 107,
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3752,
        3891
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8083": {
      "op": "POP"
    },
    "8084": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3821,
        3825
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 83,
      "value": "0x1"
    },
    "8086": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3821,
        3825
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8087": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3545,
        3907
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8088": {
      "op": "POP"
    },
    "8089": {
      "op": "POP"
    },
    "8090": {
      "op": "POP"
    },
    "8091": {
      "fn": "CardGame.playerIsAllowed",
      "jump": "o",
      "offset": [
        3545,
        3907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8092": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3752,
        3891
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8093": {
      "op": "POP"
    },
    "8094": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3871,
        3876
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 84,
      "value": "0x0"
    },
    "8096": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3871,
        3876
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8097": {
      "fn": "CardGame.playerIsAllowed",
      "offset": [
        3545,
        3907
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8098": {
      "op": "POP"
    },
    "8099": {
      "op": "POP"
    },
    "8100": {
      "op": "POP"
    },
    "8101": {
      "fn": "CardGame.playerIsAllowed",
      "jump": "o",
      "offset": [
        3545,
        3907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8102": {
      "op": "JUMPDEST"
    },
    "8103": {
      "op": "DUP3"
    },
    "8104": {
      "op": "DUP1"
    },
    "8105": {
      "op": "SLOAD"
    },
    "8106": {
      "op": "DUP3"
    },
    "8107": {
      "op": "DUP3"
    },
    "8108": {
      "op": "SSTORE"
    },
    "8109": {
      "op": "SWAP1"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8112": {
      "op": "MSTORE"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8117": {
      "op": "KECCAK256"
    },
    "8118": {
      "op": "SWAP1"
    },
    "8119": {
      "op": "DUP2"
    },
    "8120": {
      "op": "ADD"
    },
    "8121": {
      "op": "SWAP3"
    },
    "8122": {
      "op": "DUP3"
    },
    "8123": {
      "op": "ISZERO"
    },
    "8124": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8127": {
      "op": "JUMPI"
    },
    "8128": {
      "op": "SWAP2"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8131": {
      "op": "MUL"
    },
    "8132": {
      "op": "DUP3"
    },
    "8133": {
      "op": "ADD"
    },
    "8134": {
      "op": "JUMPDEST"
    },
    "8135": {
      "op": "DUP3"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "GT"
    },
    "8138": {
      "op": "ISZERO"
    },
    "8139": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8142": {
      "op": "JUMPI"
    },
    "8143": {
      "op": "DUP3"
    },
    "8144": {
      "op": "MLOAD"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "SLOAD"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8153": {
      "op": "SHL"
    },
    "8154": {
      "op": "SUB"
    },
    "8155": {
      "op": "NOT"
    },
    "8156": {
      "op": "AND"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8163": {
      "op": "SHL"
    },
    "8164": {
      "op": "SUB"
    },
    "8165": {
      "op": "SWAP1"
    },
    "8166": {
      "op": "SWAP2"
    },
    "8167": {
      "op": "AND"
    },
    "8168": {
      "op": "OR"
    },
    "8169": {
      "op": "DUP3"
    },
    "8170": {
      "op": "SSTORE"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8173": {
      "op": "SWAP1"
    },
    "8174": {
      "op": "SWAP3"
    },
    "8175": {
      "op": "ADD"
    },
    "8176": {
      "op": "SWAP2"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8179": {
      "op": "SWAP1"
    },
    "8180": {
      "op": "SWAP2"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "SWAP1"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x1FC6"
    },
    "8186": {
      "op": "JUMP"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "op": "PUSH2",
      "value": "0x2007"
    },
    "8192": {
      "op": "SWAP3"
    },
    "8193": {
      "op": "SWAP2"
    },
    "8194": {
      "op": "POP"
    },
    "8195": {
      "op": "PUSH2",
      "value": "0x2046"
    },
    "8198": {
      "jump": "i",
      "op": "JUMP"
    },
    "8199": {
      "op": "JUMPDEST"
    },
    "8200": {
      "op": "POP"
    },
    "8201": {
      "op": "SWAP1"
    },
    "8202": {
      "jump": "o",
      "op": "JUMP"
    },
    "8203": {
      "op": "JUMPDEST"
    },
    "8204": {
      "op": "DUP3"
    },
    "8205": {
      "op": "DUP1"
    },
    "8206": {
      "op": "SLOAD"
    },
    "8207": {
      "op": "DUP3"
    },
    "8208": {
      "op": "DUP3"
    },
    "8209": {
      "op": "SSTORE"
    },
    "8210": {
      "op": "SWAP1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8213": {
      "op": "MSTORE"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8218": {
      "op": "KECCAK256"
    },
    "8219": {
      "op": "SWAP1"
    },
    "8220": {
      "op": "DUP2"
    },
    "8221": {
      "op": "ADD"
    },
    "8222": {
      "op": "SWAP3"
    },
    "8223": {
      "op": "DUP3"
    },
    "8224": {
      "op": "ISZERO"
    },
    "8225": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8228": {
      "op": "JUMPI"
    },
    "8229": {
      "op": "SWAP2"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8232": {
      "op": "MUL"
    },
    "8233": {
      "op": "DUP3"
    },
    "8234": {
      "op": "ADD"
    },
    "8235": {
      "op": "JUMPDEST"
    },
    "8236": {
      "op": "DUP3"
    },
    "8237": {
      "op": "DUP2"
    },
    "8238": {
      "op": "GT"
    },
    "8239": {
      "op": "ISZERO"
    },
    "8240": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8243": {
      "op": "JUMPI"
    },
    "8244": {
      "op": "DUP3"
    },
    "8245": {
      "op": "MLOAD"
    },
    "8246": {
      "op": "DUP3"
    },
    "8247": {
      "op": "SSTORE"
    },
    "8248": {
      "op": "SWAP2"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "op": "SWAP2"
    },
    "8253": {
      "op": "SWAP1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8256": {
      "op": "ADD"
    },
    "8257": {
      "op": "SWAP1"
    },
    "8258": {
      "op": "PUSH2",
      "value": "0x202B"
    },
    "8261": {
      "op": "JUMP"
    },
    "8262": {
      "op": "JUMPDEST"
    },
    "8263": {
      "op": "JUMPDEST"
    },
    "8264": {
      "op": "DUP1"
    },
    "8265": {
      "op": "DUP3"
    },
    "8266": {
      "op": "GT"
    },
    "8267": {
      "op": "ISZERO"
    },
    "8268": {
      "op": "PUSH2",
      "value": "0x2007"
    },
    "8271": {
      "op": "JUMPI"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8274": {
      "op": "DUP2"
    },
    "8275": {
      "op": "SSTORE"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8278": {
      "op": "ADD"
    },
    "8279": {
      "op": "PUSH2",
      "value": "0x2047"
    },
    "8282": {
      "op": "JUMP"
    },
    "8283": {
      "op": "JUMPDEST"
    },
    "8284": {
      "op": "DUP1"
    },
    "8285": {
      "op": "CALLDATALOAD"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8292": {
      "op": "SHL"
    },
    "8293": {
      "op": "SUB"
    },
    "8294": {
      "op": "DUP2"
    },
    "8295": {
      "op": "AND"
    },
    "8296": {
      "op": "DUP2"
    },
    "8297": {
      "op": "EQ"
    },
    "8298": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "8301": {
      "op": "JUMPI"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8304": {
      "op": "DUP1"
    },
    "8305": {
      "op": "REVERT"
    },
    "8306": {
      "op": "JUMPDEST"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8309": {
      "op": "DUP1"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8312": {
      "op": "DUP4"
    },
    "8313": {
      "op": "DUP6"
    },
    "8314": {
      "op": "SUB"
    },
    "8315": {
      "op": "SLT"
    },
    "8316": {
      "op": "ISZERO"
    },
    "8317": {
      "op": "PUSH2",
      "value": "0x2085"
    },
    "8320": {
      "op": "JUMPI"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8323": {
      "op": "DUP1"
    },
    "8324": {
      "op": "REVERT"
    },
    "8325": {
      "op": "JUMPDEST"
    },
    "8326": {
      "op": "PUSH2",
      "value": "0x208E"
    },
    "8329": {
      "op": "DUP4"
    },
    "8330": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "8333": {
      "jump": "i",
      "op": "JUMP"
    },
    "8334": {
      "op": "JUMPDEST"
    },
    "8335": {
      "op": "SWAP5"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8338": {
      "op": "SWAP4"
    },
    "8339": {
      "op": "SWAP1"
    },
    "8340": {
      "op": "SWAP4"
    },
    "8341": {
      "op": "ADD"
    },
    "8342": {
      "op": "CALLDATALOAD"
    },
    "8343": {
      "op": "SWAP4"
    },
    "8344": {
      "op": "POP"
    },
    "8345": {
      "op": "POP"
    },
    "8346": {
      "op": "POP"
    },
    "8347": {
      "jump": "o",
      "op": "JUMP"
    },
    "8348": {
      "op": "JUMPDEST"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8353": {
      "op": "DUP3"
    },
    "8354": {
      "op": "DUP5"
    },
    "8355": {
      "op": "SUB"
    },
    "8356": {
      "op": "SLT"
    },
    "8357": {
      "op": "ISZERO"
    },
    "8358": {
      "op": "PUSH2",
      "value": "0x20AE"
    },
    "8361": {
      "op": "JUMPI"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8364": {
      "op": "DUP1"
    },
    "8365": {
      "op": "REVERT"
    },
    "8366": {
      "op": "JUMPDEST"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "op": "CALLDATALOAD"
    },
    "8369": {
      "op": "SWAP2"
    },
    "8370": {
      "op": "SWAP1"
    },
    "8371": {
      "op": "POP"
    },
    "8372": {
      "jump": "o",
      "op": "JUMP"
    },
    "8373": {
      "op": "JUMPDEST"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8378": {
      "op": "DUP3"
    },
    "8379": {
      "op": "DUP5"
    },
    "8380": {
      "op": "SUB"
    },
    "8381": {
      "op": "SLT"
    },
    "8382": {
      "op": "ISZERO"
    },
    "8383": {
      "op": "PUSH2",
      "value": "0x20C7"
    },
    "8386": {
      "op": "JUMPI"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "DUP1"
    },
    "8390": {
      "op": "REVERT"
    },
    "8391": {
      "op": "JUMPDEST"
    },
    "8392": {
      "op": "PUSH2",
      "value": "0x20D0"
    },
    "8395": {
      "op": "DUP3"
    },
    "8396": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "8399": {
      "jump": "i",
      "op": "JUMP"
    },
    "8400": {
      "op": "JUMPDEST"
    },
    "8401": {
      "op": "SWAP4"
    },
    "8402": {
      "op": "SWAP3"
    },
    "8403": {
      "op": "POP"
    },
    "8404": {
      "op": "POP"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "jump": "o",
      "op": "JUMP"
    },
    "8407": {
      "op": "JUMPDEST"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8410": {
      "op": "DUP1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8413": {
      "op": "DUP4"
    },
    "8414": {
      "op": "DUP6"
    },
    "8415": {
      "op": "SUB"
    },
    "8416": {
      "op": "SLT"
    },
    "8417": {
      "op": "ISZERO"
    },
    "8418": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8421": {
      "op": "JUMPI"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8424": {
      "op": "DUP1"
    },
    "8425": {
      "op": "REVERT"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "PUSH2",
      "value": "0x20F3"
    },
    "8430": {
      "op": "DUP4"
    },
    "8431": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "8434": {
      "jump": "i",
      "op": "JUMP"
    },
    "8435": {
      "op": "JUMPDEST"
    },
    "8436": {
      "op": "SWAP2"
    },
    "8437": {
      "op": "POP"
    },
    "8438": {
      "op": "PUSH2",
      "value": "0x2101"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8443": {
      "op": "DUP5"
    },
    "8444": {
      "op": "ADD"
    },
    "8445": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "8448": {
      "jump": "i",
      "op": "JUMP"
    },
    "8449": {
      "op": "JUMPDEST"
    },
    "8450": {
      "op": "SWAP1"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "op": "SWAP3"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "SWAP3"
    },
    "8455": {
      "op": "SWAP1"
    },
    "8456": {
      "op": "POP"
    },
    "8457": {
      "jump": "o",
      "op": "JUMP"
    },
    "8458": {
      "op": "JUMPDEST"
    },
    "8459": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8466": {
      "op": "SHL"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8469": {
      "op": "MSTORE"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8474": {
      "op": "MSTORE"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8479": {
      "op": "REVERT"
    },
    "8480": {
      "op": "JUMPDEST"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8483": {
      "op": "DUP2"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8487": {
      "op": "DUP4"
    },
    "8488": {
      "op": "LT"
    },
    "8489": {
      "op": "PUSH2",
      "value": "0x2142"
    },
    "8492": {
      "op": "JUMPI"
    },
    "8493": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8500": {
      "op": "SHL"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8503": {
      "op": "MSTORE"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8508": {
      "op": "MSTORE"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8513": {
      "op": "REVERT"
    },
    "8514": {
      "op": "JUMPDEST"
    },
    "8515": {
      "op": "SWAP2"
    },
    "8516": {
      "op": "SWAP1"
    },
    "8517": {
      "op": "MSTORE"
    },
    "8518": {
      "op": "SWAP1"
    },
    "8519": {
      "jump": "o",
      "op": "JUMP"
    },
    "8520": {
      "op": "JUMPDEST"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8523": {
      "op": "DUP1"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8526": {
      "op": "DUP4"
    },
    "8527": {
      "op": "DUP6"
    },
    "8528": {
      "op": "SUB"
    },
    "8529": {
      "op": "SLT"
    },
    "8530": {
      "op": "ISZERO"
    },
    "8531": {
      "op": "PUSH2",
      "value": "0x215B"
    },
    "8534": {
      "op": "JUMPI"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8537": {
      "op": "DUP1"
    },
    "8538": {
      "op": "REVERT"
    },
    "8539": {
      "op": "JUMPDEST"
    },
    "8540": {
      "op": "POP"
    },
    "8541": {
      "op": "POP"
    },
    "8542": {
      "op": "DUP1"
    },
    "8543": {
      "op": "CALLDATALOAD"
    },
    "8544": {
      "op": "SWAP3"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8547": {
      "op": "SWAP1"
    },
    "8548": {
      "op": "SWAP2"
    },
    "8549": {
      "op": "ADD"
    },
    "8550": {
      "op": "CALLDATALOAD"
    },
    "8551": {
      "op": "SWAP2"
    },
    "8552": {
      "op": "POP"
    },
    "8553": {
      "jump": "o",
      "op": "JUMP"
    },
    "8554": {
      "op": "JUMPDEST"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8557": {
      "op": "DUP1"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8560": {
      "op": "DUP4"
    },
    "8561": {
      "op": "DUP6"
    },
    "8562": {
      "op": "SUB"
    },
    "8563": {
      "op": "SLT"
    },
    "8564": {
      "op": "ISZERO"
    },
    "8565": {
      "op": "PUSH2",
      "value": "0x217D"
    },
    "8568": {
      "op": "JUMPI"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8571": {
      "op": "DUP1"
    },
    "8572": {
      "op": "REVERT"
    },
    "8573": {
      "op": "JUMPDEST"
    },
    "8574": {
      "op": "DUP3"
    },
    "8575": {
      "op": "CALLDATALOAD"
    },
    "8576": {
      "op": "SWAP2"
    },
    "8577": {
      "op": "POP"
    },
    "8578": {
      "op": "PUSH2",
      "value": "0x2101"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8583": {
      "op": "DUP5"
    },
    "8584": {
      "op": "ADD"
    },
    "8585": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "8588": {
      "jump": "i",
      "op": "JUMP"
    },
    "8589": {
      "op": "JUMPDEST"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8592": {
      "op": "DUP1"
    },
    "8593": {
      "op": "DUP3"
    },
    "8594": {
      "op": "MSTORE"
    },
    "8595": {
      "op": "DUP2"
    },
    "8596": {
      "op": "DUP2"
    },
    "8597": {
      "op": "ADD"
    },
    "8598": {
      "op": "MSTORE"
    },
    "8599": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8634": {
      "op": "DUP3"
    },
    "8635": {
      "op": "ADD"
    },
    "8636": {
      "op": "MSTORE"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8639": {
      "op": "ADD"
    },
    "8640": {
      "op": "SWAP1"
    },
    "8641": {
      "jump": "o",
      "op": "JUMP"
    },
    "8642": {
      "op": "JUMPDEST"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8647": {
      "op": "DUP3"
    },
    "8648": {
      "op": "DUP5"
    },
    "8649": {
      "op": "SUB"
    },
    "8650": {
      "op": "SLT"
    },
    "8651": {
      "op": "ISZERO"
    },
    "8652": {
      "op": "PUSH2",
      "value": "0x21D4"
    },
    "8655": {
      "op": "JUMPI"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8658": {
      "op": "DUP1"
    },
    "8659": {
      "op": "REVERT"
    },
    "8660": {
      "op": "JUMPDEST"
    },
    "8661": {
      "op": "DUP2"
    },
    "8662": {
      "op": "MLOAD"
    },
    "8663": {
      "op": "DUP1"
    },
    "8664": {
      "op": "ISZERO"
    },
    "8665": {
      "op": "ISZERO"
    },
    "8666": {
      "op": "DUP2"
    },
    "8667": {
      "op": "EQ"
    },
    "8668": {
      "op": "PUSH2",
      "value": "0x20D0"
    },
    "8671": {
      "op": "JUMPI"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8674": {
      "op": "DUP1"
    },
    "8675": {
      "op": "REVERT"
    },
    "8676": {
      "op": "JUMPDEST"
    },
    "8677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8684": {
      "op": "SHL"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8687": {
      "op": "MSTORE"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8697": {
      "op": "REVERT"
    },
    "8698": {
      "op": "JUMPDEST"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8701": {
      "op": "DUP2"
    },
    "8702": {
      "op": "DUP2"
    },
    "8703": {
      "op": "JUMPDEST"
    },
    "8704": {
      "op": "DUP1"
    },
    "8705": {
      "op": "DUP6"
    },
    "8706": {
      "op": "GT"
    },
    "8707": {
      "op": "ISZERO"
    },
    "8708": {
      "op": "PUSH2",
      "value": "0x2235"
    },
    "8711": {
      "op": "JUMPI"
    },
    "8712": {
      "op": "DUP2"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8715": {
      "op": "NOT"
    },
    "8716": {
      "op": "DIV"
    },
    "8717": {
      "op": "DUP3"
    },
    "8718": {
      "op": "GT"
    },
    "8719": {
      "op": "ISZERO"
    },
    "8720": {
      "op": "PUSH2",
      "value": "0x221B"
    },
    "8723": {
      "op": "JUMPI"
    },
    "8724": {
      "op": "PUSH2",
      "value": "0x221B"
    },
    "8727": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "8730": {
      "jump": "i",
      "op": "JUMP"
    },
    "8731": {
      "op": "JUMPDEST"
    },
    "8732": {
      "op": "DUP1"
    },
    "8733": {
      "op": "DUP6"
    },
    "8734": {
      "op": "AND"
    },
    "8735": {
      "op": "ISZERO"
    },
    "8736": {
      "op": "PUSH2",
      "value": "0x2228"
    },
    "8739": {
      "op": "JUMPI"
    },
    "8740": {
      "op": "SWAP2"
    },
    "8741": {
      "op": "DUP2"
    },
    "8742": {
      "op": "MUL"
    },
    "8743": {
      "op": "SWAP2"
    },
    "8744": {
      "op": "JUMPDEST"
    },
    "8745": {
      "op": "SWAP4"
    },
    "8746": {
      "op": "DUP5"
    },
    "8747": {
      "op": "SHR"
    },
    "8748": {
      "op": "SWAP4"
    },
    "8749": {
      "op": "SWAP1"
    },
    "8750": {
      "op": "DUP1"
    },
    "8751": {
      "op": "MUL"
    },
    "8752": {
      "op": "SWAP1"
    },
    "8753": {
      "op": "PUSH2",
      "value": "0x21FF"
    },
    "8756": {
      "op": "JUMP"
    },
    "8757": {
      "op": "JUMPDEST"
    },
    "8758": {
      "op": "POP"
    },
    "8759": {
      "op": "SWAP3"
    },
    "8760": {
      "op": "POP"
    },
    "8761": {
      "op": "SWAP3"
    },
    "8762": {
      "op": "SWAP1"
    },
    "8763": {
      "op": "POP"
    },
    "8764": {
      "jump": "o",
      "op": "JUMP"
    },
    "8765": {
      "op": "JUMPDEST"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8768": {
      "op": "DUP3"
    },
    "8769": {
      "op": "PUSH2",
      "value": "0x224C"
    },
    "8772": {
      "op": "JUMPI"
    },
    "8773": {
      "op": "POP"
    },
    "8774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8776": {
      "op": "PUSH2",
      "value": "0x1A61"
    },
    "8779": {
      "op": "JUMP"
    },
    "8780": {
      "op": "JUMPDEST"
    },
    "8781": {
      "op": "DUP2"
    },
    "8782": {
      "op": "PUSH2",
      "value": "0x2259"
    },
    "8785": {
      "op": "JUMPI"
    },
    "8786": {
      "op": "POP"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8789": {
      "op": "PUSH2",
      "value": "0x1A61"
    },
    "8792": {
      "op": "JUMP"
    },
    "8793": {
      "op": "JUMPDEST"
    },
    "8794": {
      "op": "DUP2"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8797": {
      "op": "DUP2"
    },
    "8798": {
      "op": "EQ"
    },
    "8799": {
      "op": "PUSH2",
      "value": "0x226F"
    },
    "8802": {
      "op": "JUMPI"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8805": {
      "op": "DUP2"
    },
    "8806": {
      "op": "EQ"
    },
    "8807": {
      "op": "PUSH2",
      "value": "0x2279"
    },
    "8810": {
      "op": "JUMPI"
    },
    "8811": {
      "op": "PUSH2",
      "value": "0x2295"
    },
    "8814": {
      "op": "JUMP"
    },
    "8815": {
      "op": "JUMPDEST"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8818": {
      "op": "SWAP2"
    },
    "8819": {
      "op": "POP"
    },
    "8820": {
      "op": "POP"
    },
    "8821": {
      "op": "PUSH2",
      "value": "0x1A61"
    },
    "8824": {
      "op": "JUMP"
    },
    "8825": {
      "op": "JUMPDEST"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8828": {
      "op": "DUP5"
    },
    "8829": {
      "op": "GT"
    },
    "8830": {
      "op": "ISZERO"
    },
    "8831": {
      "op": "PUSH2",
      "value": "0x228A"
    },
    "8834": {
      "op": "JUMPI"
    },
    "8835": {
      "op": "PUSH2",
      "value": "0x228A"
    },
    "8838": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "8841": {
      "jump": "i",
      "op": "JUMP"
    },
    "8842": {
      "op": "JUMPDEST"
    },
    "8843": {
      "op": "POP"
    },
    "8844": {
      "op": "POP"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8847": {
      "op": "DUP3"
    },
    "8848": {
      "op": "SHL"
    },
    "8849": {
      "op": "PUSH2",
      "value": "0x1A61"
    },
    "8852": {
      "op": "JUMP"
    },
    "8853": {
      "op": "JUMPDEST"
    },
    "8854": {
      "op": "POP"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8857": {
      "op": "DUP4"
    },
    "8858": {
      "op": "LT"
    },
    "8859": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "8862": {
      "op": "DUP4"
    },
    "8863": {
      "op": "LT"
    },
    "8864": {
      "op": "AND"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "8867": {
      "op": "DUP5"
    },
    "8868": {
      "op": "LT"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8871": {
      "op": "DUP5"
    },
    "8872": {
      "op": "LT"
    },
    "8873": {
      "op": "AND"
    },
    "8874": {
      "op": "OR"
    },
    "8875": {
      "op": "ISZERO"
    },
    "8876": {
      "op": "PUSH2",
      "value": "0x22B8"
    },
    "8879": {
      "op": "JUMPI"
    },
    "8880": {
      "op": "POP"
    },
    "8881": {
      "op": "DUP2"
    },
    "8882": {
      "op": "DUP2"
    },
    "8883": {
      "op": "EXP"
    },
    "8884": {
      "op": "PUSH2",
      "value": "0x1A61"
    },
    "8887": {
      "op": "JUMP"
    },
    "8888": {
      "op": "JUMPDEST"
    },
    "8889": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "8892": {
      "op": "DUP4"
    },
    "8893": {
      "op": "DUP4"
    },
    "8894": {
      "op": "PUSH2",
      "value": "0x21FA"
    },
    "8897": {
      "jump": "i",
      "op": "JUMP"
    },
    "8898": {
      "op": "JUMPDEST"
    },
    "8899": {
      "op": "DUP1"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8902": {
      "op": "NOT"
    },
    "8903": {
      "op": "DIV"
    },
    "8904": {
      "op": "DUP3"
    },
    "8905": {
      "op": "GT"
    },
    "8906": {
      "op": "ISZERO"
    },
    "8907": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "8910": {
      "op": "JUMPI"
    },
    "8911": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "8914": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "8917": {
      "jump": "i",
      "op": "JUMP"
    },
    "8918": {
      "op": "JUMPDEST"
    },
    "8919": {
      "op": "MUL"
    },
    "8920": {
      "op": "SWAP4"
    },
    "8921": {
      "op": "SWAP3"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "op": "POP"
    },
    "8924": {
      "op": "POP"
    },
    "8925": {
      "jump": "o",
      "op": "JUMP"
    },
    "8926": {
      "op": "JUMPDEST"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x20D0"
    },
    "8932": {
      "op": "DUP4"
    },
    "8933": {
      "op": "DUP4"
    },
    "8934": {
      "op": "PUSH2",
      "value": "0x223D"
    },
    "8937": {
      "jump": "i",
      "op": "JUMP"
    },
    "8938": {
      "op": "JUMPDEST"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8941": {
      "op": "DUP2"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8944": {
      "op": "NOT"
    },
    "8945": {
      "op": "DIV"
    },
    "8946": {
      "op": "DUP4"
    },
    "8947": {
      "op": "GT"
    },
    "8948": {
      "op": "DUP3"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "ISZERO"
    },
    "8951": {
      "op": "AND"
    },
    "8952": {
      "op": "ISZERO"
    },
    "8953": {
      "op": "PUSH2",
      "value": "0x2304"
    },
    "8956": {
      "op": "JUMPI"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x2304"
    },
    "8960": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "8963": {
      "jump": "i",
      "op": "JUMP"
    },
    "8964": {
      "op": "JUMPDEST"
    },
    "8965": {
      "op": "POP"
    },
    "8966": {
      "op": "MUL"
    },
    "8967": {
      "op": "SWAP1"
    },
    "8968": {
      "jump": "o",
      "op": "JUMP"
    },
    "8969": {
      "op": "JUMPDEST"
    },
    "8970": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8977": {
      "op": "SHL"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8980": {
      "op": "MSTORE"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8985": {
      "op": "MSTORE"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8990": {
      "op": "REVERT"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8994": {
      "op": "DUP3"
    },
    "8995": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "8998": {
      "op": "JUMPI"
    },
    "8999": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9002": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "9005": {
      "jump": "i",
      "op": "JUMP"
    },
    "9006": {
      "op": "JUMPDEST"
    },
    "9007": {
      "op": "POP"
    },
    "9008": {
      "op": "DIV"
    },
    "9009": {
      "op": "SWAP1"
    },
    "9010": {
      "jump": "o",
      "op": "JUMP"
    },
    "9011": {
      "op": "JUMPDEST"
    },
    "9012": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9019": {
      "op": "SHL"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9022": {
      "op": "MSTORE"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9027": {
      "op": "MSTORE"
    },
    "9028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9032": {
      "op": "REVERT"
    },
    "9033": {
      "op": "JUMPDEST"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9038": {
      "op": "NOT"
    },
    "9039": {
      "op": "DUP3"
    },
    "9040": {
      "op": "EQ"
    },
    "9041": {
      "op": "ISZERO"
    },
    "9042": {
      "op": "PUSH2",
      "value": "0x235D"
    },
    "9045": {
      "op": "JUMPI"
    },
    "9046": {
      "op": "PUSH2",
      "value": "0x235D"
    },
    "9049": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "9052": {
      "jump": "i",
      "op": "JUMP"
    },
    "9053": {
      "op": "JUMPDEST"
    },
    "9054": {
      "op": "POP"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9057": {
      "op": "ADD"
    },
    "9058": {
      "op": "SWAP1"
    },
    "9059": {
      "jump": "o",
      "op": "JUMP"
    },
    "9060": {
      "op": "JUMPDEST"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9063": {
      "op": "DUP3"
    },
    "9064": {
      "op": "DUP3"
    },
    "9065": {
      "op": "LT"
    },
    "9066": {
      "op": "ISZERO"
    },
    "9067": {
      "op": "PUSH2",
      "value": "0x2376"
    },
    "9070": {
      "op": "JUMPI"
    },
    "9071": {
      "op": "PUSH2",
      "value": "0x2376"
    },
    "9074": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "9077": {
      "jump": "i",
      "op": "JUMP"
    },
    "9078": {
      "op": "JUMPDEST"
    },
    "9079": {
      "op": "POP"
    },
    "9080": {
      "op": "SUB"
    },
    "9081": {
      "op": "SWAP1"
    },
    "9082": {
      "jump": "o",
      "op": "JUMP"
    },
    "9083": {
      "op": "JUMPDEST"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9086": {
      "op": "DUP3"
    },
    "9087": {
      "op": "PUSH2",
      "value": "0x238A"
    },
    "9090": {
      "op": "JUMPI"
    },
    "9091": {
      "op": "PUSH2",
      "value": "0x238A"
    },
    "9094": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "9097": {
      "jump": "i",
      "op": "JUMP"
    },
    "9098": {
      "op": "JUMPDEST"
    },
    "9099": {
      "op": "POP"
    },
    "9100": {
      "op": "MOD"
    },
    "9101": {
      "op": "SWAP1"
    },
    "9102": {
      "jump": "o",
      "op": "JUMP"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9106": {
      "op": "DUP3"
    },
    "9107": {
      "op": "NOT"
    },
    "9108": {
      "op": "DUP3"
    },
    "9109": {
      "op": "GT"
    },
    "9110": {
      "op": "ISZERO"
    },
    "9111": {
      "op": "PUSH2",
      "value": "0x23A2"
    },
    "9114": {
      "op": "JUMPI"
    },
    "9115": {
      "op": "PUSH2",
      "value": "0x23A2"
    },
    "9118": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "9121": {
      "jump": "i",
      "op": "JUMP"
    },
    "9122": {
      "op": "JUMPDEST"
    },
    "9123": {
      "op": "POP"
    },
    "9124": {
      "op": "ADD"
    },
    "9125": {
      "op": "SWAP1"
    },
    "9126": {
      "jump": "o",
      "op": "JUMP"
    },
    "9127": {
      "op": "JUMPDEST"
    },
    "9128": {
      "op": "DUP1"
    },
    "9129": {
      "op": "MLOAD"
    },
    "9130": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "9141": {
      "op": "DUP2"
    },
    "9142": {
      "op": "AND"
    },
    "9143": {
      "op": "DUP2"
    },
    "9144": {
      "op": "EQ"
    },
    "9145": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "9148": {
      "op": "JUMPI"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9151": {
      "op": "DUP1"
    },
    "9152": {
      "op": "REVERT"
    },
    "9153": {
      "op": "JUMPDEST"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9156": {
      "op": "DUP1"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9159": {
      "op": "DUP1"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9164": {
      "op": "DUP7"
    },
    "9165": {
      "op": "DUP9"
    },
    "9166": {
      "op": "SUB"
    },
    "9167": {
      "op": "SLT"
    },
    "9168": {
      "op": "ISZERO"
    },
    "9169": {
      "op": "PUSH2",
      "value": "0x23D9"
    },
    "9172": {
      "op": "JUMPI"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9175": {
      "op": "DUP1"
    },
    "9176": {
      "op": "REVERT"
    },
    "9177": {
      "op": "JUMPDEST"
    },
    "9178": {
      "op": "PUSH2",
      "value": "0x23E2"
    },
    "9181": {
      "op": "DUP7"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x23A7"
    },
    "9185": {
      "jump": "i",
      "op": "JUMP"
    },
    "9186": {
      "op": "JUMPDEST"
    },
    "9187": {
      "op": "SWAP5"
    },
    "9188": {
      "op": "POP"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9191": {
      "op": "DUP7"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "MLOAD"
    },
    "9194": {
      "op": "SWAP4"
    },
    "9195": {
      "op": "POP"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9198": {
      "op": "DUP7"
    },
    "9199": {
      "op": "ADD"
    },
    "9200": {
      "op": "MLOAD"
    },
    "9201": {
      "op": "SWAP3"
    },
    "9202": {
      "op": "POP"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9205": {
      "op": "DUP7"
    },
    "9206": {
      "op": "ADD"
    },
    "9207": {
      "op": "MLOAD"
    },
    "9208": {
      "op": "SWAP2"
    },
    "9209": {
      "op": "POP"
    },
    "9210": {
      "op": "PUSH2",
      "value": "0x2405"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9215": {
      "op": "DUP8"
    },
    "9216": {
      "op": "ADD"
    },
    "9217": {
      "op": "PUSH2",
      "value": "0x23A7"
    },
    "9220": {
      "jump": "i",
      "op": "JUMP"
    },
    "9221": {
      "op": "JUMPDEST"
    },
    "9222": {
      "op": "SWAP1"
    },
    "9223": {
      "op": "POP"
    },
    "9224": {
      "op": "SWAP3"
    },
    "9225": {
      "op": "SWAP6"
    },
    "9226": {
      "op": "POP"
    },
    "9227": {
      "op": "SWAP3"
    },
    "9228": {
      "op": "SWAP6"
    },
    "9229": {
      "op": "SWAP1"
    },
    "9230": {
      "op": "SWAP4"
    },
    "9231": {
      "op": "POP"
    },
    "9232": {
      "jump": "o",
      "op": "JUMP"
    },
    "9233": {
      "op": "JUMPDEST"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9238": {
      "op": "DUP3"
    },
    "9239": {
      "op": "DUP5"
    },
    "9240": {
      "op": "SUB"
    },
    "9241": {
      "op": "SLT"
    },
    "9242": {
      "op": "ISZERO"
    },
    "9243": {
      "op": "PUSH2",
      "value": "0x2423"
    },
    "9246": {
      "op": "JUMPI"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9249": {
      "op": "DUP1"
    },
    "9250": {
      "op": "REVERT"
    },
    "9251": {
      "op": "JUMPDEST"
    },
    "9252": {
      "op": "DUP2"
    },
    "9253": {
      "op": "MLOAD"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9256": {
      "op": "DUP2"
    },
    "9257": {
      "op": "AND"
    },
    "9258": {
      "op": "DUP2"
    },
    "9259": {
      "op": "EQ"
    },
    "9260": {
      "op": "PUSH2",
      "value": "0x20D0"
    },
    "9263": {
      "op": "JUMPI"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9266": {
      "op": "DUP1"
    },
    "9267": {
      "op": "REVERT"
    },
    "9268": {
      "op": "JUMPDEST"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9271": {
      "op": "DUP1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9274": {
      "op": "SHL"
    },
    "9275": {
      "op": "SUB"
    },
    "9276": {
      "op": "DUP5"
    },
    "9277": {
      "op": "AND"
    },
    "9278": {
      "op": "DUP2"
    },
    "9279": {
      "op": "MSTORE"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9284": {
      "op": "DUP5"
    },
    "9285": {
      "op": "DUP2"
    },
    "9286": {
      "op": "DUP5"
    },
    "9287": {
      "op": "ADD"
    },
    "9288": {
      "op": "MSTORE"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9293": {
      "op": "DUP5"
    },
    "9294": {
      "op": "ADD"
    },
    "9295": {
      "op": "MSTORE"
    },
    "9296": {
      "op": "DUP4"
    },
    "9297": {
      "op": "MLOAD"
    },
    "9298": {
      "op": "DUP1"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9301": {
      "op": "DUP6"
    },
    "9302": {
      "op": "ADD"
    },
    "9303": {
      "op": "MSTORE"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9306": {
      "op": "JUMPDEST"
    },
    "9307": {
      "op": "DUP2"
    },
    "9308": {
      "op": "DUP2"
    },
    "9309": {
      "op": "LT"
    },
    "9310": {
      "op": "ISZERO"
    },
    "9311": {
      "op": "PUSH2",
      "value": "0x2476"
    },
    "9314": {
      "op": "JUMPI"
    },
    "9315": {
      "op": "DUP6"
    },
    "9316": {
      "op": "DUP2"
    },
    "9317": {
      "op": "ADD"
    },
    "9318": {
      "op": "DUP4"
    },
    "9319": {
      "op": "ADD"
    },
    "9320": {
      "op": "MLOAD"
    },
    "9321": {
      "op": "DUP6"
    },
    "9322": {
      "op": "DUP3"
    },
    "9323": {
      "op": "ADD"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9326": {
      "op": "ADD"
    },
    "9327": {
      "op": "MSTORE"
    },
    "9328": {
      "op": "DUP3"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "PUSH2",
      "value": "0x245A"
    },
    "9333": {
      "op": "JUMP"
    },
    "9334": {
      "op": "JUMPDEST"
    },
    "9335": {
      "op": "DUP2"
    },
    "9336": {
      "op": "DUP2"
    },
    "9337": {
      "op": "GT"
    },
    "9338": {
      "op": "ISZERO"
    },
    "9339": {
      "op": "PUSH2",
      "value": "0x2488"
    },
    "9342": {
      "op": "JUMPI"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9347": {
      "op": "DUP4"
    },
    "9348": {
      "op": "DUP8"
    },
    "9349": {
      "op": "ADD"
    },
    "9350": {
      "op": "ADD"
    },
    "9351": {
      "op": "MSTORE"
    },
    "9352": {
      "op": "JUMPDEST"
    },
    "9353": {
      "op": "POP"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9356": {
      "op": "ADD"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9359": {
      "op": "NOT"
    },
    "9360": {
      "op": "AND"
    },
    "9361": {
      "op": "SWAP3"
    },
    "9362": {
      "op": "SWAP1"
    },
    "9363": {
      "op": "SWAP3"
    },
    "9364": {
      "op": "ADD"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9367": {
      "op": "ADD"
    },
    "9368": {
      "op": "SWAP6"
    },
    "9369": {
      "op": "SWAP5"
    },
    "9370": {
      "op": "POP"
    },
    "9371": {
      "op": "POP"
    },
    "9372": {
      "op": "POP"
    },
    "9373": {
      "op": "POP"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9a0cd5fdac56b111ade7171146f0a15148981b58",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // to create my own token or make available the token on smart contract\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\"; // to get current rate of currencies\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\"; // to get randomness function\n\ncontract CardGame is VRFConsumerBase, Ownable {\n    bytes32 public keyHash;\n    uint256 public fee;\n    event RequestedRandomness(bytes32 requestId);\n\n    enum GAME_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    GAME_STATE public game_state;\n    address public mscTokenAddress;\n    IERC20 public mscToken;\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyHash,\n        address _mscTokenAddress\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        keyHash = _keyHash;\n        fee = _fee;\n        game_state = GAME_STATE.CLOSED;\n        mscTokenAddress = _mscTokenAddress;\n        mscToken = IERC20(_mscTokenAddress);\n    }\n\n    // token address > player address > amount\n    mapping(address => mapping(address => uint256)) public wagerOfPlayer;\n\n    // token address > priceFeed address\n    mapping(address => address) public tokenPriceFeeds;\n    //address[] public players;\n    // token address > player address list\n    mapping(address => address[]) public players;\n    address[] public allowedTokens;\n    //uint256 public totalPot = 0;\n    // token address > totalBetValue\n    mapping(address => uint256) public totalPot;\n    // token address > player address > card number\n    mapping(address => mapping(address => uint256)) public playersCardNumber;\n    // token > number of players\n    mapping(address => uint256) public playerCounter;\n    //uint256[] public cardsNumber;\n    mapping(address => uint256[]) public cardNumbers;\n    //address public winner = address(0); // you can't use 'null' in solidity\n    // token > winner\n    mapping(address => address) public winner;\n    //address public tokenToRandomness = address(0);\n    //player address => token addrss (to prevent to make not to people confuse when require randomness)\n    address public tokenToRandomness = address(0);\n    address public competedToken = address(0);\n    uint256 public randomness;\n\n    //function showMSCTokenAddress() public returns (address) {\n    //return mscTokenAddress;\n    //}\n    //function returnPublicVariables() public view returns () {\n    //return (game_state);\n    //}\n\n    function sendMSCToken(uint256 _amount) public onlyOwner {\n        mscToken.transfer(msg.sender, _amount); // from contract_address to owner_address\n    }\n\n    function issueTokens(address _token) public onlyOwner {\n        for (uint256 index = 0; index < players[_token].length; index++) {\n            address recipient = players[_token][index];\n            uint256 userTotalValue = getUserSingleTokenValue(recipient, _token);\n            mscToken.transfer(recipient, userTotalValue); // send players MSCToken as a reward\n        }\n    }\n\n    function allowToken(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    function tokenIsAllowed(address _token) public returns (bool) {\n        for (uint256 index = 0; index < allowedTokens.length; index += 1) {\n            if (allowedTokens[index] == _token) {\n                return true;\n            }\n            return false;\n        }\n    }\n\n    function playerIsAllowed(address _token) internal returns (bool) {\n        for (uint256 index = 0; index < players[_token].length; index++) {\n            address player = players[_token][index];\n            if (playersCardNumber[_token][player] != 0) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeeds[_token] = _priceFeed;\n    }\n\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeeds[_token];\n        // AggregatorV3Interface is for getting current rate of currencies\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // this func is for just calculating prices to send MSCToken to players as a reward.\n    function getUserSingleTokenValue(address _user, address _token)\n        internal\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][_user] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        return ((wagerOfPlayer[_token][_user] * price) / (10**decimals));\n    }\n\n    // this func is for UI which each user use\n    function getPlayerSingleTokenValue(address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][msg.sender] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        // 10 ETH (100000000000000000000)\n        // ETH/USD -> 100 (10000000000)\n        // 10 * 100 = 1,000\n        return ((wagerOfPlayer[_token][msg.sender] * price) / (10**decimals));\n    }\n\n    //function balanceOfCG() public view returns (uint256) {\n    //return address(this).balance;\n    //}\n\n    function removeFromPlayers(address _token, address _user) internal {\n        uint256 index;\n        for (uint256 i = 0; i < players[_token].length; i++) {\n            if (players[_token][i] == _user) {\n                index = i;\n                break;\n            }\n        }\n        for (uint256 e = index; e < players[_token].length - 1; e++) {\n            players[_token][e] = players[_token][e + 1];\n        }\n        //playerCounter -= 1;\n    }\n\n    function repayBetToken(uint256 _amount, address _token) public {\n        require(\n            game_state == GAME_STATE.OPEN || game_state == GAME_STATE.CLOSED,\n            \"You can't get the refund after game started!\"\n        );\n        require(\n            wagerOfPlayer[_token][msg.sender] >= _amount,\n            \"You didn't bet token of the amount!\"\n        );\n        require(\n            playersCardNumber[_token][msg.sender] == 0,\n            \"You drew your card, you can't refund!\"\n        );\n        IERC20(_token).transfer(msg.sender, _amount);\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] -\n            _amount;\n        totalPot[_token] = totalPot[_token] - _amount;\n        if (wagerOfPlayer[_token][msg.sender] <= 0) {\n            removeFromPlayers(_token, msg.sender);\n        }\n    }\n\n    function startGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CLOSED,\n            \"Can't start new game state yet!\"\n        );\n\n        game_state = GAME_STATE.OPEN;\n    }\n\n    function betMoney(uint256 _amount, address _token) public {\n        require(_amount > 0, \"A bet must be more than 0\");\n        require(tokenIsAllowed(_token), \"This token is not allowed\");\n        require(\n            players[_token].length < 5,\n            \"Sorry, this game is already full. Please wait next game.\"\n        );\n        require(game_state == GAME_STATE.OPEN, \"You can't bet money while \");\n        //require(\n        //IERC20(_token).balanceOf(msg.sender) > 0,\n        //\"You don't have this token!\"\n        //);\n        //msg.sender.transfer(_amount);\n        //IERC20(_token).approve(address(this), _amount);\n\n        if (_token == mscTokenAddress) {\n            mscToken.transferFrom(msg.sender, address(this), _amount); // this 'msg.sender' must be owner of MSCToken, not third party address\n            //mscToken.transfer(address(this), _amount); // transfer(toAddress, amount);  sender(who call this func(this contact)) sends amount of token to toAddress\n        } else {\n            //IERC20(_token).transferFrom(msg.sender, address(this), _amount); // this function is avaiable only when owner of the token who gived the right this contract to handle allowance with approve function gives token to users.\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount); // you can't use transferFrom when user send token to this contract.\n        }\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] +\n            _amount;\n        if (players[_token].length <= 0) {\n            totalPot[_token] = _amount;\n        } else {\n            totalPot[_token] = totalPot[_token] + _amount;\n        }\n        players[_token].push(msg.sender);\n        playersCardNumber[_token][msg.sender] = 0;\n        //playerCounter += 1;\n    }\n\n    function drawCards(address _token) public {\n        tokenToRandomness = _token;\n\n        bytes32 requestId = requestRandomness(keyHash, fee);\n        emit RequestedRandomness(requestId);\n\n        //for (uint256 i = 0; i < players[competedToken].length; i++) {\n        //bytes32 requestId = requestRandomness(keyHash, fee); // let fulfillRandomness do\n        //emit RequestedRandomness(requestId);\n        //playerCounter += 1;\n        //}\n        //bytes32 requestId = requestRandomness(keyHash, fee);\n        //playerCounter = 0;\n    }\n\n    // Don't use 'msg.sender' in fulfillRandomness, cause user of this function is contract\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(game_state == GAME_STATE.OPEN, \"You aren't there yet!\");\n        require(_randomness > 0, \"random-not-found\");\n        randomness = _randomness;\n        uint256 cardNumber = _randomness % 14;\n        if (cardNumber == 0) {\n            cardNumber = 1;\n        }\n        address player = players[tokenToRandomness][\n            playerCounter[tokenToRandomness]\n        ];\n        playersCardNumber[tokenToRandomness][player] = cardNumber;\n        cardNumbers[tokenToRandomness].push(cardNumber);\n        playerCounter[tokenToRandomness] += 1;\n        //address player = players[competedToken][playerCounter];\n        //playersCardNumber[player] = cardNumber;\n    }\n\n    function getWinner(address _token) public onlyOwner returns (address) {\n        game_state = GAME_STATE.CALCULATING_WINNER; // this should be moved to getWinner\n        //require(\n        //game_state == GAME_STATE.CALCULATING_WINNER,\n        //\"Game is not over yet!\"\n        //);\n        require(\n            competedToken == address(0),\n            \"Before game is not over yet, owner have to pay reward to winner!\"\n        );\n        require(\n            playerIsAllowed(_token),\n            \"All participants needs to draw a card!\"\n        );\n\n        //for (uint256 i = 0; i < players[competedToken].length; i++) {\n        //uint256 cardNumber = playersCardNumber[players[competedToken][i]];\n        //cardsNumber.push(cardNumber);\n        //}\n        uint256 max = 0;\n\n        for (uint256 c = 0; c < cardNumbers[_token].length; c++) {\n            if (cardNumbers[_token][c] > max) {\n                max = cardNumbers[_token][c];\n                winner[_token] = players[_token][c];\n            } else if (cardNumbers[_token][c] == max) {\n                uint256 judge = max % 2;\n                if (judge == 0) {\n                    winner[_token] = players[_token][c];\n                } else if (judge == 1) {\n                    continue;\n                }\n            }\n        }\n        competedToken = _token;\n        return winner[_token];\n    }\n\n    function endGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(tokenIsAllowed(competedToken), \"This token is not allowed\");\n        require(\n            winner[competedToken] != address(0),\n            \"Still doesn't know which player is winner\"\n        );\n        //IERC20(_token).transfer(msg.sender, totalPot);\n        IERC20(competedToken).transferFrom(\n            msg.sender,\n            winner[competedToken],\n            totalPot[competedToken]\n        ); // You can use transferFrom only when you sends tokens to user. It's impossibel the reverse\n        totalPot[competedToken] = 0;\n        //players = new address[];\n        for (\n            uint256 index = 0;\n            index < players[competedToken].length;\n            index++\n        ) {\n            address player = players[competedToken][index];\n            wagerOfPlayer[competedToken][player] = 0;\n            playersCardNumber[competedToken][player] = 0;\n        }\n        tokenToRandomness = address(0);\n        playerCounter[competedToken] = 0;\n        players[competedToken] = new address[](0);\n        cardNumbers[competedToken] = new uint256[](0);\n        winner[competedToken] = address(0);\n        competedToken = address(0);\n        game_state = GAME_STATE.CLOSED;\n    }\n}\n",
  "sourceMap": "444:12678:7:-:0;;;2288:45;;;-1:-1:-1;;;;;;2288:45:7;;;;;;2339:41;;;;;;;;783:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:3;;;;;9407;;;;867:23:0;665:10:2;867:9:0;:23::i;:::-;996:7:7::1;:18:::0;;;;1024:3:::1;:10:::0;;;;1044::::1;:30:::0;;1057:17:::1;-1:-1:-1::0;;;;;;1084:34:7;;;::::1;-1:-1:-1::0;;;;;1084:34:7;;::::1;::::0;;::::1;::::0;;;;1128:8:::1;:35:::0;;-1:-1:-1;;;;;;1128:35:7::1;::::0;;::::1;::::0;;-1:-1:-1;444:12678:7;;-1:-1:-1;444:12678:7;2041:169:0;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;575:2;564:9;560:18;554:25;544:35;;619:2;608:9;604:18;598:25;588:35;;642:50;687:3;676:9;672:19;642:50;:::i;:::-;632:60;;196:502;;;;;;;;:::o;703:127::-;444:12678:7;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CardGame.sol",
  "type": "contract"
}