{"allSourcePaths": {"7": "contracts/CardGame.sol", "5": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "2": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol", "1": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "0": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol", "3": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol", "4": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFRequestIDBase.sol"}, "bytecode": "60c0604052600f80546001600160a01b03199081169091556010805490911690553480156200002d57600080fd5b506040516200268d3803806200268d83398101604081905262000050916200012c565b6001600160a01b0385811660a05284166080526200006e33620000bd565b6002919091556003919091556004805460016001600160a81b03199091166101006001600160a01b0390941693840217179055600580546001600160a01b0319169091179055506200018a9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200012757600080fd5b919050565b600080600080600060a086880312156200014557600080fd5b62000150866200010f565b945062000160602087016200010f565b935060408601519250606086015191506200017e608087016200010f565b90509295509295909350565b60805160a0516124d6620001b760003960008181610c680152611aec01526000611abd01526124d66000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638ae43b541161011a578063bd9c47e3116100ad578063ddca3f431161007c578063ddca3f43146104ba578063f1c5d6c2146104c3578063f1d76a5f146104eb578063f2fde38b146104fe578063fe05cc9c1461051157600080fd5b8063bd9c47e314610446578063cd5ea4f81461046f578063d65ab5f21461048f578063dd5b84671461049757600080fd5b80639c753122116100e95780639c753122146103fa578063b53472ef1461040d578063b81baa5914610420578063b90c899d1461043357600080fd5b80638ae43b54146103a95780638b42eb7c146103c35780638da5cb5b146103d657806394985ddd146103e757600080fd5b806345d7c3b91161019d57806366ce6dab1161016c57806366ce6dab146103435780636cbc2ded1461036e578063715018a614610376578063877dd39d1461037e57806387cd6ad21461039157600080fd5b806345d7c3b9146102f45780635e5f2e261461030757806361728f391461031a57806366a1df651461032357600080fd5b80632ad95786116101d95780632ad957861461028457806336013189146102ad5780633fdb144b146102b65780633ff54c71146102e157600080fd5b806305f3bbd91461020b5780630b26083c1461023157806324398a85146102465780632521cc4614610259575b600080fd5b61021e610219366004612072565b610524565b6040519081526020015b60405180910390f35b61024461023f36600461209c565b610555565b005b61021e6102543660046120b5565b610601565b60105461026c906001600160a01b031681565b6040516001600160a01b039091168152602001610228565b61026c6102923660046120b5565b600e602052600090815260409020546001600160a01b031681565b61021e60115481565b61021e6102c43660046120d7565b600b60209081526000928352604080842090915290825290205481565b6102446102ef3660046120b5565b61067d565b600f5461026c906001600160a01b031681565b61026c61031536600461209c565b6107a3565b61021e60025481565b61021e6103313660046120b5565b600a6020526000908152604090205481565b61021e6103513660046120d7565b600660209081526000928352604080842090915290825290205481565b6102446107cd565b610244610b63565b61024461038c3660046120d7565b610b99565b60045461026c9061010090046001600160a01b031681565b6004546103b69060ff1681565b6040516102289190612120565b6102446103d13660046120b5565b610bf1565b6001546001600160a01b031661026c565b6102446103f5366004612148565b610c5d565b61026c610408366004612072565b610cdf565b61024461041b3660046120b5565b610d17565b61024461042e36600461216a565b610d93565b61026c6104413660046120b5565b611045565b61026c6104543660046120b5565b6007602052600090815260409020546001600160a01b031681565b61021e61047d3660046120b5565b600c6020526000908152604090205481565b610244611385565b6104aa6104a53660046120b5565b611429565b6040519015158152602001610228565b61021e60035481565b6104d66104d13660046120b5565b611486565b60408051928352602083019190915201610228565b6102446104f936600461216a565b611587565b61024461050c3660046120b5565b611946565b60055461026c906001600160a01b031681565b600d602052816000526040600020818154811061054057600080fd5b90600052602060002001600091509150505481565b6001546001600160a01b031633146105885760405162461bcd60e51b815260040161057f9061218d565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd91906121c2565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061062c84611486565b909250905061063c81600a6122de565b6001600160a01b038516600090815260066020908152604080832033845290915290205461066b9084906122ea565b610675919061231f565b949350505050565b6001546001600160a01b031633146106a75760405162461bcd60e51b815260040161057f9061218d565b60005b6001600160a01b0382166000908152600860205260409020548110156105fd576001600160a01b03821660009081526008602052604081208054839081106106f4576106f4612333565b60009182526020822001546001600160a01b0316915061071482856119e1565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906121c2565b505050808061079b90612349565b9150506106aa565b600981815481106107b357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107f75760405162461bcd60e51b815260040161057f9061218d565b600260045460ff1660028111156108105761081061210a565b146108555760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60105461086a906001600160a01b0316611429565b6108b25760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6010546001600160a01b039081166000908152600e60205260409020541661092e5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b606482015260840161057f565b6010546001600160a01b039081166000818152600e6020908152604080832054600a909252918290205491516323b872dd60e01b8152336004820152931660248401526044830152906323b872dd906064016020604051808303816000875af115801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906121c2565b506010546001600160a01b03166000908152600a602052604081208190555b6010546001600160a01b0316600090815260086020526040902054811015610a8e576010546001600160a01b03166000908152600860205260408120805483908110610a3057610a30612333565b6000918252602080832090910154601080546001600160a01b0390811685526006845260408086209382168087529385528086208690559154168452600b835280842091845291528120555080610a8681612349565b9150506109e2565b50600f80546001600160a01b0319169055601080546001600160a01b039081166000908152600c60209081526040808320839055805183815280830180835295549094168352600890915290209051610ae79290611fa6565b5060408051600080825260208083018085526010546001600160a01b03168352600d9091529290209051610b1b929061200b565b50601080546001600160a01b03166000908152600e6020526040902080546001600160a01b03199081169091558154169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610b8d5760405162461bcd60e51b815260040161057f9061218d565b610b976000611a67565b565b6001546001600160a01b03163314610bc35760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b600f80546001600160a01b0319166001600160a01b038316179055600254600354600091610c1e91611ab9565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c5191815260200190565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd55760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161057f565b6105fd8282611c30565b60086020528160005260406000208181548110610cfb57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610d415760405162461bcd60e51b815260040161057f9061218d565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610dac57610dac61210a565b1480610dce5750600160045460ff166002811115610dcc57610dcc61210a565b145b610e2f5760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b606482015260840161057f565b6001600160a01b0381166000908152600660209081526040808320338452909152902054821115610eae5760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b606482015260840161057f565b6001600160a01b0381166000908152600b6020908152604080832033845290915290205415610f2d5760405162461bcd60e51b815260206004820152602560248201527f596f75206472657720796f757220636172642c20796f752063616e277420726560448201526466756e642160d81b606482015260840161057f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e91906121c2565b506001600160a01b0381166000908152600660209081526040808320338452909152902054610fce908390612364565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a909152205461100a908390612364565b6001600160a01b0382166000908152600a602090815260408083209390935560068152828220338352905220546105fd576105fd8133611da7565b6001546000906001600160a01b031633146110725760405162461bcd60e51b815260040161057f9061218d565b6004805460ff191660021790556010546001600160a01b031615611100576040805162461bcd60e51b81526020600482015260248101919091527f4265666f72652067616d65206973206e6f74206f766572207965742c206f776e60448201527f6572206861766520746f207061792072657761726420746f2077696e6e657221606482015260840161057f565b61110982611f0f565b6111645760405162461bcd60e51b815260206004820152602660248201527f416c6c207061727469636970616e7473206e6565647320746f2064726177206160448201526520636172642160d01b606482015260840161057f565b6000805b6001600160a01b0384166000908152600d602052604090205481101561134c576001600160a01b0384166000908152600d602052604090208054839190839081106111b5576111b5612333565b90600052602060002001541115611270576001600160a01b0384166000908152600d602052604090208054829081106111f0576111f0612333565b9060005260206000200154915060086000856001600160a01b03166001600160a01b03168152602001908152602001600020818154811061123357611233612333565b60009182526020808320909101546001600160a01b038781168452600e909252604090922080546001600160a01b0319169190921617905561133a565b6001600160a01b0384166000908152600d6020526040902080548391908390811061129d5761129d612333565b9060005260206000200154141561133a5760006112bb60028461237b565b905080611329576001600160a01b03851660009081526008602052604090208054839081106112ec576112ec612333565b60009182526020808320909101546001600160a01b038881168452600e909252604090922080546001600160a01b03191691909216179055611338565b8060011415611338575061133a565b505b8061134481612349565b915050611168565b5050601080546001600160a01b0319166001600160a01b038481169182179092556000908152600e60205260409020541690505b919050565b6001546001600160a01b031633146113af5760405162461bcd60e51b815260040161057f9061218d565b600160045460ff1660028111156113c8576113c861210a565b146114155760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d65207374617465207965742100604482015260640161057f565b600480546000919060ff1916600183610b5c565b60008060095481101561148057826001600160a01b03166009828154811061145357611453612333565b6000918252602090912001546001600160a01b031614156114775750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa1580156114e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b91906123c1565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612411565b919760ff909216965090945050505050565b600082116115d75760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e203000000000000000604482015260640161057f565b6115e081611429565b6116285760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6001600160a01b0381166000908152600860205260409020546005116116b65760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e0000000000000000606482015260840161057f565b600060045460ff1660028111156116cf576116cf61210a565b1461171c5760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c6520000000000000604482015260640161057f565b6004546001600160a01b038281166101009092041614156117b8576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b291906121c2565b50611831565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f91906121c2565b505b6001600160a01b038116600090815260066020908152604080832033845290915290205461186090839061238f565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600890915220546118b5576001600160a01b0381166000908152600a602052604090208290556118f3565b6001600160a01b0381166000908152600a60205260409020546118d990839061238f565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b0316600081815260086020908152604080832080546001810182559084528284200180546001600160a01b03191633908117909155938352600b82528083209383529290529081205550565b6001546001600160a01b031633146119705760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b0381166119d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b6119de81611a67565b50565b6001600160a01b0380821660009081526006602090815260408220928516825291909152600080611a1184611486565b9092509050611a2181600a6122de565b6001600160a01b038086166000908152600660209081526040808320938a1683529290522054611a529084906122ea565b611a5c919061231f565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611b29929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b5693929190612434565b6020604051808303816000875af1158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9991906121c2565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611bf390600161238f565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120610675565b600060045460ff166002811115611c4957611c4961210a565b14611c8e5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60008111611cd15760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b604482015260640161057f565b60118190556000611ce3600e8361237b565b905080611cee575060015b600f546001600160a01b03166000908152600860209081526040808320600c90925282205481548110611d2357611d23612333565b6000918252602080832090910154600f80546001600160a01b039081168552600b84526040808620938216808752938552808620889055825482168652600d85528086208054600181810183559188528688200189905592549091168552600c9093529183208054919450919290611d9c90849061238f565b909155505050505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611e2f576001600160a01b03848116600090815260086020526040902080549185169183908110611dfa57611dfa612333565b6000918252602090912001546001600160a01b03161415611e1d57809150611e2f565b80611e2781612349565b915050611dab565b50805b6001600160a01b038416600090815260086020526040902054611e5790600190612364565b811015611f09576001600160a01b0384166000908152600860205260409020611e8182600161238f565b81548110611e9157611e91612333565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611ece57611ece612333565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611f0181612349565b915050611e32565b50505050565b6001600160a01b038116600090815260086020526040812054819015611480576001600160a01b0383166000908152600860205260408120805483908110611f5957611f59612333565b60009182526020808320909101546001600160a01b038781168452600b835260408085209190921680855292529091205490915015611f9c575060019392505050565b5060009392505050565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611fc6565b50612007929150612046565b5090565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182559160200191906001019061202b565b5b808211156120075760008155600101612047565b80356001600160a01b038116811461138057600080fd5b6000806040838503121561208557600080fd5b61208e8361205b565b946020939093013593505050565b6000602082840312156120ae57600080fd5b5035919050565b6000602082840312156120c757600080fd5b6120d08261205b565b9392505050565b600080604083850312156120ea57600080fd5b6120f38361205b565b91506121016020840161205b565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061214257634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561215b57600080fd5b50508035926020909101359150565b6000806040838503121561217d57600080fd5b823591506121016020840161205b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156121d457600080fd5b815180151581146120d057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561223557816000190482111561221b5761221b6121e4565b8085161561222857918102915b93841c93908002906121ff565b509250929050565b60008261224c57506001611a61565b8161225957506000611a61565b816001811461226f576002811461227957612295565b6001915050611a61565b60ff84111561228a5761228a6121e4565b50506001821b611a61565b5060208310610133831016604e8410600b84101617156122b8575081810a611a61565b6122c283836121fa565b80600019048211156122d6576122d66121e4565b029392505050565b60006120d0838361223d565b6000816000190483118215151615612304576123046121e4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261232e5761232e612309565b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561235d5761235d6121e4565b5060010190565b600082821015612376576123766121e4565b500390565b60008261238a5761238a612309565b500690565b600082198211156123a2576123a26121e4565b500190565b805169ffffffffffffffffffff8116811461138057600080fd5b600080600080600060a086880312156123d957600080fd5b6123e2866123a7565b9450602086015193506040860151925060608601519150612405608087016123a7565b90509295509295909350565b60006020828403121561242357600080fd5b815160ff811681146120d057600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156124765785810183015185820160800152820161245a565b81811115612488576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220a55600b326c55055bf5ae066b99420e8f5556d5b741430f89f32f211ae41833f64736f6c634300080a0033", "bytecodeSha1": "a7443b72b3fb3cf2faa2121a4a3cb56ce0c2d001", "coverageMap": {"statements": {"7": {"CardGame.sendMSCToken": {"2": [2686, 2724]}, "CardGame.getPlayerSingleTokenValue": {"3": [5461, 5530]}, "CardGame.issueTokens": {"4": [3059, 3103], "5": [2899, 2906]}, "CardGame.endGame": {"6": [11803, 11914], "7": [11924, 11991], "8": [12001, 12124], "9": [12191, 12331], "10": [12433, 12460], "11": [12697, 12737], "12": [12751, 12795], "13": [12605, 12612], "14": [12815, 12845], "15": [12855, 12887], "16": [12897, 12938], "17": [12948, 12993], "18": [13003, 13037], "19": [13047, 13073], "20": [13083, 13113]}, "CardGame.setPriceFeedContract": {"22": [4026, 4062]}, "CardGame.drawCards": {"23": [9017, 9043], "24": [9115, 9150]}, "CardGame.allowToken": {"27": [3226, 3252]}, "CardGame.repayBetToken": {"28": [6177, 6332], "29": [6342, 6468], "30": [6478, 6604], "31": [6614, 6658], "32": [6668, 6771], "33": [6781, 6826], "34": [6894, 6931]}, "CardGame.getWinner": {"35": [10472, 10514], "36": [10682, 10820], "37": [10830, 10938], "38": [11299, 11327], "39": [11345, 11380], "40": [11533, 11568], "41": [11631, 11639], "42": [11228, 11231], "43": [11691, 11713], "44": [11723, 11744]}, "CardGame.startGame": {"45": [7002, 7111], "46": [7122, 7150]}, "CardGame.tokenIsAllowed": {"47": [3471, 3482], "48": [3510, 3522]}, "CardGame.getTokenValue": {"49": [4551, 4584]}, "CardGame.betMoney": {"50": [7231, 7280], "51": [7290, 7350], "52": [7360, 7489], "53": [7499, 7567], "54": [7844, 7901], "55": [8405, 8468], "56": [8557, 8660], "57": [8717, 8743], "58": [8774, 8819], "59": [8839, 8871], "60": [8881, 8922]}, "CardGame.getUserSingleTokenValue": {"63": [4955, 5019]}, "CardGame.fulfillRandomness": {"71": [9716, 9779], "72": [9789, 9833], "73": [9843, 9867], "74": [9959, 9973], "75": [10102, 10159], "76": [10169, 10216], "77": [10226, 10263]}, "CardGame.removeFromPlayers": {"78": [5867, 5876], "79": [5894, 5899], "80": [5797, 5800], "81": [6008, 6051], "82": [5989, 5992]}, "CardGame.playerIsAllowed": {"83": [3814, 3825], "84": [3864, 3876]}}, "5": {}, "2": {"Context._msgSender": {"1": [658, 675]}}, "1": {}, "0": {"Ownable.owner": {"0": [1038, 1051]}, "Ownable.renounceOwnership": {"21": [1669, 1690]}, "Ownable.transferOwnership": {"61": [1926, 1999], "62": [2009, 2028]}, "Ownable._setOwner": {"64": [2131, 2148], "65": [2158, 2203]}}, "3": {"VRFConsumerBase.rawFulfillRandomness": {"25": [9741, 9813], "26": [9819, 9859]}, "VRFConsumerBase.requestRandomness": {"66": [7888, 7975], "68": [8718, 8757], "70": [8763, 8802]}}, "4": {"VRFRequestIDBase.makeVRFInputSeed": {"67": [980, 1058]}, "VRFRequestIDBase.makeRequestId": {"69": [1583, 1642]}}}, "branches": {"7": {"CardGame.endGame": {"85": [11824, 11867, true], "86": [11932, 11961, true]}, "CardGame.repayBetToken": {"87": [6198, 6227, true], "88": [6231, 6262, true], "89": [6363, 6407, true], "90": [6499, 6541, true]}, "CardGame.getWinner": {"91": [10703, 10730, true], "92": [10851, 10874, true], "93": [11251, 11279, false], "94": [11405, 11434, false], "95": [11499, 11509, false], "96": [11597, 11607, false]}, "CardGame.startGame": {"97": [7023, 7054, true]}, "CardGame.tokenIsAllowed": {"98": [3421, 3451, false]}, "CardGame.betMoney": {"99": [7239, 7250, true], "100": [7298, 7320, true], "101": [7507, 7536, true], "102": [7803, 7828, false]}, "CardGame.fulfillRandomness": {"103": [9724, 9753, true], "104": [9797, 9812, true], "105": [9928, 9943, false]}, "CardGame.removeFromPlayers": {"106": [5820, 5847, false]}, "CardGame.playerIsAllowed": {"107": [3756, 3794, false]}}, "5": {}, "2": {}, "1": {}, "0": {"Ownable.transferOwnership": {"108": [1934, 1956, true]}}, "3": {"VRFConsumerBase.rawFulfillRandomness": {"109": [9749, 9777, true]}}, "4": {}}}, "dependencies": ["smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface", "Openzeppelin/openzeppelin-contracts@4.2.0/Context", "Openzeppelin/openzeppelin-contracts@4.2.0/IERC20", "Openzeppelin/openzeppelin-contracts@4.2.0/Ownable", "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@0.2.1/VRFRequestIDBase"], "offset": [444, 13122], "type": "contract", "abi": [{"inputs": [{"internalType": "address", "name": "_vrfCoordinator", "type": "address"}, {"internalType": "address", "name": "_link", "type": "address"}, {"internalType": "uint256", "name": "_fee", "type": "uint256"}, {"internalType": "bytes32", "name": "_keyHash", "type": "bytes32"}, {"internalType": "address", "name": "_mscTokenAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "requestId", "type": "bytes32"}], "name": "RequestedRandomness", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "allowToken", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "allowedTokens", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "address", "name": "_token", "type": "address"}], "name": "betMoney", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "name": "cardNumbers", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "competedToken", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "drawCards", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "endGame", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "fee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "game_state", "outputs": [{"internalType": "enum CardGame.GAME_STATE", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "getPlayerSingleTokenValue", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "getTokenValue", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "getWinner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "issueTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "keyHash", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "mscToken", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "mscTokenAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "playerCounter", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "name": "players", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "address", "name": "", "type": "address"}], "name": "playersCardNumber", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "randomness", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}], "name": "rawFulfillRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "address", "name": "_token", "type": "address"}], "name": "repayBetToken", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "sendMSCToken", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}, {"internalType": "address", "name": "_priceFeed", "type": "address"}], "name": "setPriceFeedContract", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "tokenIsAllowed", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "tokenPriceFeeds", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "tokenToRandomness", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "totalPot", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "address", "name": "", "type": "address"}], "name": "wagerOfPlayer", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "winner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "ast": {"absolutePath": "contracts/CardGame.sol", "exportedSymbols": {"AggregatorV3Interface": [1455], "CardGame": [1106], "Context": [1476], "IERC20": [1288], "LinkTokenInterface": [1621], "Ownable": [1210], "VRFConsumerBase": [1409], "VRFRequestIDBase": [1526]}, "id": 1107, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "32:23:7"}, {"absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1107, "sourceUnit": 1211, "src": "57:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/shota/.brownie/packages/Openzeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1107, "sourceUnit": 1289, "src": "110:56:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1107, "sourceUnit": 1456, "src": "239:76:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/shota/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1107, "sourceUnit": 1410, "src": "353:59:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 6, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1409, "src": "465:15:7"}, "id": 7, "nodeType": "InheritanceSpecifier", "src": "465:15:7"}, {"baseName": {"id": 8, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 1210, "src": "482:7:7"}, "id": 9, "nodeType": "InheritanceSpecifier", "src": "482:7:7"}], "canonicalName": "CardGame", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 1106, "linearizedBaseContracts": [1106, 1210, 1476, 1409, 1526], "name": "CardGame", "nameLocation": "453:8:7", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "61728f39", "id": 11, "mutability": "mutable", "name": "keyHash", "nameLocation": "511:7:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "496:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 10, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "496:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ddca3f43", "id": 13, "mutability": "mutable", "name": "fee", "nameLocation": "539:3:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "524:18:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "524:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"anonymous": false, "id": 17, "name": "RequestedRandomness", "nameLocation": "554:19:7", "nodeType": "EventDefinition", "parameters": {"id": 16, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 15, "indexed": false, "mutability": "mutable", "name": "requestId", "nameLocation": "582:9:7", "nodeType": "VariableDeclaration", "scope": 17, "src": "574:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 14, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "574:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "573:19:7"}, "src": "548:45:7"}, {"canonicalName": "CardGame.GAME_STATE", "id": 21, "members": [{"id": 18, "name": "OPEN", "nameLocation": "625:4:7", "nodeType": "EnumValue", "src": "625:4:7"}, {"id": 19, "name": "CLOSED", "nameLocation": "639:6:7", "nodeType": "EnumValue", "src": "639:6:7"}, {"id": 20, "name": "CALCULATING_WINNER", "nameLocation": "655:18:7", "nodeType": "EnumValue", "src": "655:18:7"}], "name": "GAME_STATE", "nameLocation": "604:10:7", "nodeType": "EnumDefinition", "src": "599:80:7"}, {"constant": false, "functionSelector": "8ae43b54", "id": 24, "mutability": "mutable", "name": "game_state", "nameLocation": "702:10:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "684:28:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "typeName": {"id": 23, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 22, "name": "GAME_STATE", "nodeType": "IdentifierPath", "referencedDeclaration": 21, "src": "684:10:7"}, "referencedDeclaration": 21, "src": "684:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "visibility": "public"}, {"constant": false, "functionSelector": "87cd6ad2", "id": 26, "mutability": "mutable", "name": "mscTokenAddress", "nameLocation": "733:15:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "718:30:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 25, "name": "address", "nodeType": "ElementaryTypeName", "src": "718:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "fe05cc9c", "id": 29, "mutability": "mutable", "name": "mscToken", "nameLocation": "768:8:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "754:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}, "typeName": {"id": 28, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 27, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1288, "src": "754:6:7"}, "referencedDeclaration": 1288, "src": "754:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "visibility": "public"}, {"body": {"id": 69, "nodeType": "Block", "src": "986:184:7", "statements": [{"expression": {"id": 48, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 46, "name": "keyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "996:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 47, "name": "_keyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1006:8:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "996:18:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 49, "nodeType": "ExpressionStatement", "src": "996:18:7"}, {"expression": {"id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 50, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "1024:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 51, "name": "_fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1030:4:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1024:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "1024:10:7"}, {"expression": {"id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 54, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1044:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 55, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "1057:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "1057:17:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "1044:30:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "id": 58, "nodeType": "ExpressionStatement", "src": "1044:30:7"}, {"expression": {"id": 61, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 59, "name": "mscTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "1084:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 60, "name": "_mscTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "1102:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1084:34:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 62, "nodeType": "ExpressionStatement", "src": "1084:34:7"}, {"expression": {"id": 67, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 63, "name": "mscToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "1128:8:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 65, "name": "_mscTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "1146:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 64, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "1139:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$", "typeString": "type(contract IERC20)"}}, "id": 66, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1139:24:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "src": "1128:35:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 68, "nodeType": "ExpressionStatement", "src": "1128:35:7"}]}, "id": 70, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 42, "name": "_vrfCoordinator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "962:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 43, "name": "_link", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "979:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 44, "kind": "baseConstructorSpecifier", "modifierName": {"id": 41, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1409, "src": "946:15:7"}, "nodeType": "ModifierInvocation", "src": "946:39:7"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 40, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 31, "mutability": "mutable", "name": "_vrfCoordinator", "nameLocation": "812:15:7", "nodeType": "VariableDeclaration", "scope": 70, "src": "804:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 30, "name": "address", "nodeType": "ElementaryTypeName", "src": "804:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 33, "mutability": "mutable", "name": "_link", "nameLocation": "845:5:7", "nodeType": "VariableDeclaration", "scope": 70, "src": "837:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 32, "name": "address", "nodeType": "ElementaryTypeName", "src": "837:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 35, "mutability": "mutable", "name": "_fee", "nameLocation": "868:4:7", "nodeType": "VariableDeclaration", "scope": 70, "src": "860:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 34, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "860:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 37, "mutability": "mutable", "name": "_keyHash", "nameLocation": "890:8:7", "nodeType": "VariableDeclaration", "scope": 70, "src": "882:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 36, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "882:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 39, "mutability": "mutable", "name": "_mscTokenAddress", "nameLocation": "916:16:7", "nodeType": "VariableDeclaration", "scope": 70, "src": "908:24:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 38, "name": "address", "nodeType": "ElementaryTypeName", "src": "908:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "794:144:7"}, "returnParameters": {"id": 45, "nodeType": "ParameterList", "parameters": [], "src": "986:0:7"}, "scope": 1106, "src": "783:387:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"constant": false, "functionSelector": "66ce6dab", "id": 76, "mutability": "mutable", "name": "wagerOfPlayer", "nameLocation": "1278:13:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1223:68:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 75, "keyType": {"id": 71, "name": "address", "nodeType": "ElementaryTypeName", "src": "1231:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1223:47:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 74, "keyType": {"id": 72, "name": "address", "nodeType": "ElementaryTypeName", "src": "1250:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1242:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 73, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1261:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "public"}, {"constant": false, "functionSelector": "bd9c47e3", "id": 80, "mutability": "mutable", "name": "tokenPriceFeeds", "nameLocation": "1374:15:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1339:50:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "typeName": {"id": 79, "keyType": {"id": 77, "name": "address", "nodeType": "ElementaryTypeName", "src": "1347:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1339:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "valueType": {"id": 78, "name": "address", "nodeType": "ElementaryTypeName", "src": "1358:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "9c753122", "id": 85, "mutability": "mutable", "name": "players", "nameLocation": "1507:7:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1470:44:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[])"}, "typeName": {"id": 84, "keyType": {"id": 81, "name": "address", "nodeType": "ElementaryTypeName", "src": "1478:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1470:29:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[])"}, "valueType": {"baseType": {"id": 82, "name": "address", "nodeType": "ElementaryTypeName", "src": "1489:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 83, "nodeType": "ArrayTypeName", "src": "1489:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5e5f2e26", "id": 88, "mutability": "mutable", "name": "allowedTokens", "nameLocation": "1537:13:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1520:30:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[]"}, "typeName": {"baseType": {"id": 86, "name": "address", "nodeType": "ElementaryTypeName", "src": "1520:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 87, "nodeType": "ArrayTypeName", "src": "1520:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "public"}, {"constant": false, "functionSelector": "66a1df65", "id": 92, "mutability": "mutable", "name": "totalPot", "nameLocation": "1663:8:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1628:43:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 91, "keyType": {"id": 89, "name": "address", "nodeType": "ElementaryTypeName", "src": "1636:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1628:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 90, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1647:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "3fdb144b", "id": 98, "mutability": "mutable", "name": "playersCardNumber", "nameLocation": "1784:17:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1729:72:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 97, "keyType": {"id": 93, "name": "address", "nodeType": "ElementaryTypeName", "src": "1737:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1729:47:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 96, "keyType": {"id": 94, "name": "address", "nodeType": "ElementaryTypeName", "src": "1756:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1748:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 95, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1767:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "public"}, {"constant": false, "functionSelector": "cd5ea4f8", "id": 102, "mutability": "mutable", "name": "playerCounter", "nameLocation": "1875:13:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1840:48:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 101, "keyType": {"id": 99, "name": "address", "nodeType": "ElementaryTypeName", "src": "1848:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1840:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 100, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1859:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "05f3bbd9", "id": 107, "mutability": "mutable", "name": "cardNumbers", "nameLocation": "1967:11:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "1930:48:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[])"}, "typeName": {"id": 106, "keyType": {"id": 103, "name": "address", "nodeType": "ElementaryTypeName", "src": "1938:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1930:29:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[])"}, "valueType": {"baseType": {"id": 104, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1949:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 105, "nodeType": "ArrayTypeName", "src": "1949:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "2ad95786", "id": 111, "mutability": "mutable", "name": "winner", "nameLocation": "2119:6:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "2084:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "typeName": {"id": 110, "keyType": {"id": 108, "name": "address", "nodeType": "ElementaryTypeName", "src": "2092:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2084:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "valueType": {"id": 109, "name": "address", "nodeType": "ElementaryTypeName", "src": "2103:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "45d7c3b9", "id": 117, "mutability": "mutable", "name": "tokenToRandomness", "nameLocation": "2303:17:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "2288:45:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 112, "name": "address", "nodeType": "ElementaryTypeName", "src": "2288:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"arguments": [{"hexValue": "30", "id": 115, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2331:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 114, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2323:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 113, "name": "address", "nodeType": "ElementaryTypeName", "src": "2323:7:7", "typeDescriptions": {}}}, "id": 116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2323:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "2521cc46", "id": 123, "mutability": "mutable", "name": "competedToken", "nameLocation": "2354:13:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "2339:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 118, "name": "address", "nodeType": "ElementaryTypeName", "src": "2339:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"arguments": [{"hexValue": "30", "id": 121, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2378:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 120, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2370:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 119, "name": "address", "nodeType": "ElementaryTypeName", "src": "2370:7:7", "typeDescriptions": {}}}, "id": 122, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2370:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "36013189", "id": 125, "mutability": "mutable", "name": "randomness", "nameLocation": "2401:10:7", "nodeType": "VariableDeclaration", "scope": 1106, "src": "2386:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 124, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2386:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"body": {"id": 140, "nodeType": "Block", "src": "2676:97:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 135, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2704:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2704:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 137, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 127, "src": "2716:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 132, "name": "mscToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "2686:8:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1237, "src": "2686:17:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 138, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2686:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 139, "nodeType": "ExpressionStatement", "src": "2686:38:7"}]}, "functionSelector": "0b26083c", "id": 141, "implemented": true, "kind": "function", "modifiers": [{"id": 130, "kind": "modifierInvocation", "modifierName": {"id": 129, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "2666:9:7"}, "nodeType": "ModifierInvocation", "src": "2666:9:7"}], "name": "sendMSCToken", "nameLocation": "2629:12:7", "nodeType": "FunctionDefinition", "parameters": {"id": 128, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 127, "mutability": "mutable", "name": "_amount", "nameLocation": "2650:7:7", "nodeType": "VariableDeclaration", "scope": 141, "src": "2642:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 126, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2642:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2641:17:7"}, "returnParameters": {"id": 131, "nodeType": "ParameterList", "parameters": [], "src": "2676:0:7"}, "scope": 1106, "src": "2620:153:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 185, "nodeType": "Block", "src": "2833:324:7", "statements": [{"body": {"id": 183, "nodeType": "Block", "src": "2908:243:7", "statements": [{"assignments": [162], "declarations": [{"constant": false, "id": 162, "mutability": "mutable", "name": "recipient", "nameLocation": "2930:9:7", "nodeType": "VariableDeclaration", "scope": 183, "src": "2922:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 161, "name": "address", "nodeType": "ElementaryTypeName", "src": "2922:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 168, "initialValue": {"baseExpression": {"baseExpression": {"id": 163, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "2942:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 165, "indexExpression": {"id": 164, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 143, "src": "2950:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2942:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 167, "indexExpression": {"id": 166, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 149, "src": "2958:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2942:22:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2922:42:7"}, {"assignments": [170], "declarations": [{"constant": false, "id": 170, "mutability": "mutable", "name": "userTotalValue", "nameLocation": "2986:14:7", "nodeType": "VariableDeclaration", "scope": 183, "src": "2978:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2978:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 175, "initialValue": {"arguments": [{"id": 172, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "3027:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 173, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 143, "src": "3038:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 171, "name": "getUserSingleTokenValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 383, "src": "3003:23:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) returns (uint256)"}}, "id": 174, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3003:42:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2978:67:7"}, {"expression": {"arguments": [{"id": 179, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "3077:9:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 180, "name": "userTotalValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 170, "src": "3088:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 176, "name": "mscToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "3059:8:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1237, "src": "3059:17:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3059:44:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 182, "nodeType": "ExpressionStatement", "src": "3059:44:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 152, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 149, "src": "2867:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 153, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "2875:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 155, "indexExpression": {"id": 154, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 143, "src": "2883:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2875:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2875:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2867:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 184, "initializationExpression": {"assignments": [149], "declarations": [{"constant": false, "id": 149, "mutability": "mutable", "name": "index", "nameLocation": "2856:5:7", "nodeType": "VariableDeclaration", "scope": 184, "src": "2848:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 148, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2848:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 151, "initialValue": {"hexValue": "30", "id": 150, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2864:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2848:17:7"}, "loopExpression": {"expression": {"id": 159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2899:7:7", "subExpression": {"id": 158, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 149, "src": "2899:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 160, "nodeType": "ExpressionStatement", "src": "2899:7:7"}, "nodeType": "ForStatement", "src": "2843:308:7"}]}, "functionSelector": "3ff54c71", "id": 186, "implemented": true, "kind": "function", "modifiers": [{"id": 146, "kind": "modifierInvocation", "modifierName": {"id": 145, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "2823:9:7"}, "nodeType": "ModifierInvocation", "src": "2823:9:7"}], "name": "issueTokens", "nameLocation": "2788:11:7", "nodeType": "FunctionDefinition", "parameters": {"id": 144, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 143, "mutability": "mutable", "name": "_token", "nameLocation": "2808:6:7", "nodeType": "VariableDeclaration", "scope": 186, "src": "2800:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 142, "name": "address", "nodeType": "ElementaryTypeName", "src": "2800:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2799:16:7"}, "returnParameters": {"id": 147, "nodeType": "ParameterList", "parameters": [], "src": "2833:0:7"}, "scope": 1106, "src": "2779:378:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 199, "nodeType": "Block", "src": "3216:43:7", "statements": [{"expression": {"arguments": [{"id": 196, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "3245:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 193, "name": "allowedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 88, "src": "3226:13:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "3226:18:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3226:26:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "3226:26:7"}]}, "functionSelector": "b53472ef", "id": 200, "implemented": true, "kind": "function", "modifiers": [{"id": 191, "kind": "modifierInvocation", "modifierName": {"id": 190, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "3206:9:7"}, "nodeType": "ModifierInvocation", "src": "3206:9:7"}], "name": "allowToken", "nameLocation": "3172:10:7", "nodeType": "FunctionDefinition", "parameters": {"id": 189, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 188, "mutability": "mutable", "name": "_token", "nameLocation": "3191:6:7", "nodeType": "VariableDeclaration", "scope": 200, "src": "3183:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 187, "name": "address", "nodeType": "ElementaryTypeName", "src": "3183:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3182:16:7"}, "returnParameters": {"id": 192, "nodeType": "ParameterList", "parameters": [], "src": "3216:0:7"}, "scope": 1106, "src": "3163:96:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 232, "nodeType": "Block", "src": "3327:212:7", "statements": [{"body": {"id": 230, "nodeType": "Block", "src": "3403:130:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 219, "name": "allowedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 88, "src": "3421:13:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 221, "indexExpression": {"id": 220, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 208, "src": "3435:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3421:20:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 222, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 202, "src": "3445:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3421:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 227, "nodeType": "IfStatement", "src": "3417:80:7", "trueBody": {"id": 226, "nodeType": "Block", "src": "3453:44:7", "statements": [{"expression": {"hexValue": "74727565", "id": 224, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3478:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 206, "id": 225, "nodeType": "Return", "src": "3471:11:7"}]}}, {"expression": {"hexValue": "66616c7365", "id": 228, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3517:5:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 206, "id": 229, "nodeType": "Return", "src": "3510:12:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 214, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 211, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 208, "src": "3361:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 212, "name": "allowedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 88, "src": "3369:13:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 213, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3369:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3361:28:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 231, "initializationExpression": {"assignments": [208], "declarations": [{"constant": false, "id": 208, "mutability": "mutable", "name": "index", "nameLocation": "3350:5:7", "nodeType": "VariableDeclaration", "scope": 231, "src": "3342:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3342:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 210, "initialValue": {"hexValue": "30", "id": 209, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3358:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3342:17:7"}, "loopExpression": {"expression": {"id": 217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 215, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 208, "src": "3391:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 216, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3400:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "3391:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 218, "nodeType": "ExpressionStatement", "src": "3391:10:7"}, "nodeType": "ForStatement", "src": "3337:196:7"}]}, "functionSelector": "dd5b8467", "id": 233, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenIsAllowed", "nameLocation": "3274:14:7", "nodeType": "FunctionDefinition", "parameters": {"id": 203, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 202, "mutability": "mutable", "name": "_token", "nameLocation": "3297:6:7", "nodeType": "VariableDeclaration", "scope": 233, "src": "3289:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 201, "name": "address", "nodeType": "ElementaryTypeName", "src": "3289:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3288:16:7"}, "returnParameters": {"id": 206, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 205, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 233, "src": "3321:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 204, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3321:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3320:6:7"}, "scope": 1106, "src": "3265:274:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 277, "nodeType": "Block", "src": "3610:297:7", "statements": [{"body": {"id": 275, "nodeType": "Block", "src": "3685:216:7", "statements": [{"assignments": [254], "declarations": [{"constant": false, "id": 254, "mutability": "mutable", "name": "player", "nameLocation": "3707:6:7", "nodeType": "VariableDeclaration", "scope": 275, "src": "3699:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 253, "name": "address", "nodeType": "ElementaryTypeName", "src": "3699:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 260, "initialValue": {"baseExpression": {"baseExpression": {"id": 255, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "3716:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 257, "indexExpression": {"id": 256, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "3724:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3716:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 259, "indexExpression": {"id": 258, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "3732:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3716:22:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3699:39:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 261, "name": "playersCardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "3756:17:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 263, "indexExpression": {"id": 262, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "3774:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3756:25:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 265, "indexExpression": {"id": 264, "name": "player", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "3782:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3756:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 266, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3793:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3756:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 273, "nodeType": "Block", "src": "3846:45:7", "statements": [{"expression": {"hexValue": "66616c7365", "id": 271, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3871:5:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 239, "id": 272, "nodeType": "Return", "src": "3864:12:7"}]}, "id": 274, "nodeType": "IfStatement", "src": "3752:139:7", "trueBody": {"id": 270, "nodeType": "Block", "src": "3796:44:7", "statements": [{"expression": {"hexValue": "74727565", "id": 268, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3821:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 239, "id": 269, "nodeType": "Return", "src": "3814:11:7"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 244, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "3644:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 245, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "3652:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 247, "indexExpression": {"id": 246, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "3660:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3652:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3652:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3644:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 276, "initializationExpression": {"assignments": [241], "declarations": [{"constant": false, "id": 241, "mutability": "mutable", "name": "index", "nameLocation": "3633:5:7", "nodeType": "VariableDeclaration", "scope": 276, "src": "3625:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 240, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3625:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 243, "initialValue": {"hexValue": "30", "id": 242, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3641:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3625:17:7"}, "loopExpression": {"expression": {"id": 251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3676:7:7", "subExpression": {"id": 250, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "3676:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 252, "nodeType": "ExpressionStatement", "src": "3676:7:7"}, "nodeType": "ForStatement", "src": "3620:281:7"}]}, "id": 278, "implemented": true, "kind": "function", "modifiers": [], "name": "playerIsAllowed", "nameLocation": "3554:15:7", "nodeType": "FunctionDefinition", "parameters": {"id": 236, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 235, "mutability": "mutable", "name": "_token", "nameLocation": "3578:6:7", "nodeType": "VariableDeclaration", "scope": 278, "src": "3570:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 234, "name": "address", "nodeType": "ElementaryTypeName", "src": "3570:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3569:16:7"}, "returnParameters": {"id": 239, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 238, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 278, "src": "3604:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 237, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3604:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3603:6:7"}, "scope": 1106, "src": "3545:362:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 293, "nodeType": "Block", "src": "4016:53:7", "statements": [{"expression": {"id": 291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 287, "name": "tokenPriceFeeds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 80, "src": "4026:15:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 289, "indexExpression": {"id": 288, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 280, "src": "4042:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4026:23:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 290, "name": "_priceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "4052:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4026:36:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 292, "nodeType": "ExpressionStatement", "src": "4026:36:7"}]}, "functionSelector": "877dd39d", "id": 294, "implemented": true, "kind": "function", "modifiers": [{"id": 285, "kind": "modifierInvocation", "modifierName": {"id": 284, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "4002:9:7"}, "nodeType": "ModifierInvocation", "src": "4002:9:7"}], "name": "setPriceFeedContract", "nameLocation": "3922:20:7", "nodeType": "FunctionDefinition", "parameters": {"id": 283, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 280, "mutability": "mutable", "name": "_token", "nameLocation": "3951:6:7", "nodeType": "VariableDeclaration", "scope": 294, "src": "3943:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 279, "name": "address", "nodeType": "ElementaryTypeName", "src": "3943:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 282, "mutability": "mutable", "name": "_priceFeed", "nameLocation": "3967:10:7", "nodeType": "VariableDeclaration", "scope": 294, "src": "3959:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 281, "name": "address", "nodeType": "ElementaryTypeName", "src": "3959:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3942:36:7"}, "returnParameters": {"id": 286, "nodeType": "ParameterList", "parameters": [], "src": "4016:0:7"}, "scope": 1106, "src": "3913:156:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 338, "nodeType": "Block", "src": "4181:410:7", "statements": [{"assignments": [304], "declarations": [{"constant": false, "id": 304, "mutability": "mutable", "name": "priceFeedAddress", "nameLocation": "4199:16:7", "nodeType": "VariableDeclaration", "scope": 338, "src": "4191:24:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 303, "name": "address", "nodeType": "ElementaryTypeName", "src": "4191:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 308, "initialValue": {"baseExpression": {"id": 305, "name": "tokenPriceFeeds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 80, "src": "4218:15:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 307, "indexExpression": {"id": 306, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "4234:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4218:23:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "4191:50:7"}, {"assignments": [311], "declarations": [{"constant": false, "id": 311, "mutability": "mutable", "name": "priceFeed", "nameLocation": "4348:9:7", "nodeType": "VariableDeclaration", "scope": 338, "src": "4326:31:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1455", "typeString": "contract AggregatorV3Interface"}, "typeName": {"id": 310, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 309, "name": "AggregatorV3Interface", "nodeType": "IdentifierPath", "referencedDeclaration": 1455, "src": "4326:21:7"}, "referencedDeclaration": 1455, "src": "4326:21:7", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1455", "typeString": "contract AggregatorV3Interface"}}, "visibility": "internal"}], "id": 315, "initialValue": {"arguments": [{"id": 313, "name": "priceFeedAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "4395:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 312, "name": "AggregatorV3Interface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1455, "src": "4360:21:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1455_$", "typeString": "type(contract AggregatorV3Interface)"}}, "id": 314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4360:61:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1455", "typeString": "contract AggregatorV3Interface"}}, "nodeType": "VariableDeclarationStatement", "src": "4326:95:7"}, {"assignments": [null, 317, null, null, null], "declarations": [null, {"constant": false, "id": 317, "mutability": "mutable", "name": "price", "nameLocation": "4441:5:7", "nodeType": "VariableDeclaration", "scope": 338, "src": "4434:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 316, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4434:6:7", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null, null, null], "id": 321, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 318, "name": "priceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4456:9:7", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1455", "typeString": "contract AggregatorV3Interface"}}, "id": 319, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "latestRoundData", "nodeType": "MemberAccess", "referencedDeclaration": 1454, "src": "4456:25:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4456:27:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"}}, "nodeType": "VariableDeclarationStatement", "src": "4431:52:7"}, {"assignments": [323], "declarations": [{"constant": false, "id": 323, "mutability": "mutable", "name": "decimals", "nameLocation": "4501:8:7", "nodeType": "VariableDeclaration", "scope": 338, "src": "4493:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 322, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4493:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 330, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 326, "name": "priceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4520:9:7", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$1455", "typeString": "contract AggregatorV3Interface"}}, "id": 327, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 1416, "src": "4520:18:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)"}}, "id": 328, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4520:20:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 325, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4512:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 324, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4512:7:7", "typeDescriptions": {}}}, "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4512:29:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4493:48:7"}, {"expression": {"components": [{"arguments": [{"id": 333, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 317, "src": "4567:5:7", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 332, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4559:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 331, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4559:7:7", "typeDescriptions": {}}}, "id": 334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4559:14:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 335, "name": "decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 323, "src": "4575:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 336, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4558:26:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "functionReturnParameters": 302, "id": 337, "nodeType": "Return", "src": "4551:33:7"}]}, "functionSelector": "f1c5d6c2", "id": 339, "implemented": true, "kind": "function", "modifiers": [], "name": "getTokenValue", "nameLocation": "4084:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 297, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 296, "mutability": "mutable", "name": "_token", "nameLocation": "4106:6:7", "nodeType": "VariableDeclaration", "scope": 339, "src": "4098:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 295, "name": "address", "nodeType": "ElementaryTypeName", "src": "4098:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4097:16:7"}, "returnParameters": {"id": 302, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 299, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 339, "src": "4159:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 298, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4159:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 301, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 339, "src": "4168:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4168:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4158:18:7"}, "scope": 1106, "src": "4075:516:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 382, "nodeType": "Block", "src": "4797:229:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 348, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "4811:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 350, "indexExpression": {"id": 349, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 343, "src": "4825:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4811:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 352, "indexExpression": {"id": 351, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 341, "src": "4833:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4811:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 353, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4842:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4811:32:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 358, "nodeType": "IfStatement", "src": "4807:71:7", "trueBody": {"id": 357, "nodeType": "Block", "src": "4845:33:7", "statements": [{"expression": {"hexValue": "30", "id": 355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4866:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 347, "id": 356, "nodeType": "Return", "src": "4859:8:7"}]}}, {"assignments": [360, 362], "declarations": [{"constant": false, "id": 360, "mutability": "mutable", "name": "price", "nameLocation": "4897:5:7", "nodeType": "VariableDeclaration", "scope": 382, "src": "4889:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 359, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4889:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 362, "mutability": "mutable", "name": "decimals", "nameLocation": "4912:8:7", "nodeType": "VariableDeclaration", "scope": 382, "src": "4904:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4904:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 366, "initialValue": {"arguments": [{"id": 364, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 343, "src": "4938:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 363, "name": "getTokenValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 339, "src": "4924:13:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (address) view returns (uint256,uint256)"}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4924:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4888:57:7"}, {"expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 373, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 367, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "4964:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 369, "indexExpression": {"id": 368, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 343, "src": "4978:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4964:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 371, "indexExpression": {"id": 370, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 341, "src": "4986:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4964:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 372, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 360, "src": "4995:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4964:36:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 374, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4963:38:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 377, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5005:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"id": 376, "name": "decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 362, "src": "5009:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5005:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 378, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5004:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4963:55:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 380, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4962:57:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 347, "id": 381, "nodeType": "Return", "src": "4955:64:7"}]}, "id": 383, "implemented": true, "kind": "function", "modifiers": [], "name": "getUserSingleTokenValue", "nameLocation": "4695:23:7", "nodeType": "FunctionDefinition", "parameters": {"id": 344, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 341, "mutability": "mutable", "name": "_user", "nameLocation": "4727:5:7", "nodeType": "VariableDeclaration", "scope": 383, "src": "4719:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 340, "name": "address", "nodeType": "ElementaryTypeName", "src": "4719:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 343, "mutability": "mutable", "name": "_token", "nameLocation": "4742:6:7", "nodeType": "VariableDeclaration", "scope": 383, "src": "4734:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 342, "name": "address", "nodeType": "ElementaryTypeName", "src": "4734:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4718:31:7"}, "returnParameters": {"id": 347, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 346, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 383, "src": "4784:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 345, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4784:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4783:9:7"}, "scope": 1106, "src": "4686:340:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 426, "nodeType": "Block", "src": "5188:349:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 390, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "5202:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 392, "indexExpression": {"id": 391, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5216:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5202:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 395, "indexExpression": {"expression": {"id": 393, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5224:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5224:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5202:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 396, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5238:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5202:37:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 401, "nodeType": "IfStatement", "src": "5198:76:7", "trueBody": {"id": 400, "nodeType": "Block", "src": "5241:33:7", "statements": [{"expression": {"hexValue": "30", "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5262:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 389, "id": 399, "nodeType": "Return", "src": "5255:8:7"}]}}, {"assignments": [403, 405], "declarations": [{"constant": false, "id": 403, "mutability": "mutable", "name": "price", "nameLocation": "5293:5:7", "nodeType": "VariableDeclaration", "scope": 426, "src": "5285:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 402, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5285:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 405, "mutability": "mutable", "name": "decimals", "nameLocation": "5308:8:7", "nodeType": "VariableDeclaration", "scope": 426, "src": "5300:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5300:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 409, "initialValue": {"arguments": [{"id": 407, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5334:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 406, "name": "getTokenValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 339, "src": "5320:13:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (address) view returns (uint256,uint256)"}}, "id": 408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5320:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5284:57:7"}, {"expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 410, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "5470:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 412, "indexExpression": {"id": 411, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5484:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5470:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 415, "indexExpression": {"expression": {"id": 413, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5492:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5492:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5470:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 416, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 403, "src": "5506:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5470:41:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 418, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5469:43:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 419, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5516:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"id": 420, "name": "decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "5520:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5516:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 422, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5515:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5469:60:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 424, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5468:62:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 389, "id": 425, "nodeType": "Return", "src": "5461:69:7"}]}, "functionSelector": "24398a85", "id": 427, "implemented": true, "kind": "function", "modifiers": [], "name": "getPlayerSingleTokenValue", "nameLocation": "5088:25:7", "nodeType": "FunctionDefinition", "parameters": {"id": 386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 385, "mutability": "mutable", "name": "_token", "nameLocation": "5122:6:7", "nodeType": "VariableDeclaration", "scope": 427, "src": "5114:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 384, "name": "address", "nodeType": "ElementaryTypeName", "src": "5114:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5113:16:7"}, "returnParameters": {"id": 389, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 388, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 427, "src": "5175:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 387, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5175:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5174:9:7"}, "scope": 1106, "src": "5079:458:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 497, "nodeType": "Block", "src": "5716:382:7", "statements": [{"assignments": [435], "declarations": [{"constant": false, "id": 435, "mutability": "mutable", "name": "index", "nameLocation": "5734:5:7", "nodeType": "VariableDeclaration", "scope": 497, "src": "5726:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5726:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 436, "nodeType": "VariableDeclarationStatement", "src": "5726:13:7"}, {"body": {"id": 464, "nodeType": "Block", "src": "5802:122:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 450, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "5820:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 452, "indexExpression": {"id": 451, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "5828:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5820:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 454, "indexExpression": {"id": 453, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "5836:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5820:18:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 455, "name": "_user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "5842:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5820:27:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 463, "nodeType": "IfStatement", "src": "5816:98:7", "trueBody": {"id": 462, "nodeType": "Block", "src": "5849:65:7", "statements": [{"expression": {"id": 459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 457, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 435, "src": "5867:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 458, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "5875:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5867:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 460, "nodeType": "ExpressionStatement", "src": "5867:9:7"}, {"id": 461, "nodeType": "Break", "src": "5894:5:7"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 441, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "5769:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 442, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "5773:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 444, "indexExpression": {"id": 443, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "5781:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5773:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 445, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5773:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5769:26:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 465, "initializationExpression": {"assignments": [438], "declarations": [{"constant": false, "id": 438, "mutability": "mutable", "name": "i", "nameLocation": "5762:1:7", "nodeType": "VariableDeclaration", "scope": 465, "src": "5754:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 437, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5754:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 440, "initialValue": {"hexValue": "30", "id": 439, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5766:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5754:13:7"}, "loopExpression": {"expression": {"id": 448, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5797:3:7", "subExpression": {"id": 447, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "5797:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 449, "nodeType": "ExpressionStatement", "src": "5797:3:7"}, "nodeType": "ForStatement", "src": "5749:175:7"}, {"body": {"id": 495, "nodeType": "Block", "src": "5994:68:7", "statements": [{"expression": {"id": 493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 481, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "6008:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 484, "indexExpression": {"id": 482, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "6016:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6008:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 485, "indexExpression": {"id": 483, "name": "e", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "6024:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6008:18:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"baseExpression": {"id": 486, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "6029:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 488, "indexExpression": {"id": 487, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "6037:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6029:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 492, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 489, "name": "e", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "6045:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 490, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6049:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "6045:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6029:22:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6008:43:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 494, "nodeType": "ExpressionStatement", "src": "6008:43:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 477, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 470, "name": "e", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "5957:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 471, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "5961:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 473, "indexExpression": {"id": 472, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "5969:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5961:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5961:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 475, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5986:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "5961:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5957:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 496, "initializationExpression": {"assignments": [467], "declarations": [{"constant": false, "id": 467, "mutability": "mutable", "name": "e", "nameLocation": "5946:1:7", "nodeType": "VariableDeclaration", "scope": 496, "src": "5938:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5938:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 469, "initialValue": {"id": 468, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 435, "src": "5950:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5938:17:7"}, "loopExpression": {"expression": {"id": 479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5989:3:7", "subExpression": {"id": 478, "name": "e", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "5989:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 480, "nodeType": "ExpressionStatement", "src": "5989:3:7"}, "nodeType": "ForStatement", "src": "5933:129:7"}]}, "id": 498, "implemented": true, "kind": "function", "modifiers": [], "name": "removeFromPlayers", "nameLocation": "5658:17:7", "nodeType": "FunctionDefinition", "parameters": {"id": 432, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 429, "mutability": "mutable", "name": "_token", "nameLocation": "5684:6:7", "nodeType": "VariableDeclaration", "scope": 498, "src": "5676:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 428, "name": "address", "nodeType": "ElementaryTypeName", "src": "5676:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 431, "mutability": "mutable", "name": "_user", "nameLocation": "5700:5:7", "nodeType": "VariableDeclaration", "scope": 498, "src": "5692:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 430, "name": "address", "nodeType": "ElementaryTypeName", "src": "5692:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5675:31:7"}, "returnParameters": {"id": 433, "nodeType": "ParameterList", "parameters": [], "src": "5716:0:7"}, "scope": 1106, "src": "5649:449:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 593, "nodeType": "Block", "src": "6167:781:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 514, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 506, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "6198:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 507, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "6212:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "6212:15:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "6198:29:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 513, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 510, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "6231:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 511, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "6245:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 512, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "6245:17:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "6231:31:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6198:64:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e2774206765742074686520726566756e642061667465722067616d65207374617274656421", "id": 515, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6276:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7", "typeString": "literal_string \"You can't get the refund after game started!\""}, "value": "You can't get the refund after game started!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7839fdb2a7742329168c0ff21aabd5302c926a533002258c943fc249701adbd7", "typeString": "literal_string \"You can't get the refund after game started!\""}], "id": 505, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6177:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 516, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6177:155:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 517, "nodeType": "ExpressionStatement", "src": "6177:155:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 519, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "6363:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 521, "indexExpression": {"id": 520, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6377:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6363:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 524, "indexExpression": {"expression": {"id": 522, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6385:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6385:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6363:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 525, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "6400:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6363:44:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f75206469646e27742062657420746f6b656e206f662074686520616d6f756e7421", "id": 527, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6421:37:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d", "typeString": "literal_string \"You didn't bet token of the amount!\""}, "value": "You didn't bet token of the amount!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f25e371f29d591cf6402c2f8a7daccf6c0bc426912e7e23a671bda4f8349de5d", "typeString": "literal_string \"You didn't bet token of the amount!\""}], "id": 518, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6342:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 528, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6342:126:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 529, "nodeType": "ExpressionStatement", "src": "6342:126:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 531, "name": "playersCardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "6499:17:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 533, "indexExpression": {"id": 532, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6517:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6499:25:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 536, "indexExpression": {"expression": {"id": 534, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6525:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6525:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6499:37:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 537, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6540:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6499:42:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f75206472657720796f757220636172642c20796f752063616e277420726566756e6421", "id": 539, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6555:39:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6c8ee954c52d2df4198e8d40c4228e1d6b2c26095806fd580c73121ce3dc5a05", "typeString": "literal_string \"You drew your card, you can't refund!\""}, "value": "You drew your card, you can't refund!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6c8ee954c52d2df4198e8d40c4228e1d6b2c26095806fd580c73121ce3dc5a05", "typeString": "literal_string \"You drew your card, you can't refund!\""}], "id": 530, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6478:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6478:126:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 541, "nodeType": "ExpressionStatement", "src": "6478:126:7"}, {"expression": {"arguments": [{"expression": {"id": 546, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6638:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6638:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 548, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "6650:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 543, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6621:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 542, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "6614:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$", "typeString": "type(contract IERC20)"}}, "id": 544, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6614:14:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1237, "src": "6614:23:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6614:44:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 550, "nodeType": "ExpressionStatement", "src": "6614:44:7"}, {"expression": {"id": 565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 551, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "6668:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 555, "indexExpression": {"id": 552, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6682:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6668:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 556, "indexExpression": {"expression": {"id": 553, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6690:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6690:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6668:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 557, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "6716:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 559, "indexExpression": {"id": 558, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6730:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6716:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 562, "indexExpression": {"expression": {"id": 560, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6738:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6738:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6716:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 563, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "6764:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6716:55:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6668:103:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 566, "nodeType": "ExpressionStatement", "src": "6668:103:7"}, {"expression": {"id": 575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 567, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "6781:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 569, "indexExpression": {"id": 568, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6790:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6781:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 570, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "6800:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 572, "indexExpression": {"id": 571, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6809:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6800:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 573, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "6819:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6800:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6781:45:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 576, "nodeType": "ExpressionStatement", "src": "6781:45:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 577, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "6840:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 579, "indexExpression": {"id": 578, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6854:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6840:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 582, "indexExpression": {"expression": {"id": 580, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6862:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6862:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6840:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "30", "id": 583, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6877:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6840:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 592, "nodeType": "IfStatement", "src": "6836:106:7", "trueBody": {"id": 591, "nodeType": "Block", "src": "6880:62:7", "statements": [{"expression": {"arguments": [{"id": 586, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "6912:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 587, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6920:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6920:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 585, "name": "removeFromPlayers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 498, "src": "6894:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6894:37:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 590, "nodeType": "ExpressionStatement", "src": "6894:37:7"}]}}]}, "functionSelector": "b81baa59", "id": 594, "implemented": true, "kind": "function", "modifiers": [], "name": "repayBetToken", "nameLocation": "6113:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 503, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 500, "mutability": "mutable", "name": "_amount", "nameLocation": "6135:7:7", "nodeType": "VariableDeclaration", "scope": 594, "src": "6127:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 499, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6127:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 502, "mutability": "mutable", "name": "_token", "nameLocation": "6152:6:7", "nodeType": "VariableDeclaration", "scope": 594, "src": "6144:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 501, "name": "address", "nodeType": "ElementaryTypeName", "src": "6144:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6126:33:7"}, "returnParameters": {"id": 504, "nodeType": "ParameterList", "parameters": [], "src": "6167:0:7"}, "scope": 1106, "src": "6104:844:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 612, "nodeType": "Block", "src": "6992:165:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 600, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7023:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 601, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "7037:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "7037:17:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "7023:31:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e2774207374617274206e65772067616d652073746174652079657421", "id": 604, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7068:33:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d", "typeString": "literal_string \"Can't start new game state yet!\""}, "value": "Can't start new game state yet!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5012489ed92750924d4746766e1d8d6dc158744e1e6fe99fc81232fa0927d30d", "typeString": "literal_string \"Can't start new game state yet!\""}], "id": 599, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7002:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 605, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7002:109:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 606, "nodeType": "ExpressionStatement", "src": "7002:109:7"}, {"expression": {"id": 610, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 607, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7122:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 608, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "7135:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 609, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "7135:15:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "7122:28:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "id": 611, "nodeType": "ExpressionStatement", "src": "7122:28:7"}]}, "functionSelector": "d65ab5f2", "id": 613, "implemented": true, "kind": "function", "modifiers": [{"id": 597, "kind": "modifierInvocation", "modifierName": {"id": 596, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "6982:9:7"}, "nodeType": "ModifierInvocation", "src": "6982:9:7"}], "name": "startGame", "nameLocation": "6963:9:7", "nodeType": "FunctionDefinition", "parameters": {"id": 595, "nodeType": "ParameterList", "parameters": [], "src": "6972:2:7"}, "returnParameters": {"id": 598, "nodeType": "ParameterList", "parameters": [], "src": "6992:0:7"}, "scope": 1106, "src": "6954:203:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 741, "nodeType": "Block", "src": "7221:1738:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 621, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "7239:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 622, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7249:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7239:11:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4120626574206d757374206265206d6f7265207468616e2030", "id": 624, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7252:27:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf", "typeString": "literal_string \"A bet must be more than 0\""}, "value": "A bet must be more than 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b6a4e290aebc27ff522351331ee72221f4e270128dfe9298acde3f18e0ff9cdf", "typeString": "literal_string \"A bet must be more than 0\""}], "id": 620, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7231:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7231:49:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 626, "nodeType": "ExpressionStatement", "src": "7231:49:7"}, {"expression": {"arguments": [{"arguments": [{"id": 629, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "7313:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 628, "name": "tokenIsAllowed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "7298:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) returns (bool)"}}, "id": 630, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7298:22:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564", "id": 631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7322:27:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a", "typeString": "literal_string \"This token is not allowed\""}, "value": "This token is not allowed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a", "typeString": "literal_string \"This token is not allowed\""}], "id": 627, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7290:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 632, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7290:60:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 633, "nodeType": "ExpressionStatement", "src": "7290:60:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 635, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "7381:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 637, "indexExpression": {"id": 636, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "7389:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7381:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7381:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "35", "id": 639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7406:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "src": "7381:26:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "536f7272792c20746869732067616d6520697320616c72656164792066756c6c2e20506c656173652077616974206e6578742067616d652e", "id": 641, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7421:58:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba", "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""}, "value": "Sorry, this game is already full. Please wait next game."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_487d8b4762b6dd059fc4f9ae6e43a0073d998037559ae11396742fe27d9e0dba", "typeString": "literal_string \"Sorry, this game is already full. Please wait next game.\""}], "id": 634, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7360:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 642, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7360:129:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 643, "nodeType": "ExpressionStatement", "src": "7360:129:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 645, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7507:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 646, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "7521:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 647, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "7521:15:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "7507:29:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e277420626574206d6f6e6579207768696c6520", "id": 649, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7538:28:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990", "typeString": "literal_string \"You can't bet money while \""}, "value": "You can't bet money while "}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_03f4a025866c39ec1898bcd569c34166c19475af0049d3a9853457a493101990", "typeString": "literal_string \"You can't bet money while \""}], "id": 644, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7499:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 650, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7499:68:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 651, "nodeType": "ExpressionStatement", "src": "7499:68:7"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 654, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 652, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "7803:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 653, "name": "mscTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "7813:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7803:25:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 681, "nodeType": "Block", "src": "8156:392:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 672, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8433:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 673, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8433:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 676, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "8453:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_CardGame_$1106", "typeString": "contract CardGame"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CardGame_$1106", "typeString": "contract CardGame"}], "id": 675, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8445:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 674, "name": "address", "nodeType": "ElementaryTypeName", "src": "8445:7:7", "typeDescriptions": {}}}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8445:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 678, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "8460:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 669, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8412:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 668, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "8405:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$", "typeString": "type(contract IERC20)"}}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8405:14:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1269, "src": "8405:27:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 679, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8405:63:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 680, "nodeType": "ExpressionStatement", "src": "8405:63:7"}]}, "id": 682, "nodeType": "IfStatement", "src": "7799:749:7", "trueBody": {"id": 667, "nodeType": "Block", "src": "7830:320:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 658, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7866:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7866:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 662, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "7886:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_CardGame_$1106", "typeString": "contract CardGame"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CardGame_$1106", "typeString": "contract CardGame"}], "id": 661, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7878:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 660, "name": "address", "nodeType": "ElementaryTypeName", "src": "7878:7:7", "typeDescriptions": {}}}, "id": 663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7878:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 664, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "7893:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 655, "name": "mscToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "7844:8:7", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 657, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1269, "src": "7844:21:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7844:57:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 666, "nodeType": "ExpressionStatement", "src": "7844:57:7"}]}}, {"expression": {"id": 697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 683, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "8557:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 687, "indexExpression": {"id": 684, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8571:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8557:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 688, "indexExpression": {"expression": {"id": 685, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8579:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 686, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8579:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8557:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 696, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 689, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "8605:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 691, "indexExpression": {"id": 690, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8619:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8605:21:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 694, "indexExpression": {"expression": {"id": 692, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8627:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8627:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8605:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 695, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "8653:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8605:55:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8557:103:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 698, "nodeType": "ExpressionStatement", "src": "8557:103:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 699, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "8674:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 701, "indexExpression": {"id": 700, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8682:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8674:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8674:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "30", "id": 703, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8700:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8674:27:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 722, "nodeType": "Block", "src": "8760:70:7", "statements": [{"expression": {"id": 720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 712, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "8774:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 714, "indexExpression": {"id": 713, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8783:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8774:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 715, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "8793:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 717, "indexExpression": {"id": 716, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8802:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8793:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 718, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "8812:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8793:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8774:45:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 721, "nodeType": "ExpressionStatement", "src": "8774:45:7"}]}, "id": 723, "nodeType": "IfStatement", "src": "8670:160:7", "trueBody": {"id": 711, "nodeType": "Block", "src": "8703:51:7", "statements": [{"expression": {"id": 709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 705, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "8717:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 707, "indexExpression": {"id": 706, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8726:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8717:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 708, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "8736:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8717:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 710, "nodeType": "ExpressionStatement", "src": "8717:26:7"}]}}, {"expression": {"arguments": [{"expression": {"id": 728, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8860:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8860:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"baseExpression": {"id": 724, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "8839:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 726, "indexExpression": {"id": 725, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8847:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8839:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "8839:20:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 730, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8839:32:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 731, "nodeType": "ExpressionStatement", "src": "8839:32:7"}, {"expression": {"id": 739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 732, "name": "playersCardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "8881:17:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 736, "indexExpression": {"id": 733, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "8899:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8881:25:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 737, "indexExpression": {"expression": {"id": 734, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8907:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8907:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8881:37:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 738, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8921:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8881:41:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 740, "nodeType": "ExpressionStatement", "src": "8881:41:7"}]}, "functionSelector": "f1d76a5f", "id": 742, "implemented": true, "kind": "function", "modifiers": [], "name": "betMoney", "nameLocation": "7172:8:7", "nodeType": "FunctionDefinition", "parameters": {"id": 618, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 615, "mutability": "mutable", "name": "_amount", "nameLocation": "7189:7:7", "nodeType": "VariableDeclaration", "scope": 742, "src": "7181:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 614, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7181:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 617, "mutability": "mutable", "name": "_token", "nameLocation": "7206:6:7", "nodeType": "VariableDeclaration", "scope": 742, "src": "7198:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 616, "name": "address", "nodeType": "ElementaryTypeName", "src": "7198:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "7180:33:7"}, "returnParameters": {"id": 619, "nodeType": "ParameterList", "parameters": [], "src": "7221:0:7"}, "scope": 1106, "src": "7163:1796:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 762, "nodeType": "Block", "src": "9007:495:7", "statements": [{"expression": {"id": 749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 747, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "9017:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 748, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 744, "src": "9037:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9017:26:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 750, "nodeType": "ExpressionStatement", "src": "9017:26:7"}, {"assignments": [752], "declarations": [{"constant": false, "id": 752, "mutability": "mutable", "name": "requestId", "nameLocation": "9062:9:7", "nodeType": "VariableDeclaration", "scope": 762, "src": "9054:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 751, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9054:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 757, "initialValue": {"arguments": [{"id": 754, "name": "keyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "9092:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 755, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "9101:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 753, "name": "requestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1359, "src": "9074:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (bytes32,uint256) returns (bytes32)"}}, "id": 756, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9074:31:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "9054:51:7"}, {"eventCall": {"arguments": [{"id": 759, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 752, "src": "9140:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 758, "name": "RequestedRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "9120:19:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9120:30:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 761, "nodeType": "EmitStatement", "src": "9115:35:7"}]}, "functionSelector": "8b42eb7c", "id": 763, "implemented": true, "kind": "function", "modifiers": [], "name": "drawCards", "nameLocation": "8974:9:7", "nodeType": "FunctionDefinition", "parameters": {"id": 745, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 744, "mutability": "mutable", "name": "_token", "nameLocation": "8992:6:7", "nodeType": "VariableDeclaration", "scope": 763, "src": "8984:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 743, "name": "address", "nodeType": "ElementaryTypeName", "src": "8984:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8983:16:7"}, "returnParameters": {"id": 746, "nodeType": "ParameterList", "parameters": [], "src": "9007:0:7"}, "scope": 1106, "src": "8965:537:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1303], "body": {"id": 836, "nodeType": "Block", "src": "9706:680:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 772, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "9724:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 773, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "9738:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 774, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "referencedDeclaration": 18, "src": "9738:15:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "9724:29:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f75206172656e27742074686572652079657421", "id": 776, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9755:23:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}, "value": "You aren't there yet!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}], "id": 771, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9716:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9716:63:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 778, "nodeType": "ExpressionStatement", "src": "9716:63:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 780, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "9797:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 781, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9811:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9797:15:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "72616e646f6d2d6e6f742d666f756e64", "id": 783, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9814:18:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab", "typeString": "literal_string \"random-not-found\""}, "value": "random-not-found"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ca1dd0e8367e5b802bd90d095585ec5b29e30d5a6bcc2cd6a4027a15ae06c1ab", "typeString": "literal_string \"random-not-found\""}], "id": 779, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9789:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 784, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9789:44:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 785, "nodeType": "ExpressionStatement", "src": "9789:44:7"}, {"expression": {"id": 788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 786, "name": "randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 125, "src": "9843:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 787, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "9856:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9843:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 789, "nodeType": "ExpressionStatement", "src": "9843:24:7"}, {"assignments": [791], "declarations": [{"constant": false, "id": 791, "mutability": "mutable", "name": "cardNumber", "nameLocation": "9885:10:7", "nodeType": "VariableDeclaration", "scope": 836, "src": "9877:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 790, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9877:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 795, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 792, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "9898:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"hexValue": "3134", "id": 793, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9912:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_14_by_1", "typeString": "int_const 14"}, "value": "14"}, "src": "9898:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9877:37:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 798, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 796, "name": "cardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "9928:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 797, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9942:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9928:15:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 804, "nodeType": "IfStatement", "src": "9924:60:7", "trueBody": {"id": 803, "nodeType": "Block", "src": "9945:39:7", "statements": [{"expression": {"id": 801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 799, "name": "cardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "9959:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "31", "id": 800, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9972:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "9959:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 802, "nodeType": "ExpressionStatement", "src": "9959:14:7"}]}}, {"assignments": [806], "declarations": [{"constant": false, "id": 806, "mutability": "mutable", "name": "player", "nameLocation": "10001:6:7", "nodeType": "VariableDeclaration", "scope": 836, "src": "9993:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 805, "name": "address", "nodeType": "ElementaryTypeName", "src": "9993:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 814, "initialValue": {"baseExpression": {"baseExpression": {"id": 807, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "10010:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 809, "indexExpression": {"id": 808, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "10018:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10010:26:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 813, "indexExpression": {"baseExpression": {"id": 810, "name": "playerCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 102, "src": "10050:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 812, "indexExpression": {"id": 811, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "10064:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10050:32:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10010:82:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "9993:99:7"}, {"expression": {"id": 821, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 815, "name": "playersCardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "10102:17:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 818, "indexExpression": {"id": 816, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "10120:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10102:36:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 819, "indexExpression": {"id": 817, "name": "player", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 806, "src": "10139:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10102:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 820, "name": "cardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "10149:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10102:57:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 822, "nodeType": "ExpressionStatement", "src": "10102:57:7"}, {"expression": {"arguments": [{"id": 827, "name": "cardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "10205:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 823, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "10169:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 825, "indexExpression": {"id": 824, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "10181:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10169:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "10169:35:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$", "typeString": "function (uint256[] storage pointer,uint256)"}}, "id": 828, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10169:47:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 829, "nodeType": "ExpressionStatement", "src": "10169:47:7"}, {"expression": {"id": 834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 830, "name": "playerCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 102, "src": "10226:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 832, "indexExpression": {"id": 831, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "10240:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10226:32:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 833, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10262:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10226:37:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 835, "nodeType": "ExpressionStatement", "src": "10226:37:7"}]}, "id": 837, "implemented": true, "kind": "function", "modifiers": [], "name": "fulfillRandomness", "nameLocation": "9609:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 769, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9693:8:7"}, "parameters": {"id": 768, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 765, "mutability": "mutable", "name": "_requestId", "nameLocation": "9635:10:7", "nodeType": "VariableDeclaration", "scope": 837, "src": "9627:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 764, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9627:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 767, "mutability": "mutable", "name": "_randomness", "nameLocation": "9655:11:7", "nodeType": "VariableDeclaration", "scope": 837, "src": "9647:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 766, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9647:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9626:41:7"}, "returnParameters": {"id": 770, "nodeType": "ParameterList", "parameters": [], "src": "9706:0:7"}, "scope": 1106, "src": "9600:786:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 958, "nodeType": "Block", "src": "10462:1289:7", "statements": [{"expression": {"id": 849, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 846, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "10472:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 847, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "10485:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 848, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CALCULATING_WINNER", "nodeType": "MemberAccess", "referencedDeclaration": 20, "src": "10485:29:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "10472:42:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "id": 850, "nodeType": "ExpressionStatement", "src": "10472:42:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 852, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "10703:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10728:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 854, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10720:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 853, "name": "address", "nodeType": "ElementaryTypeName", "src": "10720:7:7", "typeDescriptions": {}}}, "id": 856, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10720:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10703:27:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4265666f72652067616d65206973206e6f74206f766572207965742c206f776e6572206861766520746f207061792072657761726420746f2077696e6e657221", "id": 858, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10744:66:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_39ebb67fea5db80fb2d0f3a25f6e24ea5aadf12c7f1df56c40ca9e7529dba198", "typeString": "literal_string \"Before game is not over yet, owner have to pay reward to winner!\""}, "value": "Before game is not over yet, owner have to pay reward to winner!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_39ebb67fea5db80fb2d0f3a25f6e24ea5aadf12c7f1df56c40ca9e7529dba198", "typeString": "literal_string \"Before game is not over yet, owner have to pay reward to winner!\""}], "id": 851, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10682:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 859, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10682:138:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 860, "nodeType": "ExpressionStatement", "src": "10682:138:7"}, {"expression": {"arguments": [{"arguments": [{"id": 863, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "10867:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 862, "name": "playerIsAllowed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "10851:15:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) returns (bool)"}}, "id": 864, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10851:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416c6c207061727469636970616e7473206e6565647320746f20647261772061206361726421", "id": 865, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10888:40:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a270eece503ec8ff69054a8a0f11dad42479c25ff62c76722a946e0d57e15740", "typeString": "literal_string \"All participants needs to draw a card!\""}, "value": "All participants needs to draw a card!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a270eece503ec8ff69054a8a0f11dad42479c25ff62c76722a946e0d57e15740", "typeString": "literal_string \"All participants needs to draw a card!\""}], "id": 861, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10830:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 866, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10830:108:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 867, "nodeType": "ExpressionStatement", "src": "10830:108:7"}, {"assignments": [869], "declarations": [{"constant": false, "id": 869, "mutability": "mutable", "name": "max", "nameLocation": "11158:3:7", "nodeType": "VariableDeclaration", "scope": 958, "src": "11150:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 868, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11150:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 871, "initialValue": {"hexValue": "30", "id": 870, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11164:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "11150:15:7"}, {"body": {"id": 948, "nodeType": "Block", "src": "11233:449:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 891, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 885, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "11251:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 887, "indexExpression": {"id": 886, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11263:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11251:19:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 889, "indexExpression": {"id": 888, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11271:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11251:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 890, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "11276:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11251:28:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 911, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "11405:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 913, "indexExpression": {"id": 912, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11417:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11405:19:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 915, "indexExpression": {"id": 914, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11425:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11405:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 916, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "11431:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11405:29:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 946, "nodeType": "IfStatement", "src": "11401:271:7", "trueBody": {"id": 945, "nodeType": "Block", "src": "11436:236:7", "statements": [{"assignments": [919], "declarations": [{"constant": false, "id": 919, "mutability": "mutable", "name": "judge", "nameLocation": "11462:5:7", "nodeType": "VariableDeclaration", "scope": 945, "src": "11454:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 918, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11454:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 923, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 922, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 920, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "11470:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"hexValue": "32", "id": 921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11476:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "11470:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11454:23:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 926, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 924, "name": "judge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 919, "src": "11499:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 925, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11508:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "11499:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 940, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 938, "name": "judge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 919, "src": "11597:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 939, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11606:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "11597:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 943, "nodeType": "IfStatement", "src": "11593:65:7", "trueBody": {"id": 942, "nodeType": "Block", "src": "11609:49:7", "statements": [{"id": 941, "nodeType": "Continue", "src": "11631:8:7"}]}}, "id": 944, "nodeType": "IfStatement", "src": "11495:163:7", "trueBody": {"id": 937, "nodeType": "Block", "src": "11511:76:7", "statements": [{"expression": {"id": 935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 927, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "11533:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 929, "indexExpression": {"id": 928, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11540:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11533:14:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"baseExpression": {"id": 930, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "11550:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 932, "indexExpression": {"id": 931, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11558:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11550:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 934, "indexExpression": {"id": 933, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11566:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11550:18:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11533:35:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 936, "nodeType": "ExpressionStatement", "src": "11533:35:7"}]}}]}}, "id": 947, "nodeType": "IfStatement", "src": "11247:425:7", "trueBody": {"id": 910, "nodeType": "Block", "src": "11281:114:7", "statements": [{"expression": {"id": 898, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 892, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "11299:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"baseExpression": {"id": 893, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "11305:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 895, "indexExpression": {"id": 894, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11317:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11305:19:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 897, "indexExpression": {"id": 896, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11325:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11305:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11299:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 899, "nodeType": "ExpressionStatement", "src": "11299:28:7"}, {"expression": {"id": 908, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 900, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "11345:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 902, "indexExpression": {"id": 901, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11352:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11345:14:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"baseExpression": {"id": 903, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "11362:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 905, "indexExpression": {"id": 904, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11370:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11362:15:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 907, "indexExpression": {"id": 906, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11378:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11362:18:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11345:35:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 909, "nodeType": "ExpressionStatement", "src": "11345:35:7"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 881, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 876, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11196:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 877, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "11200:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 879, "indexExpression": {"id": 878, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11212:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11200:19:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11200:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11196:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 949, "initializationExpression": {"assignments": [873], "declarations": [{"constant": false, "id": 873, "mutability": "mutable", "name": "c", "nameLocation": "11189:1:7", "nodeType": "VariableDeclaration", "scope": 949, "src": "11181:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 872, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11181:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 875, "initialValue": {"hexValue": "30", "id": 874, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11193:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "11181:13:7"}, "loopExpression": {"expression": {"id": 883, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "11228:3:7", "subExpression": {"id": 882, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "11228:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 884, "nodeType": "ExpressionStatement", "src": "11228:3:7"}, "nodeType": "ForStatement", "src": "11176:506:7"}, {"expression": {"id": 952, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 950, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "11691:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 951, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11707:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11691:22:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 953, "nodeType": "ExpressionStatement", "src": "11691:22:7"}, {"expression": {"baseExpression": {"id": 954, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "11730:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 956, "indexExpression": {"id": 955, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "11737:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11730:14:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 845, "id": 957, "nodeType": "Return", "src": "11723:21:7"}]}, "functionSelector": "b90c899d", "id": 959, "implemented": true, "kind": "function", "modifiers": [{"id": 842, "kind": "modifierInvocation", "modifierName": {"id": 841, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "10434:9:7"}, "nodeType": "ModifierInvocation", "src": "10434:9:7"}], "name": "getWinner", "nameLocation": "10401:9:7", "nodeType": "FunctionDefinition", "parameters": {"id": 840, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 839, "mutability": "mutable", "name": "_token", "nameLocation": "10419:6:7", "nodeType": "VariableDeclaration", "scope": 959, "src": "10411:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 838, "name": "address", "nodeType": "ElementaryTypeName", "src": "10411:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "10410:16:7"}, "returnParameters": {"id": 845, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 844, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 959, "src": "10453:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 843, "name": "address", "nodeType": "ElementaryTypeName", "src": "10453:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "10452:9:7"}, "scope": 1106, "src": "10392:1359:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 1104, "nodeType": "Block", "src": "11793:1327:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}, "id": 968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 965, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "11824:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 966, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "11838:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 967, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CALCULATING_WINNER", "nodeType": "MemberAccess", "referencedDeclaration": 20, "src": "11838:29:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "11824:43:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f75206172656e27742074686572652079657421", "id": 969, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11881:23:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}, "value": "You aren't there yet!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}], "id": 964, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11803:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11803:111:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 971, "nodeType": "ExpressionStatement", "src": "11803:111:7"}, {"expression": {"arguments": [{"arguments": [{"id": 974, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "11947:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 973, "name": "tokenIsAllowed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "11932:14:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) returns (bool)"}}, "id": 975, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11932:29:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468697320746f6b656e206973206e6f7420616c6c6f776564", "id": 976, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11963:27:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a", "typeString": "literal_string \"This token is not allowed\""}, "value": "This token is not allowed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b29346207121ea5905ba3be5e31de88970ee4be54301626c1dc3130106da820a", "typeString": "literal_string \"This token is not allowed\""}], "id": 972, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11924:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11924:67:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 978, "nodeType": "ExpressionStatement", "src": "11924:67:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 980, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "12022:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 982, "indexExpression": {"id": 981, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12029:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12022:21:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 985, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12055:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 984, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12047:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 983, "name": "address", "nodeType": "ElementaryTypeName", "src": "12047:7:7", "typeDescriptions": {}}}, "id": 986, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12047:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12022:35:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722069732077696e6e6572", "id": 988, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12071:43:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c", "typeString": "literal_string \"Still doesn't know which player is winner\""}, "value": "Still doesn't know which player is winner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9763e108286f7d65ba64d7d5c9b0b69d37752cb2e95b72465dc74582a1e2587c", "typeString": "literal_string \"Still doesn't know which player is winner\""}], "id": 979, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12001:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12001:123:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 990, "nodeType": "ExpressionStatement", "src": "12001:123:7"}, {"expression": {"arguments": [{"expression": {"id": 995, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12239:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 996, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12239:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 997, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "12263:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 999, "indexExpression": {"id": 998, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12270:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12263:21:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 1000, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "12298:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1002, "indexExpression": {"id": 1001, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12307:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12298:23:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 992, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12198:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 991, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "12191:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1288_$", "typeString": "type(contract IERC20)"}}, "id": 993, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12191:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1288", "typeString": "contract IERC20"}}, "id": 994, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1269, "src": "12191:34:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 1003, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12191:140:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1004, "nodeType": "ExpressionStatement", "src": "12191:140:7"}, {"expression": {"id": 1009, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1005, "name": "totalPot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 92, "src": "12433:8:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1007, "indexExpression": {"id": 1006, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12442:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12433:23:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 1008, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12459:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12433:27:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1010, "nodeType": "ExpressionStatement", "src": "12433:27:7"}, {"body": {"id": 1048, "nodeType": "Block", "src": "12623:183:7", "statements": [{"assignments": [1025], "declarations": [{"constant": false, "id": 1025, "mutability": "mutable", "name": "player", "nameLocation": "12645:6:7", "nodeType": "VariableDeclaration", "scope": 1048, "src": "12637:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1024, "name": "address", "nodeType": "ElementaryTypeName", "src": "12637:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1031, "initialValue": {"baseExpression": {"baseExpression": {"id": 1026, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "12654:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 1028, "indexExpression": {"id": 1027, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12662:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12654:22:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 1030, "indexExpression": {"id": 1029, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "12677:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12654:29:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "12637:46:7"}, {"expression": {"id": 1038, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 1032, "name": "wagerOfPlayer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "12697:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 1035, "indexExpression": {"id": 1033, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12711:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12697:28:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1036, "indexExpression": {"id": 1034, "name": "player", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1025, "src": "12726:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12697:36:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 1037, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12736:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12697:40:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1039, "nodeType": "ExpressionStatement", "src": "12697:40:7"}, {"expression": {"id": 1046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 1040, "name": "playersCardNumber", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "12751:17:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 1043, "indexExpression": {"id": 1041, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12769:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12751:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1044, "indexExpression": {"id": 1042, "name": "player", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1025, "src": "12784:6:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12751:40:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 1045, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12794:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12751:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1047, "nodeType": "ExpressionStatement", "src": "12751:44:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1015, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "12554:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 1016, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "12562:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 1018, "indexExpression": {"id": 1017, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12570:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12562:22:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "12562:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12554:37:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1049, "initializationExpression": {"assignments": [1012], "declarations": [{"constant": false, "id": 1012, "mutability": "mutable", "name": "index", "nameLocation": "12531:5:7", "nodeType": "VariableDeclaration", "scope": 1049, "src": "12523:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12523:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1014, "initialValue": {"hexValue": "30", "id": 1013, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12539:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "12523:17:7"}, "loopExpression": {"expression": {"id": 1022, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "12605:7:7", "subExpression": {"id": 1021, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "12605:5:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1023, "nodeType": "ExpressionStatement", "src": "12605:7:7"}, "nodeType": "ForStatement", "src": "12505:301:7"}, {"expression": {"id": 1055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1050, "name": "tokenToRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "12815:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 1053, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12843:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1052, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12835:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1051, "name": "address", "nodeType": "ElementaryTypeName", "src": "12835:7:7", "typeDescriptions": {}}}, "id": 1054, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12835:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12815:30:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1056, "nodeType": "ExpressionStatement", "src": "12815:30:7"}, {"expression": {"id": 1061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1057, "name": "playerCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 102, "src": "12855:13:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1059, "indexExpression": {"id": 1058, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12869:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12855:28:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 1060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12886:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12855:32:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1062, "nodeType": "ExpressionStatement", "src": "12855:32:7"}, {"expression": {"id": 1071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1063, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "12897:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$", "typeString": "mapping(address => address[] storage ref)"}}, "id": 1065, "indexExpression": {"id": 1064, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12905:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12897:22:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 1069, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12936:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1068, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "12922:13:7", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 1066, "name": "address", "nodeType": "ElementaryTypeName", "src": "12926:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1067, "nodeType": "ArrayTypeName", "src": "12926:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 1070, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12922:16:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "src": "12897:41:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 1072, "nodeType": "ExpressionStatement", "src": "12897:41:7"}, {"expression": {"id": 1081, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1073, "name": "cardNumbers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "12948:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1075, "indexExpression": {"id": 1074, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "12960:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12948:26:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 1079, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12991:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1078, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "12977:13:7", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1076, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12981:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1077, "nodeType": "ArrayTypeName", "src": "12981:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1080, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12977:16:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "12948:45:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1082, "nodeType": "ExpressionStatement", "src": "12948:45:7"}, {"expression": {"id": 1090, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1083, "name": "winner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "13003:6:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 1085, "indexExpression": {"id": 1084, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "13010:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "13003:21:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 1088, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13035:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1087, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13027:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1086, "name": "address", "nodeType": "ElementaryTypeName", "src": "13027:7:7", "typeDescriptions": {}}}, "id": 1089, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13027:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "13003:34:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1091, "nodeType": "ExpressionStatement", "src": "13003:34:7"}, {"expression": {"id": 1097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1092, "name": "competedToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "13047:13:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 1095, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13071:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1094, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13063:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1093, "name": "address", "nodeType": "ElementaryTypeName", "src": "13063:7:7", "typeDescriptions": {}}}, "id": 1096, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13063:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "13047:26:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1098, "nodeType": "ExpressionStatement", "src": "13047:26:7"}, {"expression": {"id": 1102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1099, "name": "game_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "13083:10:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 1100, "name": "GAME_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "13096:10:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_GAME_STATE_$21_$", "typeString": "type(enum CardGame.GAME_STATE)"}}, "id": 1101, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "13096:17:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "src": "13083:30:7", "typeDescriptions": {"typeIdentifier": "t_enum$_GAME_STATE_$21", "typeString": "enum CardGame.GAME_STATE"}}, "id": 1103, "nodeType": "ExpressionStatement", "src": "13083:30:7"}]}, "functionSelector": "6cbc2ded", "id": 1105, "implemented": true, "kind": "function", "modifiers": [{"id": 962, "kind": "modifierInvocation", "modifierName": {"id": 961, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 1153, "src": "11783:9:7"}, "nodeType": "ModifierInvocation", "src": "11783:9:7"}], "name": "endGame", "nameLocation": "11766:7:7", "nodeType": "FunctionDefinition", "parameters": {"id": 960, "nodeType": "ParameterList", "parameters": [], "src": "11773:2:7"}, "returnParameters": {"id": 963, "nodeType": "ParameterList", "parameters": [], "src": "11793:0:7"}, "scope": 1106, "src": "11757:1363:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 1107, "src": "444:12678:7", "usedErrors": []}], "src": "32:13091:7"}, "compiler": {"version": "0.8.10+commit.fc410830", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "CardGame", "deployedBytecode": "608060405234801561001057600080fd5b50600436106102065760003560e01c80638ae43b541161011a578063bd9c47e3116100ad578063ddca3f431161007c578063ddca3f43146104ba578063f1c5d6c2146104c3578063f1d76a5f146104eb578063f2fde38b146104fe578063fe05cc9c1461051157600080fd5b8063bd9c47e314610446578063cd5ea4f81461046f578063d65ab5f21461048f578063dd5b84671461049757600080fd5b80639c753122116100e95780639c753122146103fa578063b53472ef1461040d578063b81baa5914610420578063b90c899d1461043357600080fd5b80638ae43b54146103a95780638b42eb7c146103c35780638da5cb5b146103d657806394985ddd146103e757600080fd5b806345d7c3b91161019d57806366ce6dab1161016c57806366ce6dab146103435780636cbc2ded1461036e578063715018a614610376578063877dd39d1461037e57806387cd6ad21461039157600080fd5b806345d7c3b9146102f45780635e5f2e261461030757806361728f391461031a57806366a1df651461032357600080fd5b80632ad95786116101d95780632ad957861461028457806336013189146102ad5780633fdb144b146102b65780633ff54c71146102e157600080fd5b806305f3bbd91461020b5780630b26083c1461023157806324398a85146102465780632521cc4614610259575b600080fd5b61021e610219366004612072565b610524565b6040519081526020015b60405180910390f35b61024461023f36600461209c565b610555565b005b61021e6102543660046120b5565b610601565b60105461026c906001600160a01b031681565b6040516001600160a01b039091168152602001610228565b61026c6102923660046120b5565b600e602052600090815260409020546001600160a01b031681565b61021e60115481565b61021e6102c43660046120d7565b600b60209081526000928352604080842090915290825290205481565b6102446102ef3660046120b5565b61067d565b600f5461026c906001600160a01b031681565b61026c61031536600461209c565b6107a3565b61021e60025481565b61021e6103313660046120b5565b600a6020526000908152604090205481565b61021e6103513660046120d7565b600660209081526000928352604080842090915290825290205481565b6102446107cd565b610244610b63565b61024461038c3660046120d7565b610b99565b60045461026c9061010090046001600160a01b031681565b6004546103b69060ff1681565b6040516102289190612120565b6102446103d13660046120b5565b610bf1565b6001546001600160a01b031661026c565b6102446103f5366004612148565b610c5d565b61026c610408366004612072565b610cdf565b61024461041b3660046120b5565b610d17565b61024461042e36600461216a565b610d93565b61026c6104413660046120b5565b611045565b61026c6104543660046120b5565b6007602052600090815260409020546001600160a01b031681565b61021e61047d3660046120b5565b600c6020526000908152604090205481565b610244611385565b6104aa6104a53660046120b5565b611429565b6040519015158152602001610228565b61021e60035481565b6104d66104d13660046120b5565b611486565b60408051928352602083019190915201610228565b6102446104f936600461216a565b611587565b61024461050c3660046120b5565b611946565b60055461026c906001600160a01b031681565b600d602052816000526040600020818154811061054057600080fd5b90600052602060002001600091509150505481565b6001546001600160a01b031633146105885760405162461bcd60e51b815260040161057f9061218d565b60405180910390fd5b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd91906121c2565b5050565b6001600160a01b03811660009081526006602090815260408220338352905260008061062c84611486565b909250905061063c81600a6122de565b6001600160a01b038516600090815260066020908152604080832033845290915290205461066b9084906122ea565b610675919061231f565b949350505050565b6001546001600160a01b031633146106a75760405162461bcd60e51b815260040161057f9061218d565b60005b6001600160a01b0382166000908152600860205260409020548110156105fd576001600160a01b03821660009081526008602052604081208054839081106106f4576106f4612333565b60009182526020822001546001600160a01b0316915061071482856119e1565b60055460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906121c2565b505050808061079b90612349565b9150506106aa565b600981815481106107b357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146107f75760405162461bcd60e51b815260040161057f9061218d565b600260045460ff1660028111156108105761081061210a565b146108555760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60105461086a906001600160a01b0316611429565b6108b25760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6010546001600160a01b039081166000908152600e60205260409020541661092e5760405162461bcd60e51b815260206004820152602960248201527f5374696c6c20646f65736e2774206b6e6f7720776869636820706c617965722060448201526834b9903bb4b73732b960b91b606482015260840161057f565b6010546001600160a01b039081166000818152600e6020908152604080832054600a909252918290205491516323b872dd60e01b8152336004820152931660248401526044830152906323b872dd906064016020604051808303816000875af115801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906121c2565b506010546001600160a01b03166000908152600a602052604081208190555b6010546001600160a01b0316600090815260086020526040902054811015610a8e576010546001600160a01b03166000908152600860205260408120805483908110610a3057610a30612333565b6000918252602080832090910154601080546001600160a01b0390811685526006845260408086209382168087529385528086208690559154168452600b835280842091845291528120555080610a8681612349565b9150506109e2565b50600f80546001600160a01b0319169055601080546001600160a01b039081166000908152600c60209081526040808320839055805183815280830180835295549094168352600890915290209051610ae79290611fa6565b5060408051600080825260208083018085526010546001600160a01b03168352600d9091529290209051610b1b929061200b565b50601080546001600160a01b03166000908152600e6020526040902080546001600160a01b03199081169091558154169055600480546001919060ff191682805b0217905550565b6001546001600160a01b03163314610b8d5760405162461bcd60e51b815260040161057f9061218d565b610b976000611a67565b565b6001546001600160a01b03163314610bc35760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b600f80546001600160a01b0319166001600160a01b038316179055600254600354600091610c1e91611ab9565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e81604051610c5191815260200190565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd55760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161057f565b6105fd8282611c30565b60086020528160005260406000208181548110610cfb57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546001600160a01b03163314610d415760405162461bcd60e51b815260040161057f9061218d565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b600060045460ff166002811115610dac57610dac61210a565b1480610dce5750600160045460ff166002811115610dcc57610dcc61210a565b145b610e2f5760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e2774206765742074686520726566756e64206166746572206760448201526b616d6520737461727465642160a01b606482015260840161057f565b6001600160a01b0381166000908152600660209081526040808320338452909152902054821115610eae5760405162461bcd60e51b815260206004820152602360248201527f596f75206469646e27742062657420746f6b656e206f662074686520616d6f756044820152626e742160e81b606482015260840161057f565b6001600160a01b0381166000908152600b6020908152604080832033845290915290205415610f2d5760405162461bcd60e51b815260206004820152602560248201527f596f75206472657720796f757220636172642c20796f752063616e277420726560448201526466756e642160d81b606482015260840161057f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e91906121c2565b506001600160a01b0381166000908152600660209081526040808320338452909152902054610fce908390612364565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600a909152205461100a908390612364565b6001600160a01b0382166000908152600a602090815260408083209390935560068152828220338352905220546105fd576105fd8133611da7565b6001546000906001600160a01b031633146110725760405162461bcd60e51b815260040161057f9061218d565b6004805460ff191660021790556010546001600160a01b031615611100576040805162461bcd60e51b81526020600482015260248101919091527f4265666f72652067616d65206973206e6f74206f766572207965742c206f776e60448201527f6572206861766520746f207061792072657761726420746f2077696e6e657221606482015260840161057f565b61110982611f0f565b6111645760405162461bcd60e51b815260206004820152602660248201527f416c6c207061727469636970616e7473206e6565647320746f2064726177206160448201526520636172642160d01b606482015260840161057f565b6000805b6001600160a01b0384166000908152600d602052604090205481101561134c576001600160a01b0384166000908152600d602052604090208054839190839081106111b5576111b5612333565b90600052602060002001541115611270576001600160a01b0384166000908152600d602052604090208054829081106111f0576111f0612333565b9060005260206000200154915060086000856001600160a01b03166001600160a01b03168152602001908152602001600020818154811061123357611233612333565b60009182526020808320909101546001600160a01b038781168452600e909252604090922080546001600160a01b0319169190921617905561133a565b6001600160a01b0384166000908152600d6020526040902080548391908390811061129d5761129d612333565b9060005260206000200154141561133a5760006112bb60028461237b565b905080611329576001600160a01b03851660009081526008602052604090208054839081106112ec576112ec612333565b60009182526020808320909101546001600160a01b038881168452600e909252604090922080546001600160a01b03191691909216179055611338565b8060011415611338575061133a565b505b8061134481612349565b915050611168565b5050601080546001600160a01b0319166001600160a01b038481169182179092556000908152600e60205260409020541690505b919050565b6001546001600160a01b031633146113af5760405162461bcd60e51b815260040161057f9061218d565b600160045460ff1660028111156113c8576113c861210a565b146114155760405162461bcd60e51b815260206004820152601f60248201527f43616e2774207374617274206e65772067616d65207374617465207965742100604482015260640161057f565b600480546000919060ff1916600183610b5c565b60008060095481101561148057826001600160a01b03166009828154811061145357611453612333565b6000918252602090912001546001600160a01b031614156114775750600192915050565b50600092915050565b50919050565b6001600160a01b03808216600090815260076020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa1580156114e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b91906123c1565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612411565b919760ff909216965090945050505050565b600082116115d75760405162461bcd60e51b815260206004820152601960248201527f4120626574206d757374206265206d6f7265207468616e203000000000000000604482015260640161057f565b6115e081611429565b6116285760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc81d1bdad95b881a5cc81b9bdd08185b1b1bddd959603a1b604482015260640161057f565b6001600160a01b0381166000908152600860205260409020546005116116b65760405162461bcd60e51b815260206004820152603860248201527f536f7272792c20746869732067616d6520697320616c72656164792066756c6c60448201527f2e20506c656173652077616974206e6578742067616d652e0000000000000000606482015260840161057f565b600060045460ff1660028111156116cf576116cf61210a565b1461171c5760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e277420626574206d6f6e6579207768696c6520000000000000604482015260640161057f565b6004546001600160a01b038281166101009092041614156117b8576005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b291906121c2565b50611831565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f91906121c2565b505b6001600160a01b038116600090815260066020908152604080832033845290915290205461186090839061238f565b6001600160a01b0382166000818152600660209081526040808320338452825280832094909455918152600890915220546118b5576001600160a01b0381166000908152600a602052604090208290556118f3565b6001600160a01b0381166000908152600a60205260409020546118d990839061238f565b6001600160a01b0382166000908152600a60205260409020555b6001600160a01b0316600081815260086020908152604080832080546001810182559084528284200180546001600160a01b03191633908117909155938352600b82528083209383529290529081205550565b6001546001600160a01b031633146119705760405162461bcd60e51b815260040161057f9061218d565b6001600160a01b0381166119d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b6119de81611a67565b50565b6001600160a01b0380821660009081526006602090815260408220928516825291909152600080611a1184611486565b9092509050611a2181600a6122de565b6001600160a01b038086166000908152600660209081526040808320938a1683529290522054611a529084906122ea565b611a5c919061231f565b925050505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611b29929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b5693929190612434565b6020604051808303816000875af1158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9991906121c2565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611bf390600161238f565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120610675565b600060045460ff166002811115611c4957611c4961210a565b14611c8e5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b604482015260640161057f565b60008111611cd15760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb4b5b9bdd0b599bdd5b9960821b604482015260640161057f565b60118190556000611ce3600e8361237b565b905080611cee575060015b600f546001600160a01b03166000908152600860209081526040808320600c90925282205481548110611d2357611d23612333565b6000918252602080832090910154600f80546001600160a01b039081168552600b84526040808620938216808752938552808620889055825482168652600d85528086208054600181810183559188528688200189905592549091168552600c9093529183208054919450919290611d9c90849061238f565b909155505050505050565b6000805b6001600160a01b038416600090815260086020526040902054811015611e2f576001600160a01b03848116600090815260086020526040902080549185169183908110611dfa57611dfa612333565b6000918252602090912001546001600160a01b03161415611e1d57809150611e2f565b80611e2781612349565b915050611dab565b50805b6001600160a01b038416600090815260086020526040902054611e5790600190612364565b811015611f09576001600160a01b0384166000908152600860205260409020611e8182600161238f565b81548110611e9157611e91612333565b60009182526020808320909101546001600160a01b03878116845260089092526040909220805491909216919083908110611ece57611ece612333565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611f0181612349565b915050611e32565b50505050565b6001600160a01b038116600090815260086020526040812054819015611480576001600160a01b0383166000908152600860205260408120805483908110611f5957611f59612333565b60009182526020808320909101546001600160a01b038781168452600b835260408085209190921680855292529091205490915015611f9c575060019392505050565b5060009392505050565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611fc6565b50612007929150612046565b5090565b828054828255906000526020600020908101928215611ffb579160200282015b82811115611ffb57825182559160200191906001019061202b565b5b808211156120075760008155600101612047565b80356001600160a01b038116811461138057600080fd5b6000806040838503121561208557600080fd5b61208e8361205b565b946020939093013593505050565b6000602082840312156120ae57600080fd5b5035919050565b6000602082840312156120c757600080fd5b6120d08261205b565b9392505050565b600080604083850312156120ea57600080fd5b6120f38361205b565b91506121016020840161205b565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061214257634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561215b57600080fd5b50508035926020909101359150565b6000806040838503121561217d57600080fd5b823591506121016020840161205b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156121d457600080fd5b815180151581146120d057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561223557816000190482111561221b5761221b6121e4565b8085161561222857918102915b93841c93908002906121ff565b509250929050565b60008261224c57506001611a61565b8161225957506000611a61565b816001811461226f576002811461227957612295565b6001915050611a61565b60ff84111561228a5761228a6121e4565b50506001821b611a61565b5060208310610133831016604e8410600b84101617156122b8575081810a611a61565b6122c283836121fa565b80600019048211156122d6576122d66121e4565b029392505050565b60006120d0838361223d565b6000816000190483118215151615612304576123046121e4565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261232e5761232e612309565b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561235d5761235d6121e4565b5060010190565b600082821015612376576123766121e4565b500390565b60008261238a5761238a612309565b500690565b600082198211156123a2576123a26121e4565b500190565b805169ffffffffffffffffffff8116811461138057600080fd5b600080600080600060a086880312156123d957600080fd5b6123e2866123a7565b9450602086015193506040860151925060608601519150612405608087016123a7565b90509295509295909350565b60006020828403121561242357600080fd5b815160ff811681146120d057600080fd5b60018060a01b038416815260006020848184015260606040840152835180606085015260005b818110156124765785810183015185820160800152820161245a565b81811115612488576000608083870101525b50601f01601f1916929092016080019594505050505056fea2646970667358221220a55600b326c55055bf5ae066b99420e8f5556d5b741430f89f32f211ae41833f64736f6c634300080a0033", "deployedSourceMap": "444:12678:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:48;;;;;;:::i;:::-;;:::i;:::-;;;597:25:8;;;585:2;570:18;1930:48:7;;;;;;;;2620:153;;;;;;:::i;:::-;;:::i;:::-;;5079:458;;;;;;:::i;:::-;;:::i;2339:41::-;;;;;-1:-1:-1;;;;;2339:41:7;;;;;;-1:-1:-1;;;;;1173:32:8;;;1155:51;;1143:2;1128:18;2339:41:7;1009:203:8;2084:41:7;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2084:41:7;;;2386:25;;;;;;1729:72;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2779:378;;;;;;:::i;:::-;;:::i;2288:45::-;;;;;-1:-1:-1;;;;;2288:45:7;;;1520:30;;;;;;:::i;:::-;;:::i;496:22::-;;;;;;1628:43;;;;;;:::i;:::-;;;;;;;;;;;;;;1223:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11757:1363;;;:::i;1605:92:0:-;;;:::i;3913:156:7:-;;;;;;:::i;:::-;;:::i;718:30::-;;;;;;;;-1:-1:-1;;;;;718:30:7;;;684:28;;;;;;;;;;;;;;;;:::i;8965:537::-;;;;;;:::i;:::-;;:::i;973:85:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;973:85;;9639:225:3;;;;;;:::i;:::-;;:::i;1470:44:7:-;;;;;;:::i;:::-;;:::i;3163:96::-;;;;;;:::i;:::-;;:::i;6104:844::-;;;;;;:::i;:::-;;:::i;10392:1359::-;;;;;;:::i;:::-;;:::i;1339:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1339:50:7;;;1840:48;;;;;;:::i;:::-;;;;;;;;;;;;;;6954:203;;;:::i;3265:274::-;;;;;;:::i;:::-;;:::i;:::-;;;2819:14:8;;2812:22;2794:41;;2782:2;2767:18;3265:274:7;2654:187:8;524:18:7;;;;;;4075:516;;;;;;:::i;:::-;;:::i;:::-;;;;3020:25:8;;;3076:2;3061:18;;3054:34;;;;2993:18;4075:516:7;2846:248:8;7163:1796:7;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;754:22:7:-;;;;;-1:-1:-1;;;;;754:22:7;;;1930:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2620:153::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;2686:8:7::1;::::0;:38:::1;::::0;-1:-1:-1;;;2686:38:7;;2704:10:::1;2686:38;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;-1:-1:-1;;;;;2686:8:7;;::::1;::::0;:17:::1;::::0;3830:18:8;;2686:38:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2620:153:::0;:::o;5079:458::-;-1:-1:-1;;;;;5202:21:7;;5175:7;5202:21;;;:13;:21;;;;;;;5224:10;5202:33;;;;5285:13;5300:16;5320:21;5334:6;5320:13;:21::i;:::-;5284:57;;-1:-1:-1;5284:57:7;-1:-1:-1;5516:12:7;5284:57;5516:2;:12;:::i;:::-;-1:-1:-1;;;;;5470:21:7;;;;;;:13;:21;;;;;;;;5492:10;5470:33;;;;;;;;:41;;5506:5;;5470:41;:::i;:::-;5469:60;;;;:::i;:::-;5461:69;5079:458;-1:-1:-1;;;;5079:458:7:o;2779:378::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2848:13:7::1;2843:308;-1:-1:-1::0;;;;;2875:15:7;::::1;;::::0;;;:7:::1;:15;::::0;;;;:22;2867:30;::::1;2843:308;;;-1:-1:-1::0;;;;;2942:15:7;::::1;2922:17;2942:15:::0;;;:7:::1;:15;::::0;;;;:22;;2958:5;;2942:22;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2942:22:7::1;::::0;-1:-1:-1;3003:42:7::1;2942:22:::0;3038:6;3003:23:::1;:42::i;:::-;3059:8;::::0;:44:::1;::::0;-1:-1:-1;;;3059:44:7;;-1:-1:-1;;;;;3875:32:8;;;3059:44:7::1;::::0;::::1;3857:51:8::0;3924:18;;;3917:34;;;2978:67:7;;-1:-1:-1;3059:8:7;::::1;::::0;:17:::1;::::0;3830:18:8;;3059:44:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2908:243;;2899:7;;;;;:::i;:::-;;;;2843:308;;1520:30:::0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1520:30:7;;-1:-1:-1;1520:30:7;:::o;11757:1363::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;11838:29:7::1;11824:10;::::0;::::1;;:43;::::0;::::1;;;;;;:::i;:::-;;11803:111;;;::::0;-1:-1:-1;;;11803:111:7;;6654:2:8;11803:111:7::1;::::0;::::1;6636:21:8::0;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;11803:111:7::1;6452:345:8::0;11803:111:7::1;11947:13;::::0;11932:29:::1;::::0;-1:-1:-1;;;;;11947:13:7::1;11932:14;:29::i;:::-;11924:67;;;::::0;-1:-1:-1;;;11924:67:7;;7004:2:8;11924:67:7::1;::::0;::::1;6986:21:8::0;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;11924:67:7::1;6802:349:8::0;11924:67:7::1;12029:13;::::0;-1:-1:-1;;;;;12029:13:7;;::::1;12055:1;12022:21:::0;;;:6:::1;:21;::::0;;;;;::::1;12001:123;;;::::0;-1:-1:-1;;;12001:123:7;;7358:2:8;12001:123:7::1;::::0;::::1;7340:21:8::0;7397:2;7377:18;;;7370:30;7436:34;7416:18;;;7409:62;-1:-1:-1;;;7487:18:8;;;7480:39;7536:19;;12001:123:7::1;7156:405:8::0;12001:123:7::1;12198:13;::::0;-1:-1:-1;;;;;12198:13:7;;::::1;;12263:21:::0;;;:6:::1;:21;::::0;;;;;;;;12298:8:::1;:23:::0;;;;;;;;12191:140;;-1:-1:-1;;;12191:140:7;;12239:10:::1;12191:140;::::0;::::1;7806:34:8::0;12263:21:7;::::1;7856:18:8::0;;;7849:43;7908:18;;;7901:34;12198:13:7;12191:34:::1;::::0;7741:18:8;;12191:140:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12442:13:7::1;::::0;-1:-1:-1;;;;;12442:13:7::1;12459:1;12433:23:::0;;;:8:::1;:23;::::0;;;;:27;;;12505:301:::1;12570:13;::::0;-1:-1:-1;;;;;12570:13:7::1;12562:22;::::0;;;:7:::1;:22;::::0;;;;:29;12554:37;::::1;12505:301;;;12662:13;::::0;-1:-1:-1;;;;;12662:13:7::1;12637:14;12654:22:::0;;;:7:::1;:22;::::0;;;;:29;;12677:5;;12654:29;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;12711:13:::1;::::0;;-1:-1:-1;;;;;12711:13:7;;::::1;12697:28:::0;;:13:::1;:28:::0;;;;;;12654:29;;::::1;12697:36:::0;;;;;;;;;:40;;;12769:13;;::::1;12751:32:::0;;:17:::1;:32:::0;;;;;:40;;;;;;;:44;-1:-1:-1;12605:7:7;::::1;::::0;::::1;:::i;:::-;;;;12505:301;;;-1:-1:-1::0;12815:17:7::1;:30:::0;;-1:-1:-1;;;;;;12815:30:7::1;::::0;;12869:13:::1;::::0;;-1:-1:-1;;;;;12869:13:7;;::::1;-1:-1:-1::0;12855:28:7;;;:13:::1;:28;::::0;;;;;;;:32;;;12922:16;;;;;;;::::1;::::0;;;12905:13;;;;::::1;12897:22:::0;;:7:::1;:22:::0;;;;;:41;;::::1;::::0;12922:16;12897:41:::1;:::i;:::-;-1:-1:-1::0;12977:16:7::1;::::0;;12991:1:::1;12977:16:::0;;;::::1;::::0;;::::1;::::0;;;12960:13:::1;::::0;-1:-1:-1;;;;;12960:13:7::1;12948:26:::0;;:11:::1;:26:::0;;;;;;:45;;::::1;::::0;12977:16;12948:45:::1;:::i;:::-;-1:-1:-1::0;13010:13:7::1;::::0;;-1:-1:-1;;;;;13010:13:7::1;13035:1;13003:21:::0;;;:6:::1;:21;::::0;;;;:34;;-1:-1:-1;;;;;;13003:34:7;;::::1;::::0;;;13047:26;;::::1;::::0;;13083:10:::1;:30:::0;;13010:13;;13083:10;-1:-1:-1;;13083:30:7::1;13010:13:::0;;13083:30:::1;;;;;;11757:1363::o:0;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3913:156:7:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4026:23:7;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;4026:36:7::1;::::0;;;::::1;;::::0;;3913:156::o;8965:537::-;9017:17;:26;;-1:-1:-1;;;;;;9017:26:7;-1:-1:-1;;;;;9017:26:7;;;;;9092:7;;9101:3;;-1:-1:-1;;9074:31:7;;:17;:31::i;:::-;9054:51;;9120:30;9140:9;9120:30;;;;597:25:8;;585:2;570:18;;451:177;9120:30:7;;;;;;;;9007:495;8965:537;:::o;9639:225:3:-;9749:10;-1:-1:-1;;;;;9763:14:3;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:3;;8280:2:8;9741:72:3;;;8262:21:8;8319:2;8299:18;;;8292:30;8358:33;8338:18;;;8331:61;8409:18;;9741:72:3;8078:355:8;9741:72:3;9819:40;9837:9;9848:10;9819:17;:40::i;1470:44:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1470:44:7;;-1:-1:-1;1470:44:7;;-1:-1:-1;1470:44:7:o;3163:96::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3226:13:7::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3226:26:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;3226:26:7::1;-1:-1:-1::0;;;;;3226:26:7;;;::::1;::::0;;;::::1;::::0;;3163:96::o;6104:844::-;6212:15;6198:10;;;;:29;;;;;;;;:::i;:::-;;:64;;;-1:-1:-1;6245:17:7;6231:10;;;;:31;;;;;;;;:::i;:::-;;6198:64;6177:155;;;;-1:-1:-1;;;6177:155:7;;8640:2:8;6177:155:7;;;8622:21:8;8679:2;8659:18;;;8652:30;8718:34;8698:18;;;8691:62;-1:-1:-1;;;8769:18:8;;;8762:42;8821:19;;6177:155:7;8438:408:8;6177:155:7;-1:-1:-1;;;;;6363:21:7;;;;;;:13;:21;;;;;;;;6385:10;6363:33;;;;;;;;:44;-1:-1:-1;6363:44:7;6342:126;;;;-1:-1:-1;;;6342:126:7;;9053:2:8;6342:126:7;;;9035:21:8;9092:2;9072:18;;;9065:30;9131:34;9111:18;;;9104:62;-1:-1:-1;;;9182:18:8;;;9175:33;9225:19;;6342:126:7;8851:399:8;6342:126:7;-1:-1:-1;;;;;6499:25:7;;;;;;:17;:25;;;;;;;;6525:10;6499:37;;;;;;;;:42;6478:126;;;;-1:-1:-1;;;6478:126:7;;9457:2:8;6478:126:7;;;9439:21:8;9496:2;9476:18;;;9469:30;9535:34;9515:18;;;9508:62;-1:-1:-1;;;9586:18:8;;;9579:35;9631:19;;6478:126:7;9255:401:8;6478:126:7;6614:44;;-1:-1:-1;;;6614:44:7;;6638:10;6614:44;;;3857:51:8;3924:18;;;3917:34;;;-1:-1:-1;;;;;6614:23:7;;;;;3830:18:8;;6614:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6716:21:7;;;;;;:13;:21;;;;;;;;6738:10;6716:33;;;;;;;;:55;;6764:7;;6716:55;:::i;:::-;-1:-1:-1;;;;;6668:21:7;;;;;;:13;:21;;;;;;;;6690:10;6668:33;;;;;;;:103;;;;6800:16;;;:8;:16;;;;;:26;;6819:7;;6800:26;:::i;:::-;-1:-1:-1;;;;;6781:16:7;;;;;;:8;:16;;;;;;;;:45;;;;6840:13;:21;;;;;6862:10;6840:33;;;;;;6836:106;;6894:37;6912:6;6920:10;6894:17;:37::i;10392:1359::-;1045:6:0;;10453:7:7;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;10472:10:7::1;:42:::0;;-1:-1:-1;;10472:42:7::1;10485:29;10472:42;::::0;;10703:13:::1;::::0;-1:-1:-1;;;;;10703:13:7::1;:27:::0;10682:138:::1;;;::::0;;-1:-1:-1;;;10682:138:7;;9993:2:8;10682:138:7::1;::::0;::::1;9975:21:8::0;10012:18;;;10005:30;;;;10071:34;10051:18;;;10044:62;10142:34;10122:18;;;10115:62;10194:19;;10682:138:7::1;9791:428:8::0;10682:138:7::1;10851:23;10867:6;10851:15;:23::i;:::-;10830:108;;;::::0;-1:-1:-1;;;10830:108:7;;10426:2:8;10830:108:7::1;::::0;::::1;10408:21:8::0;10465:2;10445:18;;;10438:30;10504:34;10484:18;;;10477:62;-1:-1:-1;;;10555:18:8;;;10548:36;10601:19;;10830:108:7::1;10224:402:8::0;10830:108:7::1;11150:11;11181:9:::0;11176:506:::1;-1:-1:-1::0;;;;;11200:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:26;11196:30;::::1;11176:506;;;-1:-1:-1::0;;;;;11251:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11276:3;;11251:19;11271:1;;11251:22;::::1;;;;;:::i;:::-;;;;;;;;;:28;11247:425;;;-1:-1:-1::0;;;;;11305:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11325:1;;11305:22;::::1;;;;;:::i;:::-;;;;;;;;;11299:28;;11362:7;:15;11370:6;-1:-1:-1::0;;;;;11362:15:7::1;-1:-1:-1::0;;;;;11362:15:7::1;;;;;;;;;;;;11378:1;11362:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;11345:14:7;;::::1;::::0;;:6:::1;:14:::0;;;;;;;:35;;-1:-1:-1;;;;;;11345:35:7::1;11362:18:::0;;;::::1;11345:35;::::0;;11247:425:::1;;;-1:-1:-1::0;;;;;11405:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;:22;;11431:3;;11405:19;11425:1;;11405:22;::::1;;;;;:::i;:::-;;;;;;;;;:29;11401:271;;;11454:13;11470:7;11476:1;11470:3:::0;:7:::1;:::i;:::-;11454:23:::0;-1:-1:-1;11499:10:7;11495:163:::1;;-1:-1:-1::0;;;;;11550:15:7;::::1;;::::0;;;:7:::1;:15;::::0;;;;:18;;11566:1;;11550:18;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;11533:14:7;;::::1;::::0;;:6:::1;:14:::0;;;;;;;:35;;-1:-1:-1;;;;;;11533:35:7::1;11550:18:::0;;;::::1;11533:35;::::0;;11495:163:::1;;;11597:5;11606:1;11597:10;11593:65;;;11631:8;;;11593:65;11436:236;11401:271;11228:3:::0;::::1;::::0;::::1;:::i;:::-;;;;11176:506;;;-1:-1:-1::0;;11691:13:7::1;:22:::0;;-1:-1:-1;;;;;;11691:22:7::1;-1:-1:-1::0;;;;;11691:22:7;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;11730:14:7;;;:6:::1;:14;::::0;;;;;::::1;::::0;-1:-1:-1;1255:1:0::1;10392:1359:7::0;;;:::o;6954:203::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;7037:17:7::1;7023:10;::::0;::::1;;:31;::::0;::::1;;;;;;:::i;:::-;;7002:109;;;::::0;-1:-1:-1;;;7002:109:7;;10950:2:8;7002:109:7::1;::::0;::::1;10932:21:8::0;10989:2;10969:18;;;10962:30;11028:33;11008:18;;;11001:61;11079:18;;7002:109:7::1;10748:355:8::0;7002:109:7::1;7122:10;:28:::0;;7135:15:::1;::::0;7122:10;-1:-1:-1;;7122:28:7::1;::::0;7135:15;7122:28:::1;::::0;3265:274;3321:4;;3369:13;:20;3361:28;;3337:196;;;3445:6;-1:-1:-1;;;;;3421:30:7;:13;3435:5;3421:20;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3421:20:7;:30;3417:80;;;-1:-1:-1;3478:4:7;;3265:274;-1:-1:-1;;3265:274:7:o;3417:80::-;-1:-1:-1;3517:5:7;;3265:274;-1:-1:-1;;3265:274:7:o;3337:196::-;;3265:274;;;:::o;4075:516::-;-1:-1:-1;;;;;4218:23:7;;;4159:7;4218:23;;;:15;:23;;;;;;;4456:27;;-1:-1:-1;;;4456:27:7;;;;4159:7;;;;4218:23;;;;;4159:7;;4218:23;;4456:25;;:27;;;;;;;;;;;;;;;4218:23;4456:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4431:52;;;;;;4493:16;4520:9;-1:-1:-1;;;;;4520:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4567:5;;4512:29;;;;;-1:-1:-1;4567:5:7;;-1:-1:-1;;;;;4075:516:7:o;7163:1796::-;7249:1;7239:7;:11;7231:49;;;;-1:-1:-1;;;7231:49:7;;12383:2:8;7231:49:7;;;12365:21:8;12422:2;12402:18;;;12395:30;12461:27;12441:18;;;12434:55;12506:18;;7231:49:7;12181:349:8;7231:49:7;7298:22;7313:6;7298:14;:22::i;:::-;7290:60;;;;-1:-1:-1;;;7290:60:7;;7004:2:8;7290:60:7;;;6986:21:8;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:8;;;7055:55;7127:18;;7290:60:7;6802:349:8;7290:60:7;-1:-1:-1;;;;;7381:15:7;;;;;;:7;:15;;;;;:22;7406:1;-1:-1:-1;7360:129:7;;;;-1:-1:-1;;;7360:129:7;;12737:2:8;7360:129:7;;;12719:21:8;12776:2;12756:18;;;12749:30;12815:34;12795:18;;;12788:62;12886:26;12866:18;;;12859:54;12930:19;;7360:129:7;12535:420:8;7360:129:7;7521:15;7507:10;;;;:29;;;;;;;;:::i;:::-;;7499:68;;;;-1:-1:-1;;;7499:68:7;;13162:2:8;7499:68:7;;;13144:21:8;13201:2;13181:18;;;13174:30;13240:28;13220:18;;;13213:56;13286:18;;7499:68:7;12960:350:8;7499:68:7;7813:15;;-1:-1:-1;;;;;7803:25:7;;;7813:15;;;;;7803:25;7799:749;;;7844:8;;:57;;-1:-1:-1;;;7844:57:7;;7866:10;7844:57;;;7806:34:8;7886:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;7844:8:7;;;;:21;;7741:18:8;;7844:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7799:749;;;8405:63;;-1:-1:-1;;;8405:63:7;;8433:10;8405:63;;;7806:34:8;8453:4:7;7856:18:8;;;7849:43;7908:18;;;7901:34;;;-1:-1:-1;;;;;8405:27:7;;;;;7741:18:8;;8405:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7799:749;-1:-1:-1;;;;;8605:21:7;;;;;;:13;:21;;;;;;;;8627:10;8605:33;;;;;;;;:55;;8653:7;;8605:55;:::i;:::-;-1:-1:-1;;;;;8557:21:7;;;;;;:13;:21;;;;;;;;8579:10;8557:33;;;;;;;:103;;;;8674:15;;;:7;:15;;;;:22;8670:160;;-1:-1:-1;;;;;8717:16:7;;;;;;:8;:16;;;;;:26;;;8670:160;;;-1:-1:-1;;;;;8793:16:7;;;;;;:8;:16;;;;;;:26;;8812:7;;8793:26;:::i;:::-;-1:-1:-1;;;;;8774:16:7;;;;;;:8;:16;;;;;:45;8670:160;-1:-1:-1;;;;;8839:15:7;;;;;:7;:15;;;;;;;;:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8839:32:7;8860:10;8839:32;;;;;;8881:25;;;:17;:25;;;;;:37;;;;;;;;;:41;-1:-1:-1;7163:1796:7:o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;13517:2:8;1926:73:0::1;::::0;::::1;13499:21:8::0;13556:2;13536:18;;;13529:30;13595:34;13575:18;;;13568:62;-1:-1:-1;;;13646:18:8;;;13639:36;13692:19;;1926:73:0::1;13315:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;4686:340:7:-;-1:-1:-1;;;;;4811:21:7;;;4784:7;4811:21;;;:13;:21;;;;;;;:28;;;;;;;;;4889:13;4904:16;4924:21;4938:6;4924:13;:21::i;:::-;4888:57;;-1:-1:-1;4888:57:7;-1:-1:-1;5005:12:7;4888:57;5005:2;:12;:::i;:::-;-1:-1:-1;;;;;4964:21:7;;;;;;;:13;:21;;;;;;;;:28;;;;;;;;;;:36;;4995:5;;4964:36;:::i;:::-;4963:55;;;;:::i;:::-;4955:64;;;;4686:340;;;;;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;7752:1055:3:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:3;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;3020:25:8;;;3076:2;3061:18;;3054:34;3008:2;2993:18;;2846:248;7931:43:3;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:3;8290:16;;;;;;;;;;;;1005:51:4;;;;;15322:25:8;;;15363:18;;;15356:34;;;8283:4:3;15406:18:8;;;15399:60;15475:18;;;;15468:34;;;1005:51:4;;;;;;;;;;15294:19:8;;;;1005:51:4;;;995:62;;;;;;;;;8737:16:3;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:4;;;;;15670:19:8;;;15705:12;;;15698:28;;;1600:41:4;;;;;;;;;15742:12:8;;;;1600:41:4;;;1590:52;;;;;8770:32:3;1443:204:4;9600:786:7;9738:15;9724:10;;;;:29;;;;;;;;:::i;:::-;;9716:63;;;;-1:-1:-1;;;9716:63:7;;6654:2:8;9716:63:7;;;6636:21:8;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:51;6773:18;;9716:63:7;6452:345:8;9716:63:7;9811:1;9797:11;:15;9789:44;;;;-1:-1:-1;;;9789:44:7;;14948:2:8;9789:44:7;;;14930:21:8;14987:2;14967:18;;;14960:30;-1:-1:-1;;;15006:18:8;;;14999:46;15062:18;;9789:44:7;14746:340:8;9789:44:7;9843:10;:24;;;9877:18;9898:16;9912:2;9856:11;9898:16;:::i;:::-;9877:37;-1:-1:-1;9928:15:7;9924:60;;-1:-1:-1;9972:1:7;9924:60;10018:17;;-1:-1:-1;;;;;10018:17:7;9993:14;10010:26;;;:7;:26;;;;;;;;10050:13;:32;;;;;;10010:82;;;;;;;;:::i;:::-;;;;;;;;;;;;;10120:17;;;-1:-1:-1;;;;;10120:17:7;;;10102:36;;:17;:36;;;;;;10010:82;;;10102:44;;;;;;;;;:57;;;10181:17;;;;10169:30;;:11;:30;;;;;:47;;10010:82;10169:47;;;;;;;;;;;;;;;10240:17;;;;;10226:32;;:13;:32;;;;;;:37;;10010:82;;-1:-1:-1;10010:82:7;;;10226:37;;10010:82;;10226:37;:::i;:::-;;;;-1:-1:-1;;;;;;9600:786:7:o;5649:449::-;5726:13;;5749:175;-1:-1:-1;;;;;5773:15:7;;;;;;:7;:15;;;;;:22;5769:26;;5749:175;;;-1:-1:-1;;;;;5820:15:7;;;;;;;:7;:15;;;;;:18;;:27;;;;5836:1;;5820:18;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5820:18:7;:27;5816:98;;;5875:1;5867:9;;5894:5;;5816:98;5797:3;;;;:::i;:::-;;;;5749:175;;;-1:-1:-1;5950:5:7;5933:129;-1:-1:-1;;;;;5961:15:7;;;;;;:7;:15;;;;;:22;:26;;5986:1;;5961:26;:::i;:::-;5957:1;:30;5933:129;;;-1:-1:-1;;;;;6029:15:7;;;;;;:7;:15;;;;;6045:5;:1;6049;6045:5;:::i;:::-;6029:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6008:15:7;;;;;:7;:15;;;;;;;:18;;6029:22;;;;;6008:15;6024:1;;6008:18;;;;;;:::i;:::-;;;;;;;;;;:43;;-1:-1:-1;;;;;;6008:43:7;-1:-1:-1;;;;;6008:43:7;;;;;;;;;;5989:3;;;;:::i;:::-;;;;5933:129;;;;5716:382;5649:449;;:::o;3545:362::-;-1:-1:-1;;;;;3652:15:7;;3604:4;3652:15;;;:7;:15;;;;;:22;3604:4;;3644:30;3620:281;;-1:-1:-1;;;;;3716:15:7;;3699:14;3716:15;;;:7;:15;;;;;:22;;3732:5;;3716:22;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3756:25:7;;;;;:17;:25;;;;;;3716:22;;;;3756:33;;;;;;;;;3716:22;;-1:-1:-1;3756:38:7;3752:139;;-1:-1:-1;3821:4:7;;3545:362;-1:-1:-1;;;3545:362:7:o;3752:139::-;-1:-1:-1;3871:5:7;;3545:362;-1:-1:-1;;;3545:362:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:8:o;633:180::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;-1:-1:-1;784:23:8;;633:180;-1:-1:-1;633:180:8:o;818:186::-;877:6;930:2;918:9;909:7;905:23;901:32;898:52;;;946:1;943;936:12;898:52;969:29;988:9;969:29;:::i;:::-;959:39;818:186;-1:-1:-1;;;818:186:8:o;1217:260::-;1285:6;1293;1346:2;1334:9;1325:7;1321:23;1317:32;1314:52;;;1362:1;1359;1352:12;1314:52;1385:29;1404:9;1385:29;:::i;:::-;1375:39;;1433:38;1467:2;1456:9;1452:18;1433:38;:::i;:::-;1423:48;;1217:260;;;;;:::o;1664:127::-;1725:10;1720:3;1716:20;1713:1;1706:31;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1796:341;1941:2;1926:18;;1974:1;1963:13;;1953:144;;2019:10;2014:3;2010:20;2007:1;2000:31;2054:4;2051:1;2044:15;2082:4;2079:1;2072:15;1953:144;2106:25;;;1796:341;:::o;2142:248::-;2210:6;2218;2271:2;2259:9;2250:7;2246:23;2242:32;2239:52;;;2287:1;2284;2277:12;2239:52;-1:-1:-1;;2310:23:8;;;2380:2;2365:18;;;2352:32;;-1:-1:-1;2142:248:8:o;2395:254::-;2463:6;2471;2524:2;2512:9;2503:7;2499:23;2495:32;2492:52;;;2540:1;2537;2530:12;2492:52;2576:9;2563:23;2553:33;;2605:38;2639:2;2628:9;2624:18;2605:38;:::i;3322:356::-;3524:2;3506:21;;;3543:18;;;3536:30;3602:34;3597:2;3582:18;;3575:62;3669:2;3654:18;;3322:356::o;3962:277::-;4029:6;4082:2;4070:9;4061:7;4057:23;4053:32;4050:52;;;4098:1;4095;4088:12;4050:52;4130:9;4124:16;4183:5;4176:13;4169:21;4162:5;4159:32;4149:60;;4205:1;4202;4195:12;4244:127;4305:10;4300:3;4296:20;4293:1;4286:31;4336:4;4333:1;4326:15;4360:4;4357:1;4350:15;4376:422;4465:1;4508:5;4465:1;4522:270;4543:7;4533:8;4530:21;4522:270;;;4602:4;4598:1;4594:6;4590:17;4584:4;4581:27;4578:53;;;4611:18;;:::i;:::-;4661:7;4651:8;4647:22;4644:55;;;4681:16;;;;4644:55;4760:22;;;;4720:15;;;;4522:270;;;4526:3;4376:422;;;;;:::o;4803:806::-;4852:5;4882:8;4872:80;;-1:-1:-1;4923:1:8;4937:5;;4872:80;4971:4;4961:76;;-1:-1:-1;5008:1:8;5022:5;;4961:76;5053:4;5071:1;5066:59;;;;5139:1;5134:130;;;;5046:218;;5066:59;5096:1;5087:10;;5110:5;;;5134:130;5171:3;5161:8;5158:17;5155:43;;;5178:18;;:::i;:::-;-1:-1:-1;;5234:1:8;5220:16;;5249:5;;5046:218;;5348:2;5338:8;5335:16;5329:3;5323:4;5320:13;5316:36;5310:2;5300:8;5297:16;5292:2;5286:4;5283:12;5279:35;5276:77;5273:159;;;-1:-1:-1;5385:19:8;;;5417:5;;5273:159;5464:34;5489:8;5483:4;5464:34;:::i;:::-;5534:6;5530:1;5526:6;5522:19;5513:7;5510:32;5507:58;;;5545:18;;:::i;:::-;5583:20;;4803:806;-1:-1:-1;;;4803:806:8:o;5614:131::-;5674:5;5703:36;5730:8;5724:4;5703:36;:::i;5750:168::-;5790:7;5856:1;5852;5848:6;5844:14;5841:1;5838:21;5833:1;5826:9;5819:17;5815:45;5812:71;;;5863:18;;:::i;:::-;-1:-1:-1;5903:9:8;;5750:168::o;5923:127::-;5984:10;5979:3;5975:20;5972:1;5965:31;6015:4;6012:1;6005:15;6039:4;6036:1;6029:15;6055:120;6095:1;6121;6111:35;;6126:18;;:::i;:::-;-1:-1:-1;6160:9:8;;6055:120::o;6180:127::-;6241:10;6236:3;6232:20;6229:1;6222:31;6272:4;6269:1;6262:15;6296:4;6293:1;6286:15;6312:135;6351:3;-1:-1:-1;;6372:17:8;;6369:43;;;6392:18;;:::i;:::-;-1:-1:-1;6439:1:8;6428:13;;6312:135::o;9661:125::-;9701:4;9729:1;9726;9723:8;9720:34;;;9734:18;;:::i;:::-;-1:-1:-1;9771:9:8;;9661:125::o;10631:112::-;10663:1;10689;10679:35;;10694:18;;:::i;:::-;-1:-1:-1;10728:9:8;;10631:112::o;11108:128::-;11148:3;11179:1;11175:6;11172:1;11169:13;11166:39;;;11185:18;;:::i;:::-;-1:-1:-1;11221:9:8;;11108:128::o;11241:179::-;11319:13;;11372:22;11361:34;;11351:45;;11341:73;;11410:1;11407;11400:12;11425:473;11528:6;11536;11544;11552;11560;11613:3;11601:9;11592:7;11588:23;11584:33;11581:53;;;11630:1;11627;11620:12;11581:53;11653:39;11682:9;11653:39;:::i;:::-;11643:49;;11732:2;11721:9;11717:18;11711:25;11701:35;;11776:2;11765:9;11761:18;11755:25;11745:35;;11820:2;11809:9;11805:18;11799:25;11789:35;;11843:49;11887:3;11876:9;11872:19;11843:49;:::i;:::-;11833:59;;11425:473;;;;;;;;:::o;11903:273::-;11971:6;12024:2;12012:9;12003:7;11999:23;11995:32;11992:52;;;12040:1;12037;12030:12;11992:52;12072:9;12066:16;12122:4;12115:5;12111:16;12104:5;12101:27;12091:55;;12142:1;12139;12132:12;13975:766;14207:1;14203;14198:3;14194:11;14190:19;14182:6;14178:32;14167:9;14160:51;14141:4;14230:2;14268:6;14263:2;14252:9;14248:18;14241:34;14311:2;14306;14295:9;14291:18;14284:30;14343:6;14337:13;14386:6;14381:2;14370:9;14366:18;14359:34;14411:1;14421:141;14435:6;14432:1;14429:13;14421:141;;;14531:14;;;14527:23;;14521:30;14496:17;;;14515:3;14492:27;14485:67;14450:10;;14421:141;;;14580:6;14577:1;14574:13;14571:92;;;14651:1;14645:3;14636:6;14625:9;14621:22;14617:32;14610:43;14571:92;-1:-1:-1;14724:2:8;14703:15;-1:-1:-1;;14699:29:8;14684:45;;;;14731:3;14680:55;;13975:766;-1:-1:-1;;;;;13975:766:8:o", "language": "Solidity", "natspec": {"methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE43B54 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBD9C47E3 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xF1D76A5F EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xFE05CC9C EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD9C47E3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xCD5EA4F8 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xD65AB5F2 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C753122 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9C753122 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xB53472EF EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xB81BAA59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xB90C899D EQ PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE43B54 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x8B42EB7C EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D7C3B9 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x66CE6DAB GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x66CE6DAB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x6CBC2DED EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x87CD6AD2 EQ PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D7C3B9 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x66A1DF65 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AD95786 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2AD95786 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x3FDB144B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x3FF54C71 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F3BBD9 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xB26083C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x24398A85 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2521CC46 EQ PUSH2 0x259 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x244 PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x26C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x26C PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x244 PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x1385 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x21E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE PUSH1 0x0 DUP1 PUSH2 0x62C DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x63C DUP2 PUSH1 0xA PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x714 DUP3 DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x79B SWAP1 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x810 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x86A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374696C6C20646F65736E2774206B6E6F7720776869636820706C6179657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x34B9903BB4B73732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP3 AND DUP1 DUP8 MSTORE SWAP4 DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 SLOAD AND DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP1 DUP5 KECCAK256 SWAP2 DUP5 MSTORE SWAP2 MSTORE DUP2 KECCAK256 SSTORE POP DUP1 PUSH2 0xA86 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E2 JUMP JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD DUP4 DUP2 MSTORE DUP1 DUP4 ADD DUP1 DUP4 MSTORE SWAP6 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xAE7 SWAP3 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 DUP6 MSTORE PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xB1B SWAP3 SWAP1 PUSH2 0x200B JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH2 0xB97 PUSH1 0x0 PUSH2 0x1A67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xC1E SWAP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0xC51 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x5FD DUP3 DUP3 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDAC JUMPI PUSH2 0xDAC PUSH2 0x210A JUMP JUMPDEST EQ DUP1 PUSH2 0xDCE JUMPI POP PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCC PUSH2 0x210A JUMP JUMPDEST EQ JUMPDEST PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E2774206765742074686520726566756E642061667465722067 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616D65207374617274656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206469646E27742062657420746F6B656E206F662074686520616D6F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E7421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206472657720796F757220636172642C20796F752063616E2774207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x66756E6421 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xFCE SWAP1 DUP4 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP4 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x5FD JUMPI PUSH2 0x5FD DUP2 CALLER PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1100 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4265666F72652067616D65206973206E6F74206F766572207965742C206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572206861766520746F207061792072657761726420746F2077696E6E657221 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x1109 DUP3 PUSH2 0x1F0F JUMP JUMPDEST PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C207061727469636970616E7473206E6565647320746F20647261772061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x206361726421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x134C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x11F0 JUMPI PUSH2 0x11F0 PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x133A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x2333 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 PUSH2 0x12BB PUSH1 0x2 DUP5 PUSH2 0x237B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12EC JUMPI PUSH2 0x12EC PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x1338 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1338 JUMPI POP PUSH2 0x133A JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1344 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1168 JUMP JUMPDEST POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C8 JUMPI PUSH2 0x13C8 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774207374617274206E65772067616D65207374617465207965742100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1480 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1453 JUMPI PUSH2 0x1453 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1551 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x15D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4120626574206D757374206265206D6F7265207468616E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x151A1A5CC81D1BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 GT PUSH2 0x16B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792C20746869732067616D6520697320616C72656164792066756C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2E20506C656173652077616974206E6578742067616D652E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CF PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x171C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420626574206D6F6E6579207768696C6520000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x178E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B2 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x182F SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1860 SWAP1 DUP4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x18B5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18D9 SWAP1 DUP4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x19DE DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 PUSH2 0x1A11 DUP5 PUSH2 0x1486 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1A21 DUP2 PUSH1 0xA PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1A52 SWAP1 DUP5 SWAP1 PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x1A5C SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B99 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x1BF3 SWAP1 PUSH1 0x1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C49 PUSH2 0x210A JUMP JUMPDEST EQ PUSH2 0x1C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB4B5B9BDD0B599BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1CE3 PUSH1 0xE DUP4 PUSH2 0x237B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1CEE JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1D23 JUMPI PUSH2 0x1D23 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP3 AND DUP1 DUP8 MSTORE SWAP4 DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP9 SWAP1 SSTORE DUP3 SLOAD DUP3 AND DUP7 MSTORE PUSH1 0xD DUP6 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE DUP7 DUP9 KECCAK256 ADD DUP10 SWAP1 SSTORE SWAP3 SLOAD SWAP1 SWAP2 AND DUP6 MSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0x1D9C SWAP1 DUP5 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1DFA JUMPI PUSH2 0x1DFA PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1E1D JUMPI DUP1 SWAP2 POP PUSH2 0x1E2F JUMP JUMPDEST DUP1 PUSH2 0x1E27 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DAB JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E57 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2364 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1E81 DUP3 PUSH1 0x1 PUSH2 0x238F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1ECE JUMPI PUSH2 0x1ECE PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1F01 DUP2 PUSH2 0x2349 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E32 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 ISZERO PUSH2 0x1480 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1F59 JUMPI PUSH2 0x1F59 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0xB DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F9C JUMPI POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1FFB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1FFB JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST POP PUSH2 0x2007 SWAP3 SWAP2 POP PUSH2 0x2046 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1FFB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1FFB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x202B JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2007 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2047 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208E DUP4 PUSH2 0x205B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D0 DUP3 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F3 DUP4 PUSH2 0x205B JUMP JUMPDEST SWAP2 POP PUSH2 0x2101 PUSH1 0x20 DUP5 ADD PUSH2 0x205B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x2142 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2101 PUSH1 0x20 DUP5 ADD PUSH2 0x205B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2235 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221B PUSH2 0x21E4 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2228 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x21FF JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x224C JUMPI POP PUSH1 0x1 PUSH2 0x1A61 JUMP JUMPDEST DUP2 PUSH2 0x2259 JUMPI POP PUSH1 0x0 PUSH2 0x1A61 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x226F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2279 JUMPI PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x228A PUSH2 0x21E4 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1A61 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x22B8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x22C2 DUP4 DUP4 PUSH2 0x21FA JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 PUSH2 0x21E4 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D0 DUP4 DUP4 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2304 PUSH2 0x21E4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x232E JUMPI PUSH2 0x232E PUSH2 0x2309 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x21E4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2376 PUSH2 0x21E4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x238A JUMPI PUSH2 0x238A PUSH2 0x2309 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23A2 JUMPI PUSH2 0x23A2 PUSH2 0x21E4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E2 DUP7 PUSH2 0x23A7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2405 PUSH1 0x80 DUP8 ADD PUSH2 0x23A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2476 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x245A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 JUMP STOP 0xB3 0x26 0xC5 POP SSTORE 0xBF GAS 0xE0 PUSH7 0xB99420E8F5556D JUMPDEST PUSH21 0x1430F89F32F211AE41833F64736F6C634300080A00 CALLER ", "sha1": "9a0cd5fdac56b111ade7171146f0a15148981b58", "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // to create my own token or make available the token on smart contract\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\"; // to get current rate of currencies\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\"; // to get randomness function\n\ncontract CardGame is VRFConsumerBase, Ownable {\n    bytes32 public keyHash;\n    uint256 public fee;\n    event RequestedRandomness(bytes32 requestId);\n\n    enum GAME_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    GAME_STATE public game_state;\n    address public mscTokenAddress;\n    IERC20 public mscToken;\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyHash,\n        address _mscTokenAddress\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        keyHash = _keyHash;\n        fee = _fee;\n        game_state = GAME_STATE.CLOSED;\n        mscTokenAddress = _mscTokenAddress;\n        mscToken = IERC20(_mscTokenAddress);\n    }\n\n    // token address > player address > amount\n    mapping(address => mapping(address => uint256)) public wagerOfPlayer;\n\n    // token address > priceFeed address\n    mapping(address => address) public tokenPriceFeeds;\n    //address[] public players;\n    // token address > player address list\n    mapping(address => address[]) public players;\n    address[] public allowedTokens;\n    //uint256 public totalPot = 0;\n    // token address > totalBetValue\n    mapping(address => uint256) public totalPot;\n    // token address > player address > card number\n    mapping(address => mapping(address => uint256)) public playersCardNumber;\n    // token > number of players\n    mapping(address => uint256) public playerCounter;\n    //uint256[] public cardsNumber;\n    mapping(address => uint256[]) public cardNumbers;\n    //address public winner = address(0); // you can't use 'null' in solidity\n    // token > winner\n    mapping(address => address) public winner;\n    //address public tokenToRandomness = address(0);\n    //player address => token addrss (to prevent to make not to people confuse when require randomness)\n    address public tokenToRandomness = address(0);\n    address public competedToken = address(0);\n    uint256 public randomness;\n\n    //function showMSCTokenAddress() public returns (address) {\n    //return mscTokenAddress;\n    //}\n    //function returnPublicVariables() public view returns () {\n    //return (game_state);\n    //}\n\n    function sendMSCToken(uint256 _amount) public onlyOwner {\n        mscToken.transfer(msg.sender, _amount); // from contract_address to owner_address\n    }\n\n    function issueTokens(address _token) public onlyOwner {\n        for (uint256 index = 0; index < players[_token].length; index++) {\n            address recipient = players[_token][index];\n            uint256 userTotalValue = getUserSingleTokenValue(recipient, _token);\n            mscToken.transfer(recipient, userTotalValue); // send players MSCToken as a reward\n        }\n    }\n\n    function allowToken(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    function tokenIsAllowed(address _token) public returns (bool) {\n        for (uint256 index = 0; index < allowedTokens.length; index += 1) {\n            if (allowedTokens[index] == _token) {\n                return true;\n            }\n            return false;\n        }\n    }\n\n    function playerIsAllowed(address _token) internal returns (bool) {\n        for (uint256 index = 0; index < players[_token].length; index++) {\n            address player = players[_token][index];\n            if (playersCardNumber[_token][player] != 0) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeeds[_token] = _priceFeed;\n    }\n\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeeds[_token];\n        // AggregatorV3Interface is for getting current rate of currencies\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // this func is for just calculating prices to send MSCToken to players as a reward.\n    function getUserSingleTokenValue(address _user, address _token)\n        internal\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][_user] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        return ((wagerOfPlayer[_token][_user] * price) / (10**decimals));\n    }\n\n    // this func is for UI which each user use\n    function getPlayerSingleTokenValue(address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (wagerOfPlayer[_token][msg.sender] < 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        // 10 ETH (100000000000000000000)\n        // ETH/USD -> 100 (10000000000)\n        // 10 * 100 = 1,000\n        return ((wagerOfPlayer[_token][msg.sender] * price) / (10**decimals));\n    }\n\n    //function balanceOfCG() public view returns (uint256) {\n    //return address(this).balance;\n    //}\n\n    function removeFromPlayers(address _token, address _user) internal {\n        uint256 index;\n        for (uint256 i = 0; i < players[_token].length; i++) {\n            if (players[_token][i] == _user) {\n                index = i;\n                break;\n            }\n        }\n        for (uint256 e = index; e < players[_token].length - 1; e++) {\n            players[_token][e] = players[_token][e + 1];\n        }\n        //playerCounter -= 1;\n    }\n\n    function repayBetToken(uint256 _amount, address _token) public {\n        require(\n            game_state == GAME_STATE.OPEN || game_state == GAME_STATE.CLOSED,\n            \"You can't get the refund after game started!\"\n        );\n        require(\n            wagerOfPlayer[_token][msg.sender] >= _amount,\n            \"You didn't bet token of the amount!\"\n        );\n        require(\n            playersCardNumber[_token][msg.sender] == 0,\n            \"You drew your card, you can't refund!\"\n        );\n        IERC20(_token).transfer(msg.sender, _amount);\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] -\n            _amount;\n        totalPot[_token] = totalPot[_token] - _amount;\n        if (wagerOfPlayer[_token][msg.sender] <= 0) {\n            removeFromPlayers(_token, msg.sender);\n        }\n    }\n\n    function startGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CLOSED,\n            \"Can't start new game state yet!\"\n        );\n\n        game_state = GAME_STATE.OPEN;\n    }\n\n    function betMoney(uint256 _amount, address _token) public {\n        require(_amount > 0, \"A bet must be more than 0\");\n        require(tokenIsAllowed(_token), \"This token is not allowed\");\n        require(\n            players[_token].length < 5,\n            \"Sorry, this game is already full. Please wait next game.\"\n        );\n        require(game_state == GAME_STATE.OPEN, \"You can't bet money while \");\n        //require(\n        //IERC20(_token).balanceOf(msg.sender) > 0,\n        //\"You don't have this token!\"\n        //);\n        //msg.sender.transfer(_amount);\n        //IERC20(_token).approve(address(this), _amount);\n\n        if (_token == mscTokenAddress) {\n            mscToken.transferFrom(msg.sender, address(this), _amount); // this 'msg.sender' must be owner of MSCToken, not third party address\n            //mscToken.transfer(address(this), _amount); // transfer(toAddress, amount);  sender(who call this func(this contact)) sends amount of token to toAddress\n        } else {\n            //IERC20(_token).transferFrom(msg.sender, address(this), _amount); // this function is avaiable only when owner of the token who gived the right this contract to handle allowance with approve function gives token to users.\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount); // you can't use transferFrom when user send token to this contract.\n        }\n        wagerOfPlayer[_token][msg.sender] =\n            wagerOfPlayer[_token][msg.sender] +\n            _amount;\n        if (players[_token].length <= 0) {\n            totalPot[_token] = _amount;\n        } else {\n            totalPot[_token] = totalPot[_token] + _amount;\n        }\n        players[_token].push(msg.sender);\n        playersCardNumber[_token][msg.sender] = 0;\n        //playerCounter += 1;\n    }\n\n    function drawCards(address _token) public {\n        tokenToRandomness = _token;\n\n        bytes32 requestId = requestRandomness(keyHash, fee);\n        emit RequestedRandomness(requestId);\n\n        //for (uint256 i = 0; i < players[competedToken].length; i++) {\n        //bytes32 requestId = requestRandomness(keyHash, fee); // let fulfillRandomness do\n        //emit RequestedRandomness(requestId);\n        //playerCounter += 1;\n        //}\n        //bytes32 requestId = requestRandomness(keyHash, fee);\n        //playerCounter = 0;\n    }\n\n    // Don't use 'msg.sender' in fulfillRandomness, cause user of this function is contract\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(game_state == GAME_STATE.OPEN, \"You aren't there yet!\");\n        require(_randomness > 0, \"random-not-found\");\n        randomness = _randomness;\n        uint256 cardNumber = _randomness % 14;\n        if (cardNumber == 0) {\n            cardNumber = 1;\n        }\n        address player = players[tokenToRandomness][\n            playerCounter[tokenToRandomness]\n        ];\n        playersCardNumber[tokenToRandomness][player] = cardNumber;\n        cardNumbers[tokenToRandomness].push(cardNumber);\n        playerCounter[tokenToRandomness] += 1;\n        //address player = players[competedToken][playerCounter];\n        //playersCardNumber[player] = cardNumber;\n    }\n\n    function getWinner(address _token) public onlyOwner returns (address) {\n        game_state = GAME_STATE.CALCULATING_WINNER; // this should be moved to getWinner\n        //require(\n        //game_state == GAME_STATE.CALCULATING_WINNER,\n        //\"Game is not over yet!\"\n        //);\n        require(\n            competedToken == address(0),\n            \"Before game is not over yet, owner have to pay reward to winner!\"\n        );\n        require(\n            playerIsAllowed(_token),\n            \"All participants needs to draw a card!\"\n        );\n\n        //for (uint256 i = 0; i < players[competedToken].length; i++) {\n        //uint256 cardNumber = playersCardNumber[players[competedToken][i]];\n        //cardsNumber.push(cardNumber);\n        //}\n        uint256 max = 0;\n\n        for (uint256 c = 0; c < cardNumbers[_token].length; c++) {\n            if (cardNumbers[_token][c] > max) {\n                max = cardNumbers[_token][c];\n                winner[_token] = players[_token][c];\n            } else if (cardNumbers[_token][c] == max) {\n                uint256 judge = max % 2;\n                if (judge == 0) {\n                    winner[_token] = players[_token][c];\n                } else if (judge == 1) {\n                    continue;\n                }\n            }\n        }\n        competedToken = _token;\n        return winner[_token];\n    }\n\n    function endGame() public onlyOwner {\n        require(\n            game_state == GAME_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(tokenIsAllowed(competedToken), \"This token is not allowed\");\n        require(\n            winner[competedToken] != address(0),\n            \"Still doesn't know which player is winner\"\n        );\n        //IERC20(_token).transfer(msg.sender, totalPot);\n        IERC20(competedToken).transferFrom(\n            msg.sender,\n            winner[competedToken],\n            totalPot[competedToken]\n        ); // You can use transferFrom only when you sends tokens to user. It's impossibel the reverse\n        totalPot[competedToken] = 0;\n        //players = new address[];\n        for (\n            uint256 index = 0;\n            index < players[competedToken].length;\n            index++\n        ) {\n            address player = players[competedToken][index];\n            wagerOfPlayer[competedToken][player] = 0;\n            playersCardNumber[competedToken][player] = 0;\n        }\n        tokenToRandomness = address(0);\n        playerCounter[competedToken] = 0;\n        players[competedToken] = new address[](0);\n        cardNumbers[competedToken] = new uint256[](0);\n        winner[competedToken] = address(0);\n        competedToken = address(0);\n        game_state = GAME_STATE.CLOSED;\n    }\n}\n", "sourceMap": "444:12678:7:-:0;;;2288:45;;;-1:-1:-1;;;;;;2288:45:7;;;;;;2339:41;;;;;;;;783:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:3;;;;;9407;;;;867:23:0;665:10:2;867:9:0;:23::i;:::-;996:7:7::1;:18:::0;;;;1024:3:::1;:10:::0;;;;1044::::1;:30:::0;;1057:17:::1;-1:-1:-1::0;;;;;;1084:34:7;;;::::1;-1:-1:-1::0;;;;;1084:34:7;;::::1;::::0;;::::1;::::0;;;;1128:8:::1;:35:::0;;-1:-1:-1;;;;;;1128:35:7::1;::::0;;::::1;::::0;;-1:-1:-1;444:12678:7;;-1:-1:-1;444:12678:7;2041:169:0;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;575:2;564:9;560:18;554:25;544:35;;619:2;608:9;604:18;598:25;588:35;;642:50;687:3;676:9;672:19;642:50;:::i;:::-;632:60;;196:502;;;;;;;;:::o;703:127::-;444:12678:7;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/CardGame.sol", "deployment": {"address": "0x197C8c8cf058444092e944cA8C99FA2c595F86AE", "chainid": "42", "blockHeight": 30016189}}